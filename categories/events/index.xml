
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>events on Fabrefact</title>
   <link>https://blog.fabrefact.ca/categories/events/</link>
   <description>Recent content in events on Fabrefact</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <copyright>&amp;copy; 2019 Sara Farquharson</copyright>
   <lastBuildDate>Mon, 24 Aug 2020 22:40:34 -0700</lastBuildDate>
   
       <atom:link href="https://blog.fabrefact.ca/categories/events/index.xml" rel="self" type="application/rss+xml" />
   
   
   
   
     <item>
       <title>Lessons learned from a Recurse Center mini-batch</title>
       <link>https://blog.fabrefact.ca/posts/lessons-from-recurse-mini-batch/</link>
       <pubDate>Mon, 24 Aug 2020 22:40:34 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/lessons-from-recurse-mini-batch/</guid>
       <description>&lt;p&gt;A few weeks ago I impulsively applied for the August mini-batch at the Recurse Center. I&amp;rsquo;d been idly daydreaming about attending Recurse when traveling to New York seems feasible again, assuming I could figure out how to make it work with my job. I then realised that the one-week mini-batch would only require me to take a week&amp;rsquo;s vacation, and this year&amp;rsquo;s virtual events meant I wouldn&amp;rsquo;t even have to tack on the stress of travel!&lt;/p&gt;
&lt;p&gt;My 5-day batch in mid-August was over in a flash, but I had a lot of fun. Here&amp;rsquo;s some things I learned, in no particular order:&lt;/p&gt;
&lt;h2 id=&#34;lesson-1-rc-isnt-just-for-coding-wizards&#34;&gt;Lesson 1: RC isn&amp;rsquo;t just for coding wizards&lt;/h2&gt;
&lt;p&gt;I stressed out quite a bit about applying, because I had in my head that RC was for &amp;ldquo;real&amp;rdquo; programmers who do things like write compilers and start open-source art projects and understand Haskell and finish any of their side projects. Mostly this was because everyone I talked to who had been through RC seemed so smart and accomplished. It was intimidating!&lt;/p&gt;
&lt;p&gt;Despite my fears about not meeting the &amp;ldquo;higher standards&amp;rdquo; for the mini batch, I was accepted and made to feel totally welcome. I met people at Recurse with all sorts of backgrounds, from career changers and bootcamp grads to very experienced engineers. The only thing everyone has in common is a drive to learn new things.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t know that I would have applied to RC earlier if I had known I wasn&amp;rsquo;t &amp;ldquo;too junior&amp;rdquo; to be considered, but I sure would have been less anxious about my application!&lt;/p&gt;
&lt;h2 id=&#34;lesson-2-about-50-of-a-mini-batch-is-socializing&#34;&gt;Lesson 2: About 50% of a mini-batch is socializing&lt;/h2&gt;
&lt;p&gt;The mini batches happen during the first week of each incoming batch. For the people attending a full or half batch, this first week is a chance to get familiar with Recurse, meet everyone, and figure out what you&amp;rsquo;re going to work on. There&amp;rsquo;s a lot of events scheduled, and new members are encouraged to attend as many as possible. It makes sense to focus on mingling if you have five-plus more weeks to work on projects, but what if that week is all you get?&lt;/p&gt;
&lt;p&gt;I planned to spend the whole week heads-down coding, but in the days leading up to the start, the escalating number of emails and invites and meetups forced me to reconsider. While it would certainly be &lt;em&gt;possible&lt;/em&gt; to attend a Recurse batch and not participate in the social events, it seems like a giant waste of opportunity.&lt;/p&gt;
&lt;p&gt;The first day is pretty heavy on scheduled events, which I decided to lean into and not worry about &amp;ldquo;being productive&amp;rdquo;. After that I made sure to attend one or two events that sounded interesting every day, and let focused work happen where it may.&lt;/p&gt;
&lt;p&gt;I unfortunately picked a project that was hard to collaborate on, but I did do a few pairing sessions on unrelated problems and overall was happy with how I divided my time.&lt;/p&gt;
&lt;h2 id=&#34;lesson-3-remote-pairing-requires-clear-communication&#34;&gt;Lesson 3: Remote pairing requires clear communication&lt;/h2&gt;
&lt;p&gt;I was excited to try out pair programming at RC, since it&amp;rsquo;s not something I&amp;rsquo;ve had much opportunity to do at work. One of the first events was a pair-programming workshop, which I think went really well. I did another pairing session that I felt I floundered a little on without the additional structure of the workshop.&lt;/p&gt;
&lt;p&gt;It quickly became clear to me that if both parties have access to edit the code but can&amp;rsquo;t see each other, clearly stating who is in the driver/navigator roles is very important. If you&amp;rsquo;re both in the same room you have body language to work with (and can&amp;rsquo;t both be typing at the same time) so there&amp;rsquo;s a little more implicit communication, but over the internet it&amp;rsquo;s all verbal. This is always harder than I think it&amp;rsquo;s going to be!&lt;/p&gt;
&lt;p&gt;There were inevitable technology glitches with the remote coding platform we used, which sometimes made it so the other person couldn&amp;rsquo;t see what you typed. This drove home the importance of you both being in agreement about who is supposed to be typing.&lt;/p&gt;
&lt;p&gt;I still don&amp;rsquo;t know what the proper etiquette is when neither pair knows how to proceed and you need to look things up. Do you both halt and research? One person read their findings out loud? There&amp;rsquo;s probably no one right answer to this.&lt;/p&gt;
&lt;h2 id=&#34;lesson-4-dont-try-to-learn-a-language-and-complete-a-project-in-one-week&#34;&gt;Lesson 4: Don&amp;rsquo;t try to learn a language and complete a project in one week&lt;/h2&gt;
&lt;p&gt;My goal was to make some serious progress on writing a distributed key-value store in Rust, and by mid-week I was buried in error messages about lifetimes and borrowing. This phase of learning Rust is apparently known as &amp;ldquo;fighting the borrow checker&amp;rdquo;. I felt a little frustrated at my lack of progress, and also blocked from working collaboratively.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s possible a more outgoing person would have found a way to turn these error messages into a pairing problem, but my reaction to being confused is to silently read seventeen different articles, which isn&amp;rsquo;t ideal for collaboration. Instead I only worked with other people while ignoring my main project.&lt;/p&gt;
&lt;p&gt;If I were to do this again, I would pick a goal of &lt;em&gt;either&lt;/em&gt; learning a new language (ie, learn Rust by doing small problems every day) &lt;em&gt;or&lt;/em&gt; a specific project (make a web app), but not both at the same time in one week.&lt;/p&gt;
&lt;h2 id=&#34;lesson-5-virtual-rc-replicates-many-aspects-of-in-person-eventsincluding-the-social-anxiety&#34;&gt;Lesson 5: Virtual RC replicates many aspects of in-person events—including the social anxiety&lt;/h2&gt;
&lt;p&gt;My first reaction to logging in to Virtual RC was exactly the same as when I showed up to !!Con—panic that I didn&amp;rsquo;t know where I was supposed to go or which room the first event was being held in! Is it ok if I stand near these people or are they all friends who know each other and I&amp;rsquo;m just being weird?! I don&amp;rsquo;t know the etiquette for touching things so I don&amp;rsquo;t want to touch anything! o no! (In both cases things turned out fine.)&lt;/p&gt;
&lt;p&gt;There were very cool aspects of the Virtual RC platform: I got the feeling of being in a space with other people without having to be in a Zoom call all day, there were defined places to go for events, and the audio rooms were a cool way to create and join voice chats in a low-friction way. It took most of the week before I got comfortable making links and notes, but if I spend more time there I can see it feeling second nature.&lt;/p&gt;
&lt;p&gt;The main downsides I found were that the interface is a little opaque if you&amp;rsquo;ve never seen it before, and there was rarely an easy way to casually discover what other people are up to without asking them directly. On the one hand this latter point helps enforce the &amp;ldquo;no back-seat driving&amp;rdquo; social rule (you can&amp;rsquo;t shout into a conversation without joining it); on the other hand approaching people directly without first receiving social cues that I would be welcome is a major anxiety trigger for me.&lt;/p&gt;
&lt;p&gt;Virtual RC has ways for people to indicate what is going on in a given room, but I found they were used haphazardly. Often I would see a group of interesting people on a call and have no idea if it was ok to wander in, or if it was something you had to sign up for in advance.&lt;/p&gt;
&lt;p&gt;This was counteracted by the fact that many events were announced on Zulip and visible on the calendar so it&amp;rsquo;s not like I had a shortage of events. I just wish there was a way to casually overhear what&amp;rsquo;s going on in a room without (metaphorically) throwing open the door and announcing your name!&lt;/p&gt;
&lt;p&gt;I am interested in seeing how the platform continues to evolve, and also looking into other &amp;ldquo;hallway track&amp;rdquo; platforms.&lt;/p&gt;
&lt;h2 id=&#34;lesson-6-its-okay-to-relax&#34;&gt;Lesson 6: It&amp;rsquo;s okay to relax&lt;/h2&gt;
&lt;p&gt;My week at Recurse coincided with a week of beautiful weather in my city and a few social commitments I hadn&amp;rsquo;t planned on. Rather than stress out about all the coding I wasn&amp;rsquo;t getting done and working late into the night, I tended to log off shortly after the East Coast contingent disappeared (mid-afternoon my time), and go read a book in the sunshine.&lt;/p&gt;
&lt;p&gt;I was a little disappointed in my lack of coding progress, but when my week ended I still felt excited about programming! I continued working on my Rust project through the weekend and got it working by Sunday.&lt;/p&gt;
&lt;p&gt;The end result of not pushing myself was I had a relaxing vacation, met a bunch of cool people, and still succeeded in achieving my target for my Rust project (if a couple days late.) A++ would recommend taking breaks and naps and coffee chats!&lt;/p&gt;
&lt;p&gt;Overall I had a very good time at virtual Recurse Center, and I look forward to maybe attending a batch in New York in the future.&lt;/p&gt;
</description>
     </item>
   
     <item>
       <title>Women Unite Over CTF - Solving Challenges</title>
       <link>https://blog.fabrefact.ca/posts/women-unite-over-ctf-solving-challenges/</link>
       <pubDate>Mon, 04 Nov 2019 16:04:02 -0800</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/women-unite-over-ctf-solving-challenges/</guid>
       <description>&lt;p&gt;The winner of the Women Unite Over CTF, Jaime Lightfoot, quickly posted writeups about how she solved the challenges. These posts (&lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-networking-challenges/&#34;&gt;networking challenges&lt;/a&gt;, &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-reverse-engineering-challenges/&#34;&gt;reverse engineering&lt;/a&gt;, and &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-linux-exploitation/&#34;&gt;Linux exploitation&lt;/a&gt;) are excellent for the same reasons I enjoyed the event in general: my main barrier to entry is not knowing what tools to use or what to look for.&lt;/p&gt;
&lt;p&gt;I thought of including details of my own problem-solving approach in my &lt;a href=&#34;https://blog.fabrefact.ca/fabrefact/posts/wtf-is-a-ctf/&#34;&gt;last post&lt;/a&gt;, but I didn&amp;rsquo;t have the forethought to take any screenshots. Since I was working in a provided VM, I don&amp;rsquo;t even have any of the challenge files or tools on my own computer. However, I ended up solving exactly the same problems as two of Jaime&amp;rsquo;s posts, so here I will simply talk about how my solutions differed from hers.&lt;/p&gt;
&lt;h1 id=&#34;networking-challenges&#34;&gt;Networking challenges&lt;/h1&gt;
&lt;p&gt;(See &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-networking-challenges/&#34;&gt;Women Unite Over CTF - Networking Challenges&lt;/a&gt; for Jaime&amp;rsquo;s solutions, with screenshots.)&lt;/p&gt;
&lt;p&gt;I opened up the networking challenges because technical difficulties delayed the start of the reverse engineering walkthroughs. I hovered over random icons in the Kali Linux VM, hoping that one of them was a tool for looking at network information. Luckily Wireshark was prominently placed!&lt;/p&gt;
&lt;p&gt;I have literally never used Wireshark before, but it&amp;rsquo;s the tool everyone talks about so it seemed an obvious choice. I solved these pretty slowly, but now that I know a little bit about Wireshark I expect to be faster next time.&lt;/p&gt;
&lt;h3 id=&#34;level-1-helpfulwine&#34;&gt;level 1: helpfulwine&lt;/h3&gt;
&lt;p&gt;As soon as I opened the file and selected a packet at random, the flag showed up in the bottom pane. My first flag! It took a bit of trial and error to figure out how to copy it—I eventually had to paste whatever I copied into a text editor in order to strip out all the extraneous content before pasting the flag into the form.&lt;/p&gt;
&lt;h3 id=&#34;level-2-rhetoricalairplane&#34;&gt;level 2: rhetoricalairplane&lt;/h3&gt;
&lt;p&gt;Jaime used &lt;code&gt;frame contains &amp;quot;flag&amp;quot;&lt;/code&gt; in all of these to narrow down which packet contained the flag text, but I just clicked around randomly until I found it.&lt;/p&gt;
&lt;h3 id=&#34;level-3-numberlesslove&#34;&gt;level 3: numberlesslove&lt;/h3&gt;
&lt;p&gt;Again I just clicked around randomly looking for something called &amp;ldquo;flag&amp;rdquo;. Used the exact same strategy as Jaime here, which is heartening!&lt;/p&gt;
&lt;h3 id=&#34;level-4-warmsong&#34;&gt;level 4: warmsong&lt;/h3&gt;
&lt;p&gt;This is where I slowed down a lot, because I didn&amp;rsquo;t know about the Export Objects function. I could see from the headers that it was a .docx so I assumed I had to extract the doc and open it&amp;hellip;but I didn&amp;rsquo;t know how. I tried looking at a bunch of different packets, right clicking on things, copying and pasting the bytes into a file&amp;hellip;eventually I realized this must be a common problem and started looking for an export function.&lt;/p&gt;
&lt;p&gt;Once I successfully save the .doc, my next challenge was how to open a Word document in an unfamiliar OS. I searched for something like &amp;ldquo;how to open word doc linux command line&amp;rdquo; and learned &lt;code&gt;lowriter flag.doc&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;level-5-savoryhill&#34;&gt;level 5: savoryhill&lt;/h3&gt;
&lt;p&gt;Now that I knew about Export Objects function this went quickly. Export object as PNG, do a quick search to figure out what kind of program on Linux can open PNGs. The first search result suggested that &lt;code&gt;xdg-open&lt;/code&gt; is a good way to open a file in its default program.&lt;/p&gt;
&lt;h1 id=&#34;reverse-engineering-challenges&#34;&gt;Reverse engineering challenges&lt;/h1&gt;
&lt;p&gt;(See &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-reverse-engineering-challenges/&#34;&gt;Women Unite Over CTF – Reverse Engineering Challenges&lt;/a&gt; for Jaime&amp;rsquo;s solutions, with screenshots.)&lt;/p&gt;
&lt;p&gt;The reverse engineering challenges had walkthroughs on the live stream, which is good because I definitely wouldn&amp;rsquo;t have gotten anywhere without them!&lt;/p&gt;
&lt;h3 id=&#34;level-1-calculateerratic&#34;&gt;level 1: calculateerratic&lt;/h3&gt;
&lt;p&gt;I followed Nada&amp;rsquo;s walkthrough and used Binary Ninja, using the &lt;code&gt;View &amp;gt; Strings&lt;/code&gt; option Jaime mentions in the next problem. Nada talked about the &lt;code&gt;strings&lt;/code&gt; command but I never tried it.&lt;/p&gt;
&lt;h3 id=&#34;level-2-dustyabandon&#34;&gt;level 2: dustyabandon&lt;/h3&gt;
&lt;p&gt;The walkthroughs were also available as PDFs shared in the event Slack, so I started working a little ahead of the livestream. I spent a bunch of time in Binary Ninja, clicking on different views and trying to remember everything I ever knew about assembly.&lt;/p&gt;
&lt;p&gt;I found the password-constructing subfunction (&lt;code&gt;sub_40100&lt;/code&gt; highlighted in Jaime&amp;rsquo;s writeup), and the PDF said something about using &lt;code&gt;R&lt;/code&gt; in Binary Ninja to switch to character representations, but I wasn&amp;rsquo;t able to make heads nor tails of this code and didn&amp;rsquo;t know what I was supposed to be switching. I waited for Nada&amp;rsquo;s livestream to catch up. It seemed obvious as soon as Nada pointed out the hex codes!&lt;/p&gt;
&lt;p&gt;Definitely don&amp;rsquo;t recognize hex values in the ASCII range off the top of my head, but maybe that&amp;rsquo;s a skill to acquire?&lt;/p&gt;
&lt;h3 id=&#34;level-3-etherealshop&#34;&gt;level 3: etherealshop&lt;/h3&gt;
&lt;p&gt;By now I expected a program with a similar design to the first two and opened it up in Binary Ninja to verify the same pattern of password comparison. I kind of went down a rabbit hole trying to understand what assembly was doing and tuned into the livestream to get back on track.&lt;/p&gt;
&lt;p&gt;This is where my solution differed from Jaime&amp;rsquo;s by a lot—the documentation suggested switching to dynamic analysis so I opened up the program in Ollydbg. (Sorry no screenshots for this part.) I used an address I had found in Binary Ninja to get to the right section of code, but mostly poked around trying to understand the interface until Nada started talking about setting a breakpoint.&lt;/p&gt;
&lt;p&gt;Breakpoints I understand! The step-in/step-over commands are similar to every IDE debugger I&amp;rsquo;ve used, so it didn&amp;rsquo;t take long to step through until the flag showed up in a register.&lt;/p&gt;
&lt;h3 id=&#34;level-4-expertquestion&#34;&gt;level 4: expertquestion&lt;/h3&gt;
&lt;p&gt;By now the contest was well over, and the Escalate platform was actually quite responsive, so I decided to tackle one more difficult problem. This one didn&amp;rsquo;t have a walkthrough!&lt;/p&gt;
&lt;p&gt;I started the same process I&amp;rsquo;d gone through with all the other RE problems. Like Jaime, I found that the password encryption now had three functions doing mysterious things to the encrypted password that looked very hairy to decipher in static analysis. Unlike Jaime, I did not have any insights over hard-coded bytes and encryption methods. Instead I opened up Ollydbg for some dynamic analysis.&lt;/p&gt;
&lt;p&gt;This part was a bit of a slog. Unlike level 3, the password didn&amp;rsquo;t show up conveniently in the little window that seemed to hold the current instruction. When I stepped through the comparison of the user-entered text to the password, it instead went straight to the &amp;ldquo;You are not leet enough&amp;rdquo; message. I went back further and started stepping through the entire decryption function.&lt;/p&gt;
&lt;p&gt;Throughout this I was trying to piece together more about how Ollydbg works. There&amp;rsquo;s a large pane in the top left that contains your program, and one on the top right that shows the contents of all the registers (as well as some other stuff that I never understood.) In the bottom right shows the stack—you can scroll down through it to see all the pointers in the call stack from other functions.&lt;/p&gt;
&lt;p&gt;That left the pane in the lower left as being I assume the heap? While stepping through the decryption process I eventually saw stuff starting to change here. At first it appeared to be random gibberish, but it still looked like a clue.&lt;/p&gt;
&lt;p&gt;The decryption has a bunch of loops, and I learned how to recognize what a loop looks like in assembly and skip to the next instruction if nothing relevant seems to happen inside. This was not the most efficient method, but I was worried if I skipped too far ahead I would miss the flag again!&lt;/p&gt;
&lt;p&gt;After far too long of this, the flag unscrambled itself in the pane I decided was the heap. Victory!&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Jaime&amp;rsquo;s walkthroughs were a great refresher and a beginner-friendly introduction to some new techniques. I look forward to reading more from her, and maybe—just maybe—I&amp;rsquo;ll remember to take some screenshots of my own next time.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>WTF is a CTF? A beginner&#39;s adventure</title>
       <link>https://blog.fabrefact.ca/posts/wtf-is-a-ctf/</link>
       <pubDate>Sat, 02 Nov 2019 18:24:49 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/wtf-is-a-ctf/</guid>
       <description>&lt;p&gt;Today I reverse-engineered binaries and pored over packet captures to find hidden information under a deadline, thereby checking another box in my quest to be the coolest person my 14-year-old self could imagine. This was all part of &lt;a href=&#34;https://ittakesahuman.com/lp/WomenUniteOverCTF.html&#34;&gt;Women Unite Over CTF&lt;/a&gt;, an online competition hosted by a number of cybersecurity communities.&lt;/p&gt;
&lt;h2 id=&#34;so-what-is-a-ctf&#34;&gt;So what &lt;em&gt;is&lt;/em&gt; a CTF?&lt;/h2&gt;
&lt;p&gt;A few weeks ago I had this exact question, after seeing the Women Unite event promoted by several people I follow on Twitter. A &lt;a href=&#34;https://ctftime.org/ctf-wtf/&#34;&gt;quick search&lt;/a&gt; told me CTF stands for &amp;ldquo;Capture the Flag&amp;rdquo;, and means a type of information security competition where players or teams compete to collect &amp;ldquo;flags&amp;rdquo; for points. This sounds, to be honest, &lt;em&gt;deeply intimidating&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I may be a professional software developer, but I have never been a hacker. I don&amp;rsquo;t decompile software or use cheat codes in games, and I only switched my IDE to dark mode due to peer pressure from my coworkers. I hate the way the hacker stereotype involves taking joy from making other people feel stupid. I particularly hate feeling stupid.&lt;/p&gt;
&lt;p&gt;But I &lt;em&gt;love&lt;/em&gt; puzzle games.&lt;/p&gt;
&lt;p&gt;Removed from the competitive aspect, a Capture the Flag event is solving a series of puzzles using techniques like forensics and cryptography. This sounds fun to me! But the problem remains: how do you learn those techniques if you&amp;rsquo;re just a regular person who has never considered exploiting a web server?&lt;/p&gt;
&lt;p&gt;It turns out CTFs are &lt;em&gt;not&lt;/em&gt; exclusively high-pressure clashes between technowizards who are out to crush your self esteem. Some events are explicitly aimed at beginners, and can serve as educational opportunities to get familiar with the tools and techniques.&lt;/p&gt;
&lt;h2 id=&#34;women-unite-over-ctf&#34;&gt;Women Unite Over CTF&lt;/h2&gt;
&lt;p&gt;I clicked on the Women Unite event with the thought of sending it to my coworker, who is actively studying security. However, my attention was caught by wording like &amp;ldquo;laidback&amp;rdquo; and &amp;ldquo;we&amp;rsquo;ll give you a tutorial&amp;rdquo;. Could this be a friendly way to get started? I signed up on a whim.&lt;/p&gt;
&lt;h3 id=&#34;the-event&#34;&gt;The event&lt;/h3&gt;
&lt;p&gt;I was not precisely thrilled at getting up before 9am on a Saturday, but I was excited to learn new things! I still wasn&amp;rsquo;t convinced I would solve a single puzzle.&lt;/p&gt;
&lt;h4 id=&#34;the-bad&#34;&gt;The bad&lt;/h4&gt;
&lt;p&gt;The online event had a bit of a rough start. The competition was hosted on Point3 Security&amp;rsquo;s ESCALATE platform, which is supposed to provide a sandboxed environment full of well-designed challenges in various categories. Unfortunately, under the hammering of hundreds of attendees trying to log in, the system mostly provided 504 Gateway Timeouts.&lt;/p&gt;
&lt;p&gt;Look, I get it. I work in the tech industry, and sometimes despite your best efforts your system falls over and users are angry. &lt;em&gt;However&lt;/em&gt;, if you have a scheduled event coming up with a thousand people registered, please for the love of little fishes test what 1000 concurrent connections will do to your web app!&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t care about prizes so wasn&amp;rsquo;t too bummed about the late start, but it was still frustrating. It took well over an hour before I could even log in, and even then clicking any link could take up to five minutes or time out entirely. Since completing each challenge took at least five clicks, this was a huge tax on participation.&lt;/p&gt;
&lt;h4 id=&#34;the-good&#34;&gt;The good&lt;/h4&gt;
&lt;p&gt;Even so, the ESCALATE platform was pretty cool. The provided Linux VM was stocked with every conceivable application used for decompiling or inspecting files, and the problems themselves escalated in difficulty in a way that I was able to take what I&amp;rsquo;d learned from one challenge and apply it to the next. After the competition was over and (I assume) most people had logged off, all the fancier features were able to load and I found the tool quite pleasant.&lt;/p&gt;
&lt;p&gt;The best part, however, were the tutorials. On the livestream the presenter Nada gave walkthroughs for three of the reverse-engineering challenges, including demonstrating which tools to use and some of the features of those tools. This was, to my mind, the most critical part.&lt;/p&gt;
&lt;p&gt;The tutorials themselves had some pretty advanced concepts compressed into a very short lesson, so I don&amp;rsquo;t know how they would feel for complete beginners. Since I already know how to code and even have a vague understanding of assembly language I got the most value out of the sections that explained the thought process of which tools to choose for which parts of the process. (Although the assembly reference was also essential—I didn&amp;rsquo;t have &lt;em&gt;that&lt;/em&gt; strong an understanding going in!)&lt;/p&gt;
&lt;p&gt;Due to the technical difficulties they extended the time of the contest and let everyone continue using the ESCALATE trial until the end of the day. This allowed me to keep plugging along at challenges on a system that was not currently being accidentally DDOSed. It was a rewarding and fun afternoon.&lt;/p&gt;
&lt;h3 id=&#34;the-results&#34;&gt;The results&lt;/h3&gt;
&lt;p&gt;I ended up solving 9 out of 28 challenges! I got all five in Network Foundations Level 1 and the easiest four Reverse Engineering problems. Three of those reverse engineering challenges had walkthroughs, but the last (and most complex!) I was able to extrapolate based on what I had learned in the previous lessons. The networking challenges I figured out for myself, starting from the knowledge of &amp;ldquo;Wireshark is a tool for looking at network stuff&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I came out with a basic knowledge of how to use Wireshark, BinaryNinja, and Ollydbg. More generally I learned about static and dynamic analysis of binaries, and a little bit about when and why to use them.&lt;/p&gt;
&lt;p&gt;After the event was over I was hype for more learning and signed up for a resource &lt;a href=&#34;https://dev.to/atan/what-is-ctf-and-how-to-get-started-3f04&#34;&gt;recommended for newcomers&lt;/a&gt;. Instead it has opaque problems with zero guidance labelled &amp;ldquo;very easy&amp;rdquo; and I hate it. Let&amp;rsquo;s just say there&amp;rsquo;s still room for improvement in this space.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://www.ittakesahuman.com/&#34;&gt;Point3 Security&lt;/a&gt;, &lt;a href=&#34;https://gatebreachers.org/&#34;&gt;Gatebreachers&lt;/a&gt;, &lt;a href=&#34;https://womenscyberjutsu.org/&#34;&gt;Women&amp;rsquo;s Society of Cyberjutsu&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/WoSECtweets&#34;&gt;WoSEC&lt;/a&gt;, and &lt;a href=&#34;https://www.womenhackerz.com/&#34;&gt;WomenHackerz&lt;/a&gt; for putting on an event that, technical difficulties aside, succeeded in making security feel accessible.&lt;/p&gt;</description>
     </item>
   
 </channel>
</rss>
