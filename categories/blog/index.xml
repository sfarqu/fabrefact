
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>blog on Fabrefact</title>
   <link>https://blog.fabrefact.ca/categories/blog/</link>
   <description>Recent content in blog on Fabrefact</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <copyright>&amp;copy; 2019 Sara Farquharson</copyright>
   <lastBuildDate>Sun, 13 Sep 2020 16:19:03 -0700</lastBuildDate>
   
       <atom:link href="https://blog.fabrefact.ca/categories/blog/index.xml" rel="self" type="application/rss+xml" />
   
   
   
   
     <item>
       <title>Why I use a Bullet Journal</title>
       <link>https://blog.fabrefact.ca/posts/bullet-journal/</link>
       <pubDate>Sun, 13 Sep 2020 16:19:03 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/bullet-journal/</guid>
       <description>&lt;p&gt;I first started using the &lt;a href=&#34;https://bulletjournal.com/pages/learn&#34;&gt;Bullet Journal system&lt;/a&gt; in August 2016, and over the past four years I have filled up one-and-one-third dotted-grid notebooks with to-do lists, habit trackers, and&amp;hellip;well, mostly those two things.&lt;/p&gt;
&lt;p&gt;It should have been a lot more notebooks, but I&amp;rsquo;ve never managed to maintain the journaling habit for more than six contiguous months, and any attempt to incorporate &lt;a href=&#34;https://www.pinterest.ca/bulletjournal/&#34;&gt;Pinterest-worthy&lt;/a&gt; artistic features to my system has quickly withered. Nevertheless I remain a strong proponent of the Bullet Journal and find it an essential component of accomplishing my goals. Why is that?&lt;/p&gt;
&lt;h1 id=&#34;the-perils-of-productivity&#34;&gt;The perils of productivity&lt;/h1&gt;
&lt;p&gt;Recently, pursuing productivity has become unfashionable in my circles. Especially within the context of the compounding disasters of 2020, I&amp;rsquo;ve seen a lot of pushback on the &amp;ldquo;cult of productivity&amp;rdquo;. Measuring your worth by what you accomplish is a toxic rat race, the messaging goes, and we need to allow ourselves to be fallible, and human, and deserving of care and rest. I do agree with this. However, experience has shown me that if I do not set goals for myself and make progress toward them, I will fall into a deep depression.&lt;/p&gt;
&lt;p&gt;I have never been short on goals, but follow-through has been a constant struggle. For example: since I was a small child I have wanted to be a writer. I have dreamed up countless books and stories—but I&amp;rsquo;ve only &lt;em&gt;written&lt;/em&gt; three short stories in the past thirty years.&lt;/p&gt;
&lt;p&gt;This failure to live up to the organized, efficient person of my dreams has led to a lot of disappointment and regret. I have repeatedly returned to the well of productivity culture to try to find the magic spell that will make me create more and daydream less.&lt;/p&gt;
&lt;p&gt;The key to happiness and mental health appears to be to identify the things that bring you joy, and work to fill your life with those things. This work is sometimes hard or even unpleasant, and in the moment may seem less appealing than ice cream and Netflix.&lt;/p&gt;
&lt;p&gt;How do you convince yourself to do that work that will make you happier later, at the expense of a little fun now?&lt;/p&gt;
&lt;h1 id=&#34;in-search-of-the-perfect-system&#34;&gt;In search of the perfect system&lt;/h1&gt;
&lt;p&gt;I need a system at all because without one it is hard to think beyond the next hour, the next day—a week at the outside. If I was the type of person who had a singular goal in life perhaps it could work, but that has never been me. I want to write a novel &lt;em&gt;and&lt;/em&gt; make a new wardrobe to wow everyone at an event next month &lt;em&gt;and&lt;/em&gt; learn a second language &lt;em&gt;and&lt;/em&gt; excel in my career &lt;em&gt;and&lt;/em&gt; be politically engaged &lt;em&gt;and&lt;/em&gt; find the perfect birthday gift. I can focus on one task and make progress on it, but then I look up and haven&amp;rsquo;t washed the dishes in two months and the birthday party is tonight and I forgot all about it.&lt;/p&gt;
&lt;p&gt;In the 2000s I got deep into reading productivity blogs, until I noticed I spent all my time reading advice and very little time following it.&lt;/p&gt;
&lt;p&gt;In the 2010s I tried many different phone apps, in the hope that with the right To Do list I would magically stop procrastinating. And sometimes they helped! For a while.&lt;/p&gt;
&lt;p&gt;The problem with every system I tried is that they demand perfect adherence to someone else&amp;rsquo;s thought patterns. Planners have too much space per day or too little. Apps won&amp;rsquo;t let me set my exercise routine to be &amp;ldquo;three times a week but it doesn&amp;rsquo;t matter which day&amp;rdquo;. Existing categories don&amp;rsquo;t match how I think about projects.&lt;/p&gt;
&lt;p&gt;Worst of all, if you stop updating for a week because you got sick or took a holiday or just plain Didn&amp;rsquo;t Feel Like It, everything quickly devolves into chaos. The app helpfully rolls all of those To-Dos into today&amp;rsquo;s To Do List of Doom, the blank pages of July in your pre-printed planner stare emptily at you in recrimination. Soon my organizational system would become a source of anxiety and I would begin to avoid it.&lt;/p&gt;
&lt;h1 id=&#34;the-benefits-of-bujo&#34;&gt;The benefits of BuJo&lt;/h1&gt;
&lt;p&gt;Bullet Journaling, at its core, is ridiculously simple. Write daily To Do lists, by hand, in a journal. Don&amp;rsquo;t work ahead. Write down long term plans on a different page. Regularly review and update your priorities and incomplete tasks. For me this has some major benefits:&lt;/p&gt;
&lt;h2 id=&#34;1-its-a-system&#34;&gt;1) It&amp;rsquo;s a system&lt;/h2&gt;
&lt;p&gt;The basics of Bullet Journaling are freely available on the website. With just a pen and notebook you can follow the instructions in a 5-minute video and be up and using the system. There&amp;rsquo;s also a whole ecosystem of books, articles, and Pinterest photos if you want more structure or inspiration. For me, not having to do all the up-front work of designing the perfect system for my brain allowed me to get started with something functional right away.&lt;/p&gt;
&lt;h2 id=&#34;2-its-flexible&#34;&gt;2) It&amp;rsquo;s flexible&lt;/h2&gt;
&lt;p&gt;Bullet Journaling actively discourages getting too detailed about the future, and constantly emphasizes adding whatever makes sense to you. Many of the articles are people showing how they have modified the basic system to fit their own needs. I find myself frequently playing with format and features: trying out a pretty thing I saw on an influencer blog one month, abandoning it the next because it was too much work.&lt;/p&gt;
&lt;p&gt;One add-on I often found useful was a &amp;ldquo;habit tracker&amp;rdquo;, which allows you to see at a glance how well you are incorporating recurring tasks into your life, and may function as a reminder/motivator.&lt;/p&gt;
&lt;h2 id=&#34;3-theres-no-penalty-for-being-inconsistent&#34;&gt;3) There&amp;rsquo;s no penalty for being inconsistent&lt;/h2&gt;
&lt;p&gt;Perhaps the greatest reason I keep coming back to my BuJo is that it doesn&amp;rsquo;t shame me for doing so. If I feel guilty looking at three-months-ago-Sara&amp;rsquo;s undone tasks, I can simply turn the page and get a fresh start. If a feature I tried was too complicated to maintain, I don&amp;rsquo;t add it again.&lt;/p&gt;
&lt;p&gt;Going back to the simplest form of daily logging immediately gets me the benefits of thinking about my priorities and feeling motivated to maybe do more chores than I would otherwise.&lt;/p&gt;
&lt;h1 id=&#34;room-for-improvement&#34;&gt;Room for improvement&lt;/h1&gt;
&lt;p&gt;My failing with any productivity system is that it only works when I&amp;rsquo;m in my regular routine. A common pattern is I fall off updating whenever I am away from home for more than an evening, even if I bring the journal with me. If I&amp;rsquo;m lucky I pick it back up again when I return from vacation, but in the worst cases it can take months after I break the habit to start feeling motivated to write down tasks again.&lt;/p&gt;
&lt;p&gt;Oddly, COVID completely spiked my journaling wheels, even though I probably spend more time in my house now. The enormous change in routine and priorities has taken a long time to feel like a pattern, and I&amp;rsquo;m still working on how to reconcile making more space for the people I care about with completing the type of tasks I tend to put on my list.&lt;/p&gt;
&lt;p&gt;That said, I have started writing down bullet points again, and it feels good to look back at the past week and see a record that is not simply an undifferentiated blur. Now I have to go wash the dishes, even though I hate washing dishes, because then I can check it off my list.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>Lessons learned from a Recurse Center mini-batch</title>
       <link>https://blog.fabrefact.ca/posts/lessons-from-recurse-mini-batch/</link>
       <pubDate>Mon, 24 Aug 2020 22:40:34 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/lessons-from-recurse-mini-batch/</guid>
       <description>&lt;p&gt;A few weeks ago I impulsively applied for the August mini-batch at the Recurse Center. I&amp;rsquo;d been idly daydreaming about attending Recurse when traveling to New York seems feasible again, assuming I could figure out how to make it work with my job. I then realised that the one-week mini-batch would only require me to take a week&amp;rsquo;s vacation, and this year&amp;rsquo;s virtual events meant I wouldn&amp;rsquo;t even have to tack on the stress of travel!&lt;/p&gt;
&lt;p&gt;My 5-day batch in mid-August was over in a flash, but I had a lot of fun. Here&amp;rsquo;s some things I learned, in no particular order:&lt;/p&gt;
&lt;h2 id=&#34;lesson-1-rc-isnt-just-for-coding-wizards&#34;&gt;Lesson 1: RC isn&amp;rsquo;t just for coding wizards&lt;/h2&gt;
&lt;p&gt;I stressed out quite a bit about applying, because I had in my head that RC was for &amp;ldquo;real&amp;rdquo; programmers who do things like write compilers and start open-source art projects and understand Haskell and finish any of their side projects. Mostly this was because everyone I talked to who had been through RC seemed so smart and accomplished. It was intimidating!&lt;/p&gt;
&lt;p&gt;Despite my fears about not meeting the &amp;ldquo;higher standards&amp;rdquo; for the mini batch, I was accepted and made to feel totally welcome. I met people at Recurse with all sorts of backgrounds, from career changers and bootcamp grads to very experienced engineers. The only thing everyone has in common is a drive to learn new things.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t know that I would have applied to RC earlier if I had known I wasn&amp;rsquo;t &amp;ldquo;too junior&amp;rdquo; to be considered, but I sure would have been less anxious about my application!&lt;/p&gt;
&lt;h2 id=&#34;lesson-2-about-50-of-a-mini-batch-is-socializing&#34;&gt;Lesson 2: About 50% of a mini-batch is socializing&lt;/h2&gt;
&lt;p&gt;The mini batches happen during the first week of each incoming batch. For the people attending a full or half batch, this first week is a chance to get familiar with Recurse, meet everyone, and figure out what you&amp;rsquo;re going to work on. There&amp;rsquo;s a lot of events scheduled, and new members are encouraged to attend as many as possible. It makes sense to focus on mingling if you have five-plus more weeks to work on projects, but what if that week is all you get?&lt;/p&gt;
&lt;p&gt;I planned to spend the whole week heads-down coding, but in the days leading up to the start, the escalating number of emails and invites and meetups forced me to reconsider. While it would certainly be &lt;em&gt;possible&lt;/em&gt; to attend a Recurse batch and not participate in the social events, it seems like a giant waste of opportunity.&lt;/p&gt;
&lt;p&gt;The first day is pretty heavy on scheduled events, which I decided to lean into and not worry about &amp;ldquo;being productive&amp;rdquo;. After that I made sure to attend one or two events that sounded interesting every day, and let focused work happen where it may.&lt;/p&gt;
&lt;p&gt;I unfortunately picked a project that was hard to collaborate on, but I did do a few pairing sessions on unrelated problems and overall was happy with how I divided my time.&lt;/p&gt;
&lt;h2 id=&#34;lesson-3-remote-pairing-requires-clear-communication&#34;&gt;Lesson 3: Remote pairing requires clear communication&lt;/h2&gt;
&lt;p&gt;I was excited to try out pair programming at RC, since it&amp;rsquo;s not something I&amp;rsquo;ve had much opportunity to do at work. One of the first events was a pair-programming workshop, which I think went really well. I did another pairing session that I felt I floundered a little on without the additional structure of the workshop.&lt;/p&gt;
&lt;p&gt;It quickly became clear to me that if both parties have access to edit the code but can&amp;rsquo;t see each other, clearly stating who is in the driver/navigator roles is very important. If you&amp;rsquo;re both in the same room you have body language to work with (and can&amp;rsquo;t both be typing at the same time) so there&amp;rsquo;s a little more implicit communication, but over the internet it&amp;rsquo;s all verbal. This is always harder than I think it&amp;rsquo;s going to be!&lt;/p&gt;
&lt;p&gt;There were inevitable technology glitches with the remote coding platform we used, which sometimes made it so the other person couldn&amp;rsquo;t see what you typed. This drove home the importance of you both being in agreement about who is supposed to be typing.&lt;/p&gt;
&lt;p&gt;I still don&amp;rsquo;t know what the proper etiquette is when neither pair knows how to proceed and you need to look things up. Do you both halt and research? One person read their findings out loud? There&amp;rsquo;s probably no one right answer to this.&lt;/p&gt;
&lt;h2 id=&#34;lesson-4-dont-try-to-learn-a-language-and-complete-a-project-in-one-week&#34;&gt;Lesson 4: Don&amp;rsquo;t try to learn a language and complete a project in one week&lt;/h2&gt;
&lt;p&gt;My goal was to make some serious progress on writing a distributed key-value store in Rust, and by mid-week I was buried in error messages about lifetimes and borrowing. This phase of learning Rust is apparently known as &amp;ldquo;fighting the borrow checker&amp;rdquo;. I felt a little frustrated at my lack of progress, and also blocked from working collaboratively.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s possible a more outgoing person would have found a way to turn these error messages into a pairing problem, but my reaction to being confused is to silently read seventeen different articles, which isn&amp;rsquo;t ideal for collaboration. Instead I only worked with other people while ignoring my main project.&lt;/p&gt;
&lt;p&gt;If I were to do this again, I would pick a goal of &lt;em&gt;either&lt;/em&gt; learning a new language (ie, learn Rust by doing small problems every day) &lt;em&gt;or&lt;/em&gt; a specific project (make a web app), but not both at the same time in one week.&lt;/p&gt;
&lt;h2 id=&#34;lesson-5-virtual-rc-replicates-many-aspects-of-in-person-eventsincluding-the-social-anxiety&#34;&gt;Lesson 5: Virtual RC replicates many aspects of in-person events—including the social anxiety&lt;/h2&gt;
&lt;p&gt;My first reaction to logging in to Virtual RC was exactly the same as when I showed up to !!Con—panic that I didn&amp;rsquo;t know where I was supposed to go or which room the first event was being held in! Is it ok if I stand near these people or are they all friends who know each other and I&amp;rsquo;m just being weird?! I don&amp;rsquo;t know the etiquette for touching things so I don&amp;rsquo;t want to touch anything! o no! (In both cases things turned out fine.)&lt;/p&gt;
&lt;p&gt;There were very cool aspects of the Virtual RC platform: I got the feeling of being in a space with other people without having to be in a Zoom call all day, there were defined places to go for events, and the audio rooms were a cool way to create and join voice chats in a low-friction way. It took most of the week before I got comfortable making links and notes, but if I spend more time there I can see it feeling second nature.&lt;/p&gt;
&lt;p&gt;The main downsides I found were that the interface is a little opaque if you&amp;rsquo;ve never seen it before, and there was rarely an easy way to casually discover what other people are up to without asking them directly. On the one hand this latter point helps enforce the &amp;ldquo;no back-seat driving&amp;rdquo; social rule (you can&amp;rsquo;t shout into a conversation without joining it); on the other hand approaching people directly without first receiving social cues that I would be welcome is a major anxiety trigger for me.&lt;/p&gt;
&lt;p&gt;Virtual RC has ways for people to indicate what is going on in a given room, but I found they were used haphazardly. Often I would see a group of interesting people on a call and have no idea if it was ok to wander in, or if it was something you had to sign up for in advance.&lt;/p&gt;
&lt;p&gt;This was counteracted by the fact that many events were announced on Zulip and visible on the calendar so it&amp;rsquo;s not like I had a shortage of events. I just wish there was a way to casually overhear what&amp;rsquo;s going on in a room without (metaphorically) throwing open the door and announcing your name!&lt;/p&gt;
&lt;p&gt;I am interested in seeing how the platform continues to evolve, and also looking into other &amp;ldquo;hallway track&amp;rdquo; platforms.&lt;/p&gt;
&lt;h2 id=&#34;lesson-6-its-okay-to-relax&#34;&gt;Lesson 6: It&amp;rsquo;s okay to relax&lt;/h2&gt;
&lt;p&gt;My week at Recurse coincided with a week of beautiful weather in my city and a few social commitments I hadn&amp;rsquo;t planned on. Rather than stress out about all the coding I wasn&amp;rsquo;t getting done and working late into the night, I tended to log off shortly after the East Coast contingent disappeared (mid-afternoon my time), and go read a book in the sunshine.&lt;/p&gt;
&lt;p&gt;I was a little disappointed in my lack of coding progress, but when my week ended I still felt excited about programming! I continued working on my Rust project through the weekend and got it working by Sunday.&lt;/p&gt;
&lt;p&gt;The end result of not pushing myself was I had a relaxing vacation, met a bunch of cool people, and still succeeded in achieving my target for my Rust project (if a couple days late.) A++ would recommend taking breaks and naps and coffee chats!&lt;/p&gt;
&lt;p&gt;Overall I had a very good time at virtual Recurse Center, and I look forward to maybe attending a batch in New York in the future.&lt;/p&gt;
</description>
     </item>
   
     <item>
       <title>Refactoring Legacy Javascript: Part 1</title>
       <link>https://blog.fabrefact.ca/posts/refactoring-legacy-javascript-1/</link>
       <pubDate>Thu, 07 May 2020 22:49:41 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/refactoring-legacy-javascript-1/</guid>
       <description>&lt;h2 id=&#34;enter-the-haunted-forest&#34;&gt;Enter the haunted forest&lt;/h2&gt;
&lt;p&gt;My workplace has the expected share of legacy code, and one piece nestles at the heart of a major product I supported for years as a developer. This very successful product dates back to when the company was a frantic handful of developers trying to do too much work in too little time, and by the time I joined the company it had attained nigh-on &lt;a href=&#34;https://softwareexorcist.com/writing/haunted-graveyards&#34;&gt;haunted graveyard&lt;/a&gt; status. Little documentation, no tests, a tangled mess of tightly-dependent code in at least three languages, relied upon daily by many Important Clients.&lt;/p&gt;
&lt;p&gt;One of my first tasks was a backlog ticket to add an insignificant feature to this product, and it took me a full month to feel like I understood it well enough to not break it. (Spoiler: even then I didn&amp;rsquo;t understand it.) Over the years tiny changes broke production more often than not, and every developer who touched it had to spend days chasing down arcane undocumented trivia, like how to even build the localization files.&lt;/p&gt;
&lt;p&gt;Did I mention no tests?&lt;/p&gt;
&lt;p&gt;Of course I adopted this orphaned codebase as my ugly, precious baby. I spent many hours thinking about how to make it beautiful, even while knowing it would never be a priority. At one point I demanded the opportunity to refactor the entire PHP codebase for testability as a prerequisite for adding a new feature, but the Javascript was deemed out of scope. None of us had a background in Javascript development, and the code worked until now, might as well just cross our fingers and hope it held out until this product&amp;rsquo;s inevitable retirement.&lt;/p&gt;
&lt;p&gt;The problem with decade-old Javascript, however, is that the browser landscape keeps changing, and suddenly you get an emergency bug ticket from an Important Client because your product doesn&amp;rsquo;t work in a new browser. And nobody understands how the code works, or how to test it, or where the script to build the localization files lives.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t get that ticket because I&amp;rsquo;ve moved on to another role, so I only watched Slack in dismay as the dev described a week struggling to implement and verify a ten-line fix, some of which could have been avoided if I&amp;rsquo;d documented my own fights more thoroughly. (She is a better dev than I, and wrote down the entire elaborate build process as she figured it out.)&lt;/p&gt;
&lt;h2 id=&#34;the-purpose-of-refactoring&#34;&gt;The purpose of refactoring&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re not familiar with a language, figuring out &lt;em&gt;how&lt;/em&gt; to write tests or run the code can be an insurmountable barrier. The curse of haunted Javascript is that all today&amp;rsquo;s snazzy test frameworks assume you are using modern techniques like modules or ES6 syntax or a framework. Nothing like that in legacy files! Only a bunch of functions, dumped into an inline script tag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.fabrefact.ca/figures/legacy-script.png&#34; alt=&#34;Drawing of code being inserted between &amp;ldquo;script&amp;rdquo; HTML tags&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can&amp;rsquo;t get code coverage unless you can &lt;code&gt;require&lt;/code&gt; your files in your tests, and you can&amp;rsquo;t tell what parts of the 3000-line monolith to put in a &lt;code&gt;module.exports&lt;/code&gt; without either writing a test, or painstakingly stepping through in a way no one ever seems to have the time for. Last year I spent a weekend trying to get at least a test framework running, and ended up lost in the bowels of &lt;a href=&#34;https://istanbul.js.org/&#34;&gt;Istanbul&lt;/a&gt; source code.&lt;/p&gt;
&lt;p&gt;But improving the code coverage metrics is just something I &lt;em&gt;want&lt;/em&gt; to do. There are some genuine reasons to want to modernize the code to do things like remove global variables, but even that is mostly personal preference. The real problem is that it takes too long to check if your changes worked.&lt;/p&gt;
&lt;p&gt;I came back to this on Tuesday full of renewed determination to make the process of building and testing this code easier. Right now &amp;ldquo;the process&amp;rdquo; involves running two different command line scripts manually and checking in the processed artifacts. These artifacts are dynamically injected into a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag at run time.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s draw that as a picture:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.fabrefact.ca/figures/build-flow.png&#34; alt=&#34;Flow diagram of the build process, from CSV file through a legacy PHP script, then compiled by a different legacy PHP script along with a variable number of other script files into a concatenated and minified version, which is checked into source control, then included inline at run time&#34;&gt;&lt;/p&gt;
&lt;p&gt;This diagram makes it look more straightforward than it is currently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every one of these files lives in a different directory&lt;/li&gt;
&lt;li&gt;There are several customer-specific builds, which require passing command-line parameters to the manual scripts&lt;/li&gt;
&lt;li&gt;One of the scripts can only be run in a VM environment, and getting the processed file back to your laptop is complicated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;how-can-we-make-this-easier&#34;&gt;How can we make this easier?&lt;/h3&gt;
&lt;p&gt;First I decided on my goals:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A developer new to this project should be able to build a testable artifact in one step after making a code change&lt;/li&gt;
&lt;li&gt;The whole build should be able to run on different environments—developer laptop, VM, or CI pipeline—without a lot of custom setup&lt;/li&gt;
&lt;li&gt;The build should allow us to move a lot of these steps to the existing automated build pipeline&lt;/li&gt;
&lt;li&gt;Artifacts produced by this new build process should be identical to the old process&lt;/li&gt;
&lt;li&gt;None of the existing files should be changed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last one is possibly overkill, but I want to be absolutely sure that my desire to improve the developer experience doesn&amp;rsquo;t impact the actual production code.&lt;/p&gt;
&lt;h2 id=&#34;choosing-tools&#34;&gt;Choosing tools&lt;/h2&gt;
&lt;p&gt;First things first, we need a package manager. I went with npm over yarn because I&amp;rsquo;ve used npm before and it&amp;rsquo;s already installed on my computer. At least one other project also uses npm, so it&amp;rsquo;s pretty likely to be on other developers&#39; computers too.&lt;/p&gt;
&lt;h3 id=&#34;running-tasks&#34;&gt;Running tasks&lt;/h3&gt;
&lt;p&gt;For my needs I knew I wanted to use a task runner. As I said before, I am not a Javascript expert, and neither are the people who maintain this product. There aren&amp;rsquo;t many other Javascript projects in the company that I can use for reference, and I&amp;rsquo;m not familiar with the common Javascript toolchain.&lt;/p&gt;
&lt;p&gt;I considered using a custom script or a task runner in another language—gradle is commonly used even for projects that aren&amp;rsquo;t Java. I decided to pick a JS tool despite that for a few reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Custom scripts are how we got in this mess—if you spend enough time to make a script that&amp;rsquo;s resilient and extendable, you&amp;rsquo;ve basically written another task runner. Better to use one that&amp;rsquo;s actively maintained.&lt;/li&gt;
&lt;li&gt;A tool that&amp;rsquo;s designed to work with Javascript is more likely to have built-in support for the kind of steps used in Javascript pipelines, like running Google Closure Compiler.&lt;/li&gt;
&lt;li&gt;I hold a grudge against Gradle after years of having to deal with build chains I didn&amp;rsquo;t understand.&lt;/li&gt;
&lt;li&gt;I wanted to learn more about Javascript toolchains.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A quick search for Javascript build tools got me a few options:&lt;/p&gt;
&lt;h4 id=&#34;webpack&#34;&gt;Webpack&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PRO: Used by another project at work; might have some crossover expertise&lt;/li&gt;
&lt;li&gt;PRO: Extremely popular&lt;/li&gt;
&lt;li&gt;CON: Primary use case is transpiling modern syntax into backwards-compatible Javascript; almost no references found for how to use it &lt;em&gt;without&lt;/em&gt; transpiling&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;gulp&#34;&gt;Gulp&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PRO: Very fast&lt;/li&gt;
&lt;li&gt;CON: Relatively complicated to use&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;grunt&#34;&gt;Grunt&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PRO: Described as simpler to learn than Gulp&lt;/li&gt;
&lt;li&gt;CON: I can&amp;rsquo;t remember, but surely there was something?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Webpack was clearly out because it is a bundler, not a task runner, and trying to force it to be a task runner would lead to heartache. Grunt and Gulp seemed to be a toss-up, with &lt;a href=&#34;https://www.ionos.ca/digitalguide/websites/web-development/gulp-vs-grunt-differentiating-between-the-task-runners/&#34;&gt;some articles&lt;/a&gt; describing Grunt having more a focus on configuration, and Gulp more on programming. I decided to try Gulp first, for nebulous reasons including the fact that it was supposed to be faster, and I didn&amp;rsquo;t like the &lt;a href=&#34;https://gruntjs.com/&#34;&gt;Grunt logo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I fully planned to delete Gulp if I got frustrated with it, because there are clearly other options that work very well.&lt;/p&gt;
&lt;h3 id=&#34;next-steps&#34;&gt;Next steps&lt;/h3&gt;
&lt;p&gt;In the next post I&amp;rsquo;ll talk about how I set up a working build script in 4 hours, and then spent until sunrise debugging a single configuration option.&lt;/p&gt;
</description>
     </item>
   
     <item>
       <title>Women Unite Over CTF - Solving Challenges</title>
       <link>https://blog.fabrefact.ca/posts/women-unite-over-ctf-solving-challenges/</link>
       <pubDate>Mon, 04 Nov 2019 16:04:02 -0800</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/women-unite-over-ctf-solving-challenges/</guid>
       <description>&lt;p&gt;The winner of the Women Unite Over CTF, Jaime Lightfoot, quickly posted writeups about how she solved the challenges. These posts (&lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-networking-challenges/&#34;&gt;networking challenges&lt;/a&gt;, &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-reverse-engineering-challenges/&#34;&gt;reverse engineering&lt;/a&gt;, and &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-linux-exploitation/&#34;&gt;Linux exploitation&lt;/a&gt;) are excellent for the same reasons I enjoyed the event in general: my main barrier to entry is not knowing what tools to use or what to look for.&lt;/p&gt;
&lt;p&gt;I thought of including details of my own problem-solving approach in my &lt;a href=&#34;https://blog.fabrefact.ca/fabrefact/posts/wtf-is-a-ctf/&#34;&gt;last post&lt;/a&gt;, but I didn&amp;rsquo;t have the forethought to take any screenshots. Since I was working in a provided VM, I don&amp;rsquo;t even have any of the challenge files or tools on my own computer. However, I ended up solving exactly the same problems as two of Jaime&amp;rsquo;s posts, so here I will simply talk about how my solutions differed from hers.&lt;/p&gt;
&lt;h1 id=&#34;networking-challenges&#34;&gt;Networking challenges&lt;/h1&gt;
&lt;p&gt;(See &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-networking-challenges/&#34;&gt;Women Unite Over CTF - Networking Challenges&lt;/a&gt; for Jaime&amp;rsquo;s solutions, with screenshots.)&lt;/p&gt;
&lt;p&gt;I opened up the networking challenges because technical difficulties delayed the start of the reverse engineering walkthroughs. I hovered over random icons in the Kali Linux VM, hoping that one of them was a tool for looking at network information. Luckily Wireshark was prominently placed!&lt;/p&gt;
&lt;p&gt;I have literally never used Wireshark before, but it&amp;rsquo;s the tool everyone talks about so it seemed an obvious choice. I solved these pretty slowly, but now that I know a little bit about Wireshark I expect to be faster next time.&lt;/p&gt;
&lt;h3 id=&#34;level-1-helpfulwine&#34;&gt;level 1: helpfulwine&lt;/h3&gt;
&lt;p&gt;As soon as I opened the file and selected a packet at random, the flag showed up in the bottom pane. My first flag! It took a bit of trial and error to figure out how to copy it—I eventually had to paste whatever I copied into a text editor in order to strip out all the extraneous content before pasting the flag into the form.&lt;/p&gt;
&lt;h3 id=&#34;level-2-rhetoricalairplane&#34;&gt;level 2: rhetoricalairplane&lt;/h3&gt;
&lt;p&gt;Jaime used &lt;code&gt;frame contains &amp;quot;flag&amp;quot;&lt;/code&gt; in all of these to narrow down which packet contained the flag text, but I just clicked around randomly until I found it.&lt;/p&gt;
&lt;h3 id=&#34;level-3-numberlesslove&#34;&gt;level 3: numberlesslove&lt;/h3&gt;
&lt;p&gt;Again I just clicked around randomly looking for something called &amp;ldquo;flag&amp;rdquo;. Used the exact same strategy as Jaime here, which is heartening!&lt;/p&gt;
&lt;h3 id=&#34;level-4-warmsong&#34;&gt;level 4: warmsong&lt;/h3&gt;
&lt;p&gt;This is where I slowed down a lot, because I didn&amp;rsquo;t know about the Export Objects function. I could see from the headers that it was a .docx so I assumed I had to extract the doc and open it&amp;hellip;but I didn&amp;rsquo;t know how. I tried looking at a bunch of different packets, right clicking on things, copying and pasting the bytes into a file&amp;hellip;eventually I realized this must be a common problem and started looking for an export function.&lt;/p&gt;
&lt;p&gt;Once I successfully save the .doc, my next challenge was how to open a Word document in an unfamiliar OS. I searched for something like &amp;ldquo;how to open word doc linux command line&amp;rdquo; and learned &lt;code&gt;lowriter flag.doc&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;level-5-savoryhill&#34;&gt;level 5: savoryhill&lt;/h3&gt;
&lt;p&gt;Now that I knew about Export Objects function this went quickly. Export object as PNG, do a quick search to figure out what kind of program on Linux can open PNGs. The first search result suggested that &lt;code&gt;xdg-open&lt;/code&gt; is a good way to open a file in its default program.&lt;/p&gt;
&lt;h1 id=&#34;reverse-engineering-challenges&#34;&gt;Reverse engineering challenges&lt;/h1&gt;
&lt;p&gt;(See &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-reverse-engineering-challenges/&#34;&gt;Women Unite Over CTF – Reverse Engineering Challenges&lt;/a&gt; for Jaime&amp;rsquo;s solutions, with screenshots.)&lt;/p&gt;
&lt;p&gt;The reverse engineering challenges had walkthroughs on the live stream, which is good because I definitely wouldn&amp;rsquo;t have gotten anywhere without them!&lt;/p&gt;
&lt;h3 id=&#34;level-1-calculateerratic&#34;&gt;level 1: calculateerratic&lt;/h3&gt;
&lt;p&gt;I followed Nada&amp;rsquo;s walkthrough and used Binary Ninja, using the &lt;code&gt;View &amp;gt; Strings&lt;/code&gt; option Jaime mentions in the next problem. Nada talked about the &lt;code&gt;strings&lt;/code&gt; command but I never tried it.&lt;/p&gt;
&lt;h3 id=&#34;level-2-dustyabandon&#34;&gt;level 2: dustyabandon&lt;/h3&gt;
&lt;p&gt;The walkthroughs were also available as PDFs shared in the event Slack, so I started working a little ahead of the livestream. I spent a bunch of time in Binary Ninja, clicking on different views and trying to remember everything I ever knew about assembly.&lt;/p&gt;
&lt;p&gt;I found the password-constructing subfunction (&lt;code&gt;sub_40100&lt;/code&gt; highlighted in Jaime&amp;rsquo;s writeup), and the PDF said something about using &lt;code&gt;R&lt;/code&gt; in Binary Ninja to switch to character representations, but I wasn&amp;rsquo;t able to make heads nor tails of this code and didn&amp;rsquo;t know what I was supposed to be switching. I waited for Nada&amp;rsquo;s livestream to catch up. It seemed obvious as soon as Nada pointed out the hex codes!&lt;/p&gt;
&lt;p&gt;Definitely don&amp;rsquo;t recognize hex values in the ASCII range off the top of my head, but maybe that&amp;rsquo;s a skill to acquire?&lt;/p&gt;
&lt;h3 id=&#34;level-3-etherealshop&#34;&gt;level 3: etherealshop&lt;/h3&gt;
&lt;p&gt;By now I expected a program with a similar design to the first two and opened it up in Binary Ninja to verify the same pattern of password comparison. I kind of went down a rabbit hole trying to understand what assembly was doing and tuned into the livestream to get back on track.&lt;/p&gt;
&lt;p&gt;This is where my solution differed from Jaime&amp;rsquo;s by a lot—the documentation suggested switching to dynamic analysis so I opened up the program in Ollydbg. (Sorry no screenshots for this part.) I used an address I had found in Binary Ninja to get to the right section of code, but mostly poked around trying to understand the interface until Nada started talking about setting a breakpoint.&lt;/p&gt;
&lt;p&gt;Breakpoints I understand! The step-in/step-over commands are similar to every IDE debugger I&amp;rsquo;ve used, so it didn&amp;rsquo;t take long to step through until the flag showed up in a register.&lt;/p&gt;
&lt;h3 id=&#34;level-4-expertquestion&#34;&gt;level 4: expertquestion&lt;/h3&gt;
&lt;p&gt;By now the contest was well over, and the Escalate platform was actually quite responsive, so I decided to tackle one more difficult problem. This one didn&amp;rsquo;t have a walkthrough!&lt;/p&gt;
&lt;p&gt;I started the same process I&amp;rsquo;d gone through with all the other RE problems. Like Jaime, I found that the password encryption now had three functions doing mysterious things to the encrypted password that looked very hairy to decipher in static analysis. Unlike Jaime, I did not have any insights over hard-coded bytes and encryption methods. Instead I opened up Ollydbg for some dynamic analysis.&lt;/p&gt;
&lt;p&gt;This part was a bit of a slog. Unlike level 3, the password didn&amp;rsquo;t show up conveniently in the little window that seemed to hold the current instruction. When I stepped through the comparison of the user-entered text to the password, it instead went straight to the &amp;ldquo;You are not leet enough&amp;rdquo; message. I went back further and started stepping through the entire decryption function.&lt;/p&gt;
&lt;p&gt;Throughout this I was trying to piece together more about how Ollydbg works. There&amp;rsquo;s a large pane in the top left that contains your program, and one on the top right that shows the contents of all the registers (as well as some other stuff that I never understood.) In the bottom right shows the stack—you can scroll down through it to see all the pointers in the call stack from other functions.&lt;/p&gt;
&lt;p&gt;That left the pane in the lower left as being I assume the heap? While stepping through the decryption process I eventually saw stuff starting to change here. At first it appeared to be random gibberish, but it still looked like a clue.&lt;/p&gt;
&lt;p&gt;The decryption has a bunch of loops, and I learned how to recognize what a loop looks like in assembly and skip to the next instruction if nothing relevant seems to happen inside. This was not the most efficient method, but I was worried if I skipped too far ahead I would miss the flag again!&lt;/p&gt;
&lt;p&gt;After far too long of this, the flag unscrambled itself in the pane I decided was the heap. Victory!&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Jaime&amp;rsquo;s walkthroughs were a great refresher and a beginner-friendly introduction to some new techniques. I look forward to reading more from her, and maybe—just maybe—I&amp;rsquo;ll remember to take some screenshots of my own next time.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>WTF is a CTF? A beginner&#39;s adventure</title>
       <link>https://blog.fabrefact.ca/posts/wtf-is-a-ctf/</link>
       <pubDate>Sat, 02 Nov 2019 18:24:49 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/wtf-is-a-ctf/</guid>
       <description>&lt;p&gt;Today I reverse-engineered binaries and pored over packet captures to find hidden information under a deadline, thereby checking another box in my quest to be the coolest person my 14-year-old self could imagine. This was all part of &lt;a href=&#34;https://ittakesahuman.com/lp/WomenUniteOverCTF.html&#34;&gt;Women Unite Over CTF&lt;/a&gt;, an online competition hosted by a number of cybersecurity communities.&lt;/p&gt;
&lt;h2 id=&#34;so-what-is-a-ctf&#34;&gt;So what &lt;em&gt;is&lt;/em&gt; a CTF?&lt;/h2&gt;
&lt;p&gt;A few weeks ago I had this exact question, after seeing the Women Unite event promoted by several people I follow on Twitter. A &lt;a href=&#34;https://ctftime.org/ctf-wtf/&#34;&gt;quick search&lt;/a&gt; told me CTF stands for &amp;ldquo;Capture the Flag&amp;rdquo;, and means a type of information security competition where players or teams compete to collect &amp;ldquo;flags&amp;rdquo; for points. This sounds, to be honest, &lt;em&gt;deeply intimidating&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I may be a professional software developer, but I have never been a hacker. I don&amp;rsquo;t decompile software or use cheat codes in games, and I only switched my IDE to dark mode due to peer pressure from my coworkers. I hate the way the hacker stereotype involves taking joy from making other people feel stupid. I particularly hate feeling stupid.&lt;/p&gt;
&lt;p&gt;But I &lt;em&gt;love&lt;/em&gt; puzzle games.&lt;/p&gt;
&lt;p&gt;Removed from the competitive aspect, a Capture the Flag event is solving a series of puzzles using techniques like forensics and cryptography. This sounds fun to me! But the problem remains: how do you learn those techniques if you&amp;rsquo;re just a regular person who has never considered exploiting a web server?&lt;/p&gt;
&lt;p&gt;It turns out CTFs are &lt;em&gt;not&lt;/em&gt; exclusively high-pressure clashes between technowizards who are out to crush your self esteem. Some events are explicitly aimed at beginners, and can serve as educational opportunities to get familiar with the tools and techniques.&lt;/p&gt;
&lt;h2 id=&#34;women-unite-over-ctf&#34;&gt;Women Unite Over CTF&lt;/h2&gt;
&lt;p&gt;I clicked on the Women Unite event with the thought of sending it to my coworker, who is actively studying security. However, my attention was caught by wording like &amp;ldquo;laidback&amp;rdquo; and &amp;ldquo;we&amp;rsquo;ll give you a tutorial&amp;rdquo;. Could this be a friendly way to get started? I signed up on a whim.&lt;/p&gt;
&lt;h3 id=&#34;the-event&#34;&gt;The event&lt;/h3&gt;
&lt;p&gt;I was not precisely thrilled at getting up before 9am on a Saturday, but I was excited to learn new things! I still wasn&amp;rsquo;t convinced I would solve a single puzzle.&lt;/p&gt;
&lt;h4 id=&#34;the-bad&#34;&gt;The bad&lt;/h4&gt;
&lt;p&gt;The online event had a bit of a rough start. The competition was hosted on Point3 Security&amp;rsquo;s ESCALATE platform, which is supposed to provide a sandboxed environment full of well-designed challenges in various categories. Unfortunately, under the hammering of hundreds of attendees trying to log in, the system mostly provided 504 Gateway Timeouts.&lt;/p&gt;
&lt;p&gt;Look, I get it. I work in the tech industry, and sometimes despite your best efforts your system falls over and users are angry. &lt;em&gt;However&lt;/em&gt;, if you have a scheduled event coming up with a thousand people registered, please for the love of little fishes test what 1000 concurrent connections will do to your web app!&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t care about prizes so wasn&amp;rsquo;t too bummed about the late start, but it was still frustrating. It took well over an hour before I could even log in, and even then clicking any link could take up to five minutes or time out entirely. Since completing each challenge took at least five clicks, this was a huge tax on participation.&lt;/p&gt;
&lt;h4 id=&#34;the-good&#34;&gt;The good&lt;/h4&gt;
&lt;p&gt;Even so, the ESCALATE platform was pretty cool. The provided Linux VM was stocked with every conceivable application used for decompiling or inspecting files, and the problems themselves escalated in difficulty in a way that I was able to take what I&amp;rsquo;d learned from one challenge and apply it to the next. After the competition was over and (I assume) most people had logged off, all the fancier features were able to load and I found the tool quite pleasant.&lt;/p&gt;
&lt;p&gt;The best part, however, were the tutorials. On the livestream the presenter Nada gave walkthroughs for three of the reverse-engineering challenges, including demonstrating which tools to use and some of the features of those tools. This was, to my mind, the most critical part.&lt;/p&gt;
&lt;p&gt;The tutorials themselves had some pretty advanced concepts compressed into a very short lesson, so I don&amp;rsquo;t know how they would feel for complete beginners. Since I already know how to code and even have a vague understanding of assembly language I got the most value out of the sections that explained the thought process of which tools to choose for which parts of the process. (Although the assembly reference was also essential—I didn&amp;rsquo;t have &lt;em&gt;that&lt;/em&gt; strong an understanding going in!)&lt;/p&gt;
&lt;p&gt;Due to the technical difficulties they extended the time of the contest and let everyone continue using the ESCALATE trial until the end of the day. This allowed me to keep plugging along at challenges on a system that was not currently being accidentally DDOSed. It was a rewarding and fun afternoon.&lt;/p&gt;
&lt;h3 id=&#34;the-results&#34;&gt;The results&lt;/h3&gt;
&lt;p&gt;I ended up solving 9 out of 28 challenges! I got all five in Network Foundations Level 1 and the easiest four Reverse Engineering problems. Three of those reverse engineering challenges had walkthroughs, but the last (and most complex!) I was able to extrapolate based on what I had learned in the previous lessons. The networking challenges I figured out for myself, starting from the knowledge of &amp;ldquo;Wireshark is a tool for looking at network stuff&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I came out with a basic knowledge of how to use Wireshark, BinaryNinja, and Ollydbg. More generally I learned about static and dynamic analysis of binaries, and a little bit about when and why to use them.&lt;/p&gt;
&lt;p&gt;After the event was over I was hype for more learning and signed up for a resource &lt;a href=&#34;https://dev.to/atan/what-is-ctf-and-how-to-get-started-3f04&#34;&gt;recommended for newcomers&lt;/a&gt;. Instead it has opaque problems with zero guidance labelled &amp;ldquo;very easy&amp;rdquo; and I hate it. Let&amp;rsquo;s just say there&amp;rsquo;s still room for improvement in this space.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://www.ittakesahuman.com/&#34;&gt;Point3 Security&lt;/a&gt;, &lt;a href=&#34;https://gatebreachers.org/&#34;&gt;Gatebreachers&lt;/a&gt;, &lt;a href=&#34;https://womenscyberjutsu.org/&#34;&gt;Women&amp;rsquo;s Society of Cyberjutsu&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/WoSECtweets&#34;&gt;WoSEC&lt;/a&gt;, and &lt;a href=&#34;https://www.womenhackerz.com/&#34;&gt;WomenHackerz&lt;/a&gt; for putting on an event that, technical difficulties aside, succeeded in making security feel accessible.&lt;/p&gt;</description>
     </item>
   
 </channel>
</rss>
