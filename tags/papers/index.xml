
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>papers on Fabrefact</title>
   <link>https://blog.fabrefact.ca/tags/papers/</link>
   <description>Recent content in papers on Fabrefact</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <copyright>&amp;copy; 2019 Sara Farquharson</copyright>
   <lastBuildDate>Sun, 30 Aug 2020 11:24:03 -0700</lastBuildDate>
   
       <atom:link href="https://blog.fabrefact.ca/tags/papers/index.xml" rel="self" type="application/rss+xml" />
   
   
   
   
     <item>
       <title>what i&#39;m reading: August 30</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-aug-30/</link>
       <pubDate>Sun, 30 Aug 2020 11:24:03 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-aug-30/</guid>
       <description>&lt;p&gt;Latest batch of reading tipped me over the threshold of having to look up the etymology of &amp;ldquo;footgun&amp;rdquo;, which seems to be everywhere in programming language discussions. As jargon I think this term is memorable but ineffective—before looking it up I assumed the meaning was &amp;ldquo;pointless extra feature that sounds cool but is impossible to use properly&amp;rdquo;, vs the intended meaning of &amp;ldquo;feature that will lead users into trouble&amp;rdquo;.&lt;/p&gt;
&lt;h1 id=&#34;books&#34;&gt;Books&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Started the audiobook of &lt;a href=&#34;https://greystonebooks.com/products/gut-revised-edition&#34;&gt;Gut: The Inside Story of Our Body&#39;s Most Underrated Organ&lt;/a&gt; and have been excitedly inserting anecdotes about digestion into every conversation with my very patient loved ones.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;papers&#34;&gt;Papers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Have had Leslie Lamport&#39;s 1978 paper &lt;a href=&#34;http://lamport.azurewebsites.net/pubs/time-clocks.pdf&#34;&gt;Time, Clocks, and the Ordering of Events in a Distributed System&lt;/a&gt; open in a tab for weeks, and finally found the mental energy to read it. I quite enjoy reading older papers about distributed systems and seeing where some of the field&#39;s current best practices come from! Someday I&#39;m going to have to learn more mathematical symbols in order to understand more of the proofs though.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;articles&#34;&gt;Articles&lt;/h1&gt;
&lt;h1 id=&#34;effective-leadership-and-managing-people&#34;&gt;Effective leadership and managing people&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;David Daly&#39;s post about &lt;a href=&#34;https://www.daviddaly.me/2020/08/im-no-longer-manager-and-thats-good.html&#34;&gt;returning to an IC role after being a manager for a few years&lt;/a&gt; was interesting to me mostly for the example of self-reflecting to identify what specific parts of your job make you happy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I liked how practical Sally Lait&#39;s tips about &lt;a href=&#34;https://sallylait.com/blog/2020/08/24/scaling-yourself/&#34;&gt;how to scale yourself as an engineering manager&lt;/a&gt; were!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Even though I don&#39;t know if this will ever be directly applicable to me, I enjoyed Claire Lew&#39;s &lt;a href=&#34;https://twitter.com/clairejlew/status/1299118371221377024&#34;&gt;practical advice on how to help new managers level up quickly&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adrienne Lowe has a bunch of &lt;a href=&#34;https://leadingwithspoons.com/2020/08/27/leading-senior-engineers-lessons-learned/&#34;&gt;good, specific advice for managing senior engineers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This LeadDev article from Katie Womersley is about &lt;a href=&#34;https://leaddev.com/myths-and-traps-managing&#34;&gt;effective vs counterproductive ways to &amp;ldquo;manage up&amp;rdquo;&lt;/a&gt;, but I think it identifies patterns and anti-patterns for forming good collaborative relationships with anyone you work with.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://leaddev.com/reality-being-principal-engineer&#34;&gt;The reality of being a Principal Engineer&lt;/a&gt; by Silvia Botros mostly contained validation of things I already believe, but I liked the emphasis on influencing other people and being a role model, intentional or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;difficult-problems-in-software-development-that-are-only-a-little-about-managing-people&#34;&gt;Difficult problems in software development that are only a little about managing people&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I really enjoyed Rain&#39;s post on &lt;a href=&#34;https://sunshowers.io/posts/dependencies/&#34;&gt;the problems with software dependencies&lt;/a&gt;, which covers a lot of the history of dependency management, the current tradeoffs which need to be made in every language/project, and a focus on the choices being made by Rust&#39;s package manager Cargo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Captivated by Carmen Andoh&#39;s twitter thread about &lt;a href=&#34;https://twitter.com/carmatrocity/status/1298725084232728578&#34;&gt;how modern collaboration tooling like GitHub increases burnout among maintainers of large OSS projects&lt;/a&gt;, and how some modern projects are building collaboration tooling to deal with this problem, even as Linux is trying to modernize its workflows in the other direction. An interesting tradeoff I was not aware of before!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paul Börding and Steve Upton&#39;s post on &lt;a href=&#34;https://www.thoughtworks.com/insights/blog/managing-feature-toggles-teams&#34;&gt;managing feature toggles&lt;/a&gt; covers the nitty-gritty details I&#39;ve always been curious about how to implement like: what process can you implement to make sure teams remember to remove the toggle after it&#39;s no longer needed?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jacques Mattheij states almost exactly &lt;a href=&#34;https://jacquesmattheij.com/why-johnny-wont-upgrade/&#34;&gt;why I avoid installing software updates&lt;/a&gt;, even though I am aware of the security risks that causes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selected an article in Increment&#39;s new &lt;a href=&#34;https://increment.com/apis/&#34;&gt;API edition&lt;/a&gt; almost at random, and found Darius Kazemi&#39;s delicious dive into &lt;a href=&#34;https://increment.com/apis/land-before-modern-apis/&#34;&gt;the history of HTTP status codes&lt;/a&gt; as an example of how API decisions can have an outsized effect on the future of technology.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;building-inclusive-teams&#34;&gt;Building inclusive teams&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Erica Stanley&#39;s LeadDev article &lt;a href=&#34;https://leaddev.com/so-you-want-build-antiracist-teams&#34;&gt;So you want to build antiracist teams&lt;/a&gt; includes a number of specific actions companies can take to build an inclusive culture, as well as resources for Black technologists to combat isolation if their current company is not very diverse.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not hype about linking to LinkedIn posts, but Andrew Hedges&amp;rsquo; post about &lt;a href=&#34;https://www.linkedin.com/pulse/we-mentor-early-career-developers-heres-what-need-succeed-hedges&#34;&gt;what early-career developers need to succeed&lt;/a&gt; contains some good guidelines on how to design a good learning experience for new developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kat Fukui&#39;s account of &lt;a href=&#34;https://www.tinykat.cafe/on-all-that-fuckery&#34;&gt;receiving targeted harassment through her employer&#39;s platform&lt;/a&gt; (CW: screencaps and descriptions of racist, sexist, transphobic, abusive language and actions) contains a coda about what tech leaders need to think about in creating a safe working environment for employees.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;programming-language-wonkery&#34;&gt;Programming language wonkery&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Steve Klabnik wrote a post that is mostly about a debate in the Rust community around a macro called CXX, which is above my pay grade, but I found it valuable for the &lt;a href=&#34;https://steveklabnik.com/writing/the-cxx-debate&#34;&gt;explanation of what the &lt;code&gt;unsafe&lt;/code&gt; keyword in Rust means and how to use it&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Andreas Rossberg&#39;s explanation of the &lt;a href=&#34;https://stackoverflow.blog/2020/08/24/motoko-the-language-that-turns-the-web-into-a-computer/&#34;&gt;design decisions behind his new programming language, Motoko&lt;/a&gt;, was an interesting read, since it included approachable overviews of Wasm and the actor model in programming languages. The overall project seems a little buzzwordy, but I liked reading about why specific choices were made for a language, and now have the original Wasm research in my reading queue.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;wip-learning-resources&#34;&gt;WIP learning resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;One of the projects I&#39;m working on is a tiny web app using React. As soon as I needed to persist data between components I have been leaning heavily on the &lt;a href=&#34;https://react-redux.js.org/introduction/basic-tutorial&#34;&gt;React-Redux basic tutorial&lt;/a&gt; and Dan Abramov&#39;s &lt;a href=&#34;https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage?course=building-react-applications-with-idiomatic-redux#t=106&#34;&gt;Persisting the State to the Local Storage&lt;/a&gt; in order to solve my specific use-cases without needing to stop coding entirely in order to learn a new subject.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also for this project, &lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;A Complete Guide to Flexbox&lt;/a&gt; has been invaluable to get even the roughest positioning using modern CSS techniques.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;learning-in-public&#34;&gt;Learning in public&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vishnu Bharathi wrote a cool investigation of &lt;a href=&#34;https://vishnubharathi.codes/blog/levenshtein-distance/&#34;&gt;practical uses of Levenshtein distance&lt;/a&gt; using examples of several command-line parsers, including descriptions of how he analysed the code to learn and practice dynamic programming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Christina Austin wrote an in-depth explanation of &lt;a href=&#34;https://medium.com/@clausti/content-notes-using-css-declarative-state-machine-28f7b29e1ebd&#34;&gt;making two divs toggle using only CSS with no Javascript&lt;/a&gt;, including a lot of browser wonkery I&#39;d never heard of before.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;security&#34;&gt;Security&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bas Alberts posted the first in a series about &lt;a href=&#34;https://securitylab.github.com/research/now-you-c-me&#34;&gt;finding C vulnerabilities in interpreted languages like PHP and Perl&lt;/a&gt;, and I am already eagerly awaiting the next installment!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maddie Stone has a great post on the Project Zero blog about how &lt;a href=&#34;https://googleprojectzero.blogspot.com/2020/07/detection-deficit-year-in-review-of-0.html&#34;&gt;limitations in how 0-day vulnerabilities are detected mean we can&#39;t draw many conclusions from the data&lt;/a&gt;, including some hypotheses on why so few 0-day exploits are detected.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: July 12</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-july-12/</link>
       <pubDate>Sun, 12 Jul 2020 00:22:45 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-july-12/</guid>
       <description>&lt;p&gt;Starting to feel a little more on top of life—I restarted my bullet journal and exercise routine this week! Too early to see if it&#39;ll stick, but feels nice for now.&lt;/p&gt;
&lt;p&gt;Despite that, I don&#39;t feel particularly on top of my reading list. Have yet to solve the work laptop problem and have the nagging feeling that I&#39;m losing links from&amp;hellip;my iPad maybe? I also have a bunch of &lt;em&gt;actual blog posts&lt;/em&gt; half-written that&amp;hellip;someday I will get to. Someday.&lt;/p&gt;
&lt;p&gt;A friend of mine started doing charitable donations every Sunday, so I&#39;m taking it as motivation to set up more recurring monthly donations. Last week I added &lt;a href=&#34;https://wish-vancouver.net/&#34;&gt;WISH Drop-In Centre&lt;/a&gt;, and this week will be &lt;a href=&#34;https://detroitwaterproject.org/&#34;&gt;The Human Utility&lt;/a&gt;. What ways are you finding to do good in the world?&lt;/p&gt;
&lt;h1 id=&#34;papers&#34;&gt;Papers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.16140&#34;&gt;Distributed consent and its impact on privacy and observability in social networks&lt;/a&gt; by Juniper Lovato, Antoine Allard, Randall Harp, Laurent Hébert-Dufresne proposes additional privacy settings for social networks that could limit this ability of third parties to build profiles of non-consenting individuals entirely from their social connections. The authors emphasise that this is only one piece of a multi-faceted approach to rethinking privacy on the internet. I liked this because it contained easy-to-explain descriptions of the current issues with how consent is managed online.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;articles&#34;&gt;Articles&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Bookmarking &lt;a href=&#34;https://readrust.net/&#34;&gt;Read Rust&lt;/a&gt; for later reference. Guess I need a blogroll?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;programming-language-details&#34;&gt;Programming language details&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I don&#39;t remember where I found this link about &lt;a href=&#34;https://fullstackmilk.dev/efficiently_escaping_strings_using_cow_in_rust/&#34;&gt;escaping strings using Cow in Rust&lt;/a&gt; but now I know a little more about using strings and Rust&#39;s &lt;code&gt;Cow&lt;/code&gt; 🐄 enum.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jon Bodner posits that &lt;a href=&#34;https://www.capitalone.com/tech/software-engineering/go-is-boring/&#34;&gt;Go is a boring language, and that&#39;s a good thing&lt;/a&gt;. I like reading about philosophical choices behind programming language design, because it helps in using that language&#39;s strengths.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Matthias Endler reviews &lt;a href=&#34;https://endler.dev/2020/review/&#34;&gt;how programming changed in the 2010s&lt;/a&gt;, which captures some of the seismic shifts that made it disorienting to try to re-enter the tech world after a decade absence!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This Live Code Stream collection of &lt;a href=&#34;https://livecodestream.dev/post/2020-06-08-make-your-code-great-python-style/&#34;&gt;tips for writing more &amp;ldquo;pythonic&amp;rdquo; code&lt;/a&gt; contains some bits I&#39;d never encountered before, since I don&#39;t spend a lot of time in Python. The more languages I dabble in, the more I appreciate resources that explicitly tell you how to write idiomatic code!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-do-a-technical-thing&#34;&gt;How to do a technical thing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Julia Evans &lt;a href=&#34;https://jvns.ca/blog/2020/06/28/entr/&#34;&gt;explains the &lt;code&gt;entr&lt;/code&gt; command-line tool&lt;/a&gt;, which allows you to run commands every time your files change, even if your build tools don&#39;t natively support that—without having to dig into the bowels of &lt;code&gt;inotify&lt;/code&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Travis Downs&amp;rsquo; article on &lt;a href=&#34;https://travisdowns.github.io/blog/2020/07/06/concurrency-costs.html&#34;&gt;Concurrency Costs&lt;/a&gt; was a fascinating look at optimising concurrency strategies, though it assumes an understanding of concurrency primitives and more fluency in C++ than I possess. Bookmarking to review in the future after absorbing more content on this topic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&#39;m rewriting a lost work project in Go partly because I don&#39;t know how to write an API client in Go and want to learn, so I ran across Carl M.
Johnson&#39;s &lt;a href=&#34;https://blog.carlmjohnson.net/post/2020/go-cli-how-to-and-advice/&#34;&gt;Writing Go CLIs With Just Enough Architecture&lt;/a&gt; at exactly the right time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Erin Shepherd posted a tweet thread about &lt;a href=&#34;https://twitter.com/erincandescent/status/1281280157073002496&#34;&gt;a fascinating distributed debugging challenge&lt;/a&gt; that illustrates how hard it can be to reason about distributed systems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;being-human-in-tech&#34;&gt;Being human in tech&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bruce Hughes offers a non-binary person&#39;s perspective on &lt;a href=&#34;https://undevelopedbruce.com/2020/07/06/non-binary-in-tech/&#34;&gt;how to be an ally to non-binary people in tech&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sailor Ghoul&#39;s account of &lt;a href=&#34;https://medium.com/@soandsos/my-time-as-a-black-woman-software-engineer-at-capital-one-5c05fa8faed&#34;&gt;being gaslit out of a job as a Black women software engineer&lt;/a&gt; struck a chord with many Black women I follow on Twitter, so it&#39;s worth thinking about how these hostile engineering cultures get perpetuated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chelsea Troy&#39;s post on &lt;a href=&#34;https://chelseatroy.com/2020/06/24/anti-racist-pedagogy-in-a-graduate-computer-science-class/&#34;&gt;anti-racist pedagogy&lt;/a&gt; digs into things she learned from Chris Emden&#39;s book &lt;a href=&#34;https://www.penguinrandomhouse.com/books/237679/for-white-folks-who-teach-in-the-hood-and-the-rest-of-yall-too-by-christopher-emdin/9780807028025/&#34;&gt;For White Folks Who Teach in the Hood&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cindy Sridharan extolls the benefits of &lt;a href=&#34;https://medium.com/@copyconstruct/post-commit-reviews-b4cc2163ac7a&#34;&gt;post-commit code reviews&lt;/a&gt;, and I admit it&#39;s a compelling argument if you have a resilient CI/CD pipeline and culture.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;performance-tracking&#34;&gt;Performance tracking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Charity majors answers a question about &lt;a href=&#34;https://charity.wtf/2020/07/07/questionable-advice-can-engineering-productivity-be-measured/amp/&#34;&gt;whether you can measure individual developer productivity&lt;/a&gt; (tl;dr: NO), then links to &lt;a href=&#34;https://martinfowler.com/bliki/CannotMeasureProductivity.html&#34;&gt;Martin Fowler saying the same thing&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No real surprises in Ranjan Sakalley&#39;s post about &lt;a href=&#34;https://rnjn.in/articles/set-specific-goals-and-iterate/&#34;&gt;goal-based performance and progress tracking&lt;/a&gt;, but its emphasis on regular progress evaluations of KPIs makes me think I should probably look at and tweak my official objectives in Workday.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;systems-design&#34;&gt;Systems design&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sonja Blignaut discusses &lt;a href=&#34;https://blog.usejournal.com/7-differences-between-complex-and-complicated-fa44e0844606&#34;&gt;the difference between complex systems and complicated systems&lt;/a&gt;. I&#39;m left feeling that software alone is usually merely complicated, but add human behaviour and motivation and it quickly becomes complex.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simon Brown outlines some &lt;a href=&#34;https://dev.to/simonbrown/visio-draw-io-lucidchart-gliffy-etc-not-recommended-for-software-architecture-diagrams-4bmm&#34;&gt;weaknesses of using general-purpose diagramming tools for software architecture diagrams&lt;/a&gt;, which is how I stumbled onto his &lt;a href=&#34;https://dev.to/simonbrown/modelling-software-architecture-with-plantuml-56fc&#34;&gt;5-part series about architecture diagrams as text&lt;/a&gt;. Mostly a selling-point of the Structurizr DSL, but it&#39;s open source so worth looking in to!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Google style guide has some interesting tips about &lt;a href=&#34;https://developers.google.com/style/inclusive-documentation&#34;&gt;writing inclusive documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Malte Ubl writes about &lt;a href=&#34;https://www.industrialempathy.com/posts/design-docs-at-google/&#34;&gt;design docs at Google&lt;/a&gt; with a lot of transferable advice about design docs in general.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: June 28</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-june-28/</link>
       <pubDate>Sun, 28 Jun 2020 18:40:15 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-june-28/</guid>
       <description>&lt;p&gt;For some reason writing these link posts takes an incredible amount of time—I intended to write a bunch of code today and instead read a few articles, segments of several books, and set up a Twitch channel. (Guess I can&#39;t &lt;em&gt;really&lt;/em&gt; blame the latter on this post.)&lt;/p&gt;
&lt;p&gt;At some point I will have to figure out a convenient method of communicating all the links I read on my work computer to my personal laptop, but that&#39;s now a problem for July.&lt;/p&gt;
&lt;h1 id=&#34;books&#34;&gt;Books&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Finished &lt;em&gt;Broad Band&lt;/em&gt; (audiobook) and moved on to a different aspect of unequal treatment of computing history with Charlton D. McIlwain&#39;s &lt;a href=&#34;https://www.indiebound.org/book/9780190863845&#34;&gt;&lt;em&gt;Black Software: The Internet and Racial Justice, from the AfroNet to Black Lives Matter&lt;/em&gt;&lt;/a&gt; (audiobook).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally got my backordered copy of &lt;a href=&#34;https://www.indiebound.org/book/9780525509288&#34;&gt;&lt;em&gt;How to be an Antiracist&lt;/em&gt;&lt;/a&gt; by Ibram X. Kendi, which looks to be an engaging read. Thinking of asking if anyone at work wants to book club it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Impulse read Anne McCaffrey&#39;s &lt;em&gt;Dragonsong&lt;/em&gt; and &lt;em&gt;Dragonsinger&lt;/em&gt; the other night, after a discussion about how a lot of SFF that was formative to our younger selves turns out to be extremely problematic. These two aren&#39;t as cringey as some other classic McCaffrey.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enjoying &lt;a href=&#34;https://evolutionaryarchitecture.com/&#34;&gt;&lt;em&gt;Building Evolutionary Architectures&lt;/em&gt;&lt;/a&gt; by Neal Ford, Rebecca Parsons, and Patrick Kua, but I keep reading it late at night, when I can only read a few pages before I&#39;m too sleepy for the highly conceptual language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gave in to temptation to start Cyrille Martraire&#39;s &lt;a href=&#34;https://www.goodreads.com/book/show/34927405-living-documentation&#34;&gt;&lt;em&gt;Living Documentation: Continuous Knowledge Sharing by Design&lt;/em&gt;&lt;/a&gt; even though I&#39;m still reading another tech book. I&#39;m just so excited to read about how to make better documentation!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;articles&#34;&gt;Articles&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Coincidental to my recently learning what a trie is, I discovered Henry Robinson&#39;s &lt;a href=&#34;https://www.the-paper-trail.org/post/art-paper-notes/&#34;&gt;summary of a paper on Adaptive Radix Trees&lt;/a&gt;, complete with implementation details. Tempted to try implementing this in Rust?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apparently Microsoft is officially &lt;a href=&#34;https://thenewstack.io/microsoft-rust-is-the-industrys-best-chance-at-safe-systems-programming/&#34;&gt;throwing their support behind Rust&lt;/a&gt; for writing mission-critical software because of its improved memory safety over C++. C and C++ have been the dominant low-level systems languages since I first learned to program, so this feels momentous!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Really love Clare Liguori&#39;s deep dive into &lt;a href=&#34;https://aws.amazon.com/builders-library/automating-safe-hands-off-deployments/&#34;&gt;automating continuous deployment at Amazon&lt;/a&gt;, which has a ton of useful things to think about regarding deployment and automated rollbacks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ipsita Agarwal digs into some of the particular design challenges of &lt;a href=&#34;https://increment.com/frontend/case-study-mobile-payments-in-india/&#34;&gt;building a mobile payments app for an Indian market&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Slack someone suggested using &amp;ldquo;DP&amp;rdquo; to write a sudoku solver, and since I had no idea what that meant I ended up reading this &lt;a href=&#34;https://www.hackerearth.com/practice/algorithms/dynamic-programming/introduction-to-dynamic-programming-1/tutorial/&#34;&gt;intro to dynamic programming&lt;/a&gt;, which is clear, but still not enough for me to feel capable of applying it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I was intrigued enough by Stephen Anderson&#39;s &lt;a href=&#34;https://xd.adobe.com/ideas/perspectives/leadership-insights/design-leadership-facilitating-structures/&#34;&gt;Facilitating Structures&lt;/a&gt; that I joined his &lt;a href=&#34;https://www.producthunt.com/upcoming/the-mighty-minds-club&#34;&gt;Mighty Minds Club&lt;/a&gt;, hoping to find more insights and tools to get better at facilitating discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I liked Jason Yip&#39;s Twitter thread about how &lt;a href=&#34;https://twitter.com/jchyip/status/1269668710442287106&#34;&gt;changing people&#39;s behavior to change the culture&lt;/a&gt; is more effective than the reverse.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heard about some recent trouble with website certificates but don&#39;t understand the details of Certificate Authorities very well, so I appreciated Scott Helme&#39;s overview of the &lt;a href=&#34;https://scotthelme.co.uk/impending-doom-root-ca-expiring-legacy-clients/&#34;&gt;impending doom of expiring root CAs&lt;/a&gt;. Through this I also learned about the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Reporting_API&#34;&gt;new W3C Reporting API&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Denis Bakhvalov just &lt;a href=&#34;https://easyperf.net/blog/2020/06/24/Draft-Of-Perf-Book#mc_embed_signup&#34;&gt;announced a new book on performance analysis and tuning&lt;/a&gt; which sounds very interesting! Unfortunately there&#39;s no publication date, but Bakhvalov claims it will be released as a free PDF, so I&#39;ll be keeping my eye out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jacob Gabrielson writes a compelling article about &lt;a href=&#34;https://aws.amazon.com/builders-library/avoiding-fallback-in-distributed-systems/&#34;&gt;the perils of &amp;ldquo;fallback&amp;rdquo; mechanisms in distributed systems&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;papers&#34;&gt;Papers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Given that I&#39;m in the middle of trying to gather metrics using—among other tools—SonarQube, I felt compelled to read &lt;a href=&#34;https://arxiv.org/pdf/1907.00376.pdf&#34;&gt;Are SonarQube Rules Inducing Bugs?&lt;/a&gt; by Valentina Lenarduzzi, Francesco Lomio, Heikki Huttunen, and Davide Taibi. In summary: the authors found that SonarQube&#39;s severity ratings do not necessarily reflect the actual likelihood of a rule violation to be a bug, but that is far from showing that blindly following static code analysis rules &lt;em&gt;causes&lt;/em&gt; bugs.&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: June 6</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-jun-6/</link>
       <pubDate>Sat, 06 Jun 2020 21:32:17 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-jun-6/</guid>
       <description>&lt;p&gt;I, like most people I know, have been a little distracted from technology-as-usual by a constant feed of police brutality. It&#39;s been a jarring reminder that some people don&#39;t have the luxury of ignoring racial injustice, and that we should all be working harder for equality every day. I&#39;ve been donating money to community organizations and researching my local police department&#39;s history of using force, how about you?&lt;/p&gt;
&lt;p&gt;I still read a lot before I heard about the protests, and continue to poke at tech stuff on occasion for my own mental health. Stay safe out there. Black lives matter.&lt;/p&gt;
&lt;h1 id=&#34;books&#34;&gt;Books&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.penguinrandomhouse.com/books/545427/broad-band-by-claire-l-evans/&#34;&gt;&lt;em&gt;Broad Band: The Untold Story of the Women Who Made the Internet&lt;/em&gt;&lt;/a&gt; by Claire L. Evans (audiobook) has captured my interest much more than &lt;em&gt;Programmed Inequality&lt;/em&gt;, which I still have 6 hours left of and despair of ever having the interest to finish.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Couldn&#39;t sleep this week, so did a little escapist re-reading of some of my favourite Courtney Milan historical romances. The &lt;a href=&#34;http://www.courtneymilan.com/anovellacollection.php&#34;&gt;&lt;em&gt;Novella Collection&lt;/em&gt;&lt;/a&gt; and &lt;a href=&#34;http://www.courtneymilan.com/theheiresseffect.php&#34;&gt;&lt;em&gt;The Heiress Effect&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Skimmed Alex S. Vitale&#39;s &lt;a href=&#34;https://www.versobooks.com/books/2817-the-end-of-policing&#34;&gt;The End of Policing&lt;/a&gt;, which is available as a free ebook.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;papers&#34;&gt;Papers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Was intrigued by the title of &lt;a href=&#34;https://www.usenix.org/conference/nsdi20/presentation/lou&#34;&gt;&lt;em&gt;Understanding, Detecting and Localizing Partial Failures in Large System Software&lt;/em&gt;&lt;/a&gt; by Chang Lou, Peng Huang, and Scott Smith, and the fact that it won Best Paper at NSDI &amp;lsquo;20 so picked it for my work paper reading group.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;articles&#34;&gt;Articles&lt;/h1&gt;
&lt;h2 id=&#34;racial-justice&#34;&gt;Racial Justice&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Harry Kopyto asks &lt;a href=&#34;https://canadiandimension.com/articles/view/can-we-truly-transform-or-democratize-the-police&#34;&gt;Can we ever truly transform or democratize the police&lt;/a&gt; as a response to to other essays on how to address police brutality. Article is a little wordy but I enjoyed the history on how police forces were invented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.huffingtonpost.ca/entry/black-organizations-anti-racist-groups-canada_ca_5ed57ea1c5b6867b30853e20&#34;&gt;Resources to support Black communities in Canada&lt;/a&gt; (original link was removed, here&#39;s a different one I read)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nate Powell&#39;s &lt;a href=&#34;https://popula.com/2019/02/24/about-face/&#34;&gt;fascinating 2019 comic About Face&lt;/a&gt; explores how a certain aesthetic militarism became normalised in modern American society.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tatiana Mac wrote a full-of-attitude &lt;a href=&#34;https://tatianamac.com/posts/save-the-tears/&#34;&gt;guide for white women&lt;/a&gt; who want to make meaningful actions in support of Black people. It&#39;s very much a 101 kind of list, but I liked that it is focused.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only realised the third or fourth time I came across this list of &lt;a href=&#34;https://medium.com/equality-includes-you/what-white-people-can-do-for-racial-justice-f2d18b0e0234&#34;&gt;75 things white people can do for racial justice&lt;/a&gt; that it was originally written in 2017, but it is updated and still relevant.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;core-skills&#34;&gt;Core skills&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Several days after I made a mediocre presentation about threat modelling for developers, Jim Gumbley posted this &lt;a href=&#34;https://martinfowler.com/articles/agile-threat-modelling.html&#34;&gt;guide to threat modelling for developers&lt;/a&gt;, including advice on how to run a remote session. Sigh.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interview about &lt;a href=&#34;https://ideas.plusplus.co/taking-a-holistic-approach-at-twitter-university-7b369b582239&#34;&gt;Twitter University&lt;/a&gt;, an interesting approach to documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jamie Dobson&#39;s post on &lt;a href=&#34;https://www.infoq.com/articles/framework-emergent-strategy/&#34;&gt;Emergent Strategy&lt;/a&gt; isn&#39;t quite as comprehensible as I want it to be, though I am interested to see if his &lt;a href=&#34;https://www.container-solutions.com/a-pattern-language-for-strategy-chapter-ii&#34;&gt;strategy patterns&lt;/a&gt; would be easier to make practical use of.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I was hoping this article on &lt;a href=&#34;https://medium.com/@mcleanonline/building-psychological-safety-c46844cb918&#34;&gt;building psychological safety in teams&lt;/a&gt; would be more practical, but it&#39;s mostly about how Elsevier has set up a peer facilitation program. May need to instead look into the recommended book, Amy Edmondson’s &lt;em&gt;The Fearless Organization&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ryn Daniels has a whole series on introspecting as a mid-career technologist, starting with &lt;a href=&#34;https://www.ryn.works/blog/on-mid-career-challenges&#34;&gt;On Mid-Career Challenges&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;distributed-sytems&#34;&gt;Distributed Sytems&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;While trying to find more about the Twitter Engineering Effectiveness team I discovered Caitie McCaffrey, who has an older post of &lt;a href=&#34;https://caitiem.com/2017/09/07/getting-started-with-distributed-systems/&#34;&gt;resources for getting started with distributed systems&lt;/a&gt;, including some I hadn&#39;t seen mentioned before.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dan Luu talks about how &lt;a href=&#34;https://danluu.com/tracing-analytics/&#34;&gt;distributed tracing was made more useful at Twitter&lt;/a&gt;, primarily by making it easier to query&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Christina Delimitrou writes about the reasons behind and implications of &lt;a href=&#34;https://www.sigops.org/2020/the-increasing-heterogeneity-of-cloud-hardware-and-what-it-means-for-systems/&#34;&gt;increased heterogeneity of hardware in cloud data centres&lt;/a&gt;, which is an area I hadn&#39;t really heard of.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jaana Dogan&#39;s article on &lt;a href=&#34;https://medium.com/google-cloud/how-does-spanner-avoid-single-point-of-failures-in-writes-4f7765cd894&#34;&gt;how Spanner avoids single-point write failures&lt;/a&gt; should have been clearer to me after all the reading I&#39;ve done about distributed systems, but I feel like I&#39;d need to do more reading to have an instinct for what consistency model is implied.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;programming-languages&#34;&gt;Programming languages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Caitie McCaffrey also had this tempting article on &lt;a href=&#34;https://caitiem.com/2016/08/18/a-quick-guide-to-testing-in-golang/&#34;&gt;testing in Go&lt;/a&gt;. Is it time to write more than code puzzle answers in Go?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a bit of a Javascript outsider, this &lt;a href=&#34;http://lea.verou.me/2020/05/todays-javascript-from-an-outsiders-perspective/&#34;&gt;outsider&#39;s perspective of modern Javascript&lt;/a&gt; rings very true to me. I just want to load this module!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;remote-working&#34;&gt;Remote working&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Learning From Incidents posts &lt;a href=&#34;https://www.learningfromincidents.io/blog/learning-from-adaptations-to-coronavirus&#34;&gt;five common themes in adaptation to Coronavirus&lt;/a&gt;. I found the &amp;ldquo;how to adapt&amp;rdquo; sections useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I have been struggling to exercise at home for many of the reasons Casey Johnston outlines in &lt;a href=&#34;https://www.vice.com/en_us/article/pkyb3y/fun-home-workout-goals&#34;&gt;At-Home Workout Goals That Are Fun and Don&#39;t Suck&lt;/a&gt;. I wonder if any stores have weights back in stock yet?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jay Shirley at Stripe reviews &lt;a href=&#34;https://stripe.com/blog/remote-hub-one-year&#34;&gt;Stripe&#39;s remote engineering hub&lt;/a&gt;, an interesting organizational choice they made a year ago to become a more remote-friendly company. While it&#39;s not meant as an advice post for companies struggling to adjust to remote work, it does list things that have worked well for Stripe over the past year.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jen Gilbert for Lyft Engineering wrote about their &lt;a href=&#34;https://eng.lyft.com/how-lyft-does-remote-learning-differently-d57fdb19dde7&#34;&gt;short-notice remote onboarding program&lt;/a&gt;, which has some solid tips.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scaling-systems&#34;&gt;Scaling systems&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Venkatesh-Prasad Ranganath&#39;s reviews of &lt;a href=&#34;https://medium.com/@rvprasad/books-about-designing-systems-of-scale-295a7a91997c&#34;&gt;books on architecting for scale&lt;/a&gt; contains some books I&#39;m familiar with and others I&#39;m not, so more to add to the reading list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Marta Kosarchyn writes on the Khan Academy Engineering blog about how &lt;a href=&#34;https://engineering.khanacademy.org/posts/handling-2x-traffic-in-a-week.htm&#34;&gt;Khan Academy handled 2.5x normal load during Covid&lt;/a&gt;, which amounts to &amp;ldquo;our cloud hosting scaled automatically&amp;rdquo;, but still neat to see what some of their specific architecture choices are.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: May 24</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-may-24/</link>
       <pubDate>Sun, 24 May 2020 16:10:28 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-may-24/</guid>
       <description>&lt;p&gt;Finally caught up with my reading list backlog, which is good because I subscribed to three new mailing lists last week and maybe now I&#39;ll have time to read them.&lt;/p&gt;
&lt;h2 id=&#34;engineering-effectiveness&#34;&gt;Engineering effectiveness&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tutti Quintella writes a lot of good content about creating effective engineering cultures; my favourite so far is her presentation on &lt;a href=&#34;https://speakerdeck.com/tuttiq/scaling-software-development-teams-and-codebase&#34;&gt;scaling software development&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I felt like I&#39;d already read some post about the math supporting the usefulness of a platform team, but &lt;a href=&#34;https://medium.com/adobetech/why-do-organizations-need-a-platform-team-910d79893e0a&#34;&gt;this one&lt;/a&gt; by David Jared of Adobe was apparently not it and had some fun, comprehensible graphs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The previous platform post led me to the source of the graphs, Peter Seibel&#39;s funny post about Twitter growing pains intriguingly titled &lt;a href=&#34;http://gigamonkeys.com/flowers/&#34;&gt;Let 1000 flowers bloom. Then rip 999 of them out by the root&lt;/a&gt;. This one is square in my wheelhouse of dev experience, and I&#39;d like to hear about how effective the Engineering Effectiveness team has been over the past 5 years.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Francisco Trindade has a post about &lt;a href=&#34;https://medium.com/@frankmt/tell-me-how-you-measure-me-aa47d50cb9f5&#34;&gt;what metrics he uses for engineering management and why&lt;/a&gt;, a topic I have also been spending a lot of time on lately. I agree what matters is trend lines, not specific numbers, though some of the particular metrics he uses assumes a homogeneity among how different teams use kanban software, which I&#39;m not sure I can depend on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pat Kua&#39;s older post on &lt;a href=&#34;https://www.martinfowler.com/articles/useOfMetrics.html&#34;&gt;appropriate use of metrics&lt;/a&gt; dives more into the pitfalls of using the wrong metrics or trying to use them the wrong way.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;case-studies&#34;&gt;Case studies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This Netlify case study of &lt;a href=&#34;https://www.netlify.com/blog/2020/05/05/what-netlifys-infrastructure-team-learned-as-it-increased-deploy-speed-by-up-to-2x/&#34;&gt;how they increased deploy speeds&lt;/a&gt; solidified in my mind the need for diagrams when trying to explain architecture changes. I still wouldn&#39;t say I understand what Netlify &lt;em&gt;does&lt;/em&gt;, but thanks to the sequence diagrams I at least grasp the shape of what their refactor did and why it improved performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stephanie Morillo&#39;s &lt;a href=&#34;https://www.stephaniemorillo.co/bundler-case-study&#34;&gt;Bundler.io case study&lt;/a&gt; provides interesting examples of how to identify the effectiveness of documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;unix-tools&#34;&gt;UNIX tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Avdi Grimm makes a great analogy about &lt;a href=&#34;https://avdi.codes/the-limits-of-small-sharp-tools/&#34;&gt;small, sharp tools&lt;/a&gt; and when the UNIX command-line philosophy is maybe not the best solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tim Bray wrote about a little side project to &lt;a href=&#34;https://www.tbray.org/ongoing/When/202x/2020/05/18/TopFew&#34;&gt;replace a common Unix pipeline task with a Go program&lt;/a&gt; that left him with an interesting puzzle about how little tools like this perform. The comments are full of interesting commentary and links.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;software-architecture&#34;&gt;Software architecture&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Shubheksha Jalan explains &lt;a href=&#34;https://shubheksha.com/posts/2020/05/retries-in-distributed-systems-good-and-bad-parts/&#34;&gt;retry storms and how to prevent them&lt;/a&gt;, with comics as illustrations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scott Wlaschin&#39;s &lt;a href=&#34;https://increment.com/software-architecture/primer-on-functional-architecture/&#34;&gt;primer on functional architectures&lt;/a&gt; for Increment is intriguing, but still contains too much jargon I only vaguely understand for me to feel confident in the concepts. I&#39;m starting to understand how some of these patterns/frameworks/languages are related though. I&#39;d like to see more concrete examples of how people implement real software in a functional architecture, and what compromises have to be made.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Was excited to read Heidi Howard&#39;s new paper on consensus, &lt;a href=&#34;https://arxiv.org/pdf/2004.05074.pdf&#34;&gt;Paxos vs Raft&lt;/a&gt;! Conclusion by Howard and co-author Richard Mortier seems to be that Paxos isn&#39;t so much a more complicated algorithm than Raft, as just less-well described.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;leveling-up-your-engineering-skills&#34;&gt;Leveling up your engineering skills&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Denise Yu&#39;s recent epic on &lt;a href=&#34;https://deniseyu.io/2020/05/22/ramping-up-on-large-software-projects.html&#34;&gt;ramping up on large software projects&lt;/a&gt; at GitHub is chock-full of useful advice and anecdotes. I have no idea how she managed to put out four long, high-quality posts in four days this weekend, but I also recommend &lt;a href=&#34;https://deniseyu.io/2020/05/21/talking-about-software-at-scale.html&#34;&gt;How to Talk about Software at Scale&lt;/a&gt; and &lt;a href=&#34;https://deniseyu.io/2020/05/23/habits-of-high-performing-teams.html&#34;&gt;Habits of High-Functioning Teams&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Felienne Hermans points out the lack of formal instruction on how to &lt;em&gt;read&lt;/em&gt; code, and how she applied the concepts of &amp;ldquo;close reading&amp;rdquo; to &lt;a href=&#34;https://www.felienne.com/archives/6472&#34;&gt;propose &amp;ldquo;code reading clubs&amp;rdquo;&lt;/a&gt;. I admit I am fascinated, and the recommended exercises remind me Chelsea Troy&#39;s Leveling Up skill of &lt;a href=&#34;https://chelseatroy.com/2018/07/21/leveling-up-skill-6-commit-tracing/&#34;&gt;commit tracing&lt;/a&gt;. Definitely want to incorporate this into my life.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monica Lent has a free newsletter on &lt;a href=&#34;https://bloggingfordevs.com/&#34;&gt;blogging for devs&lt;/a&gt; that contains a ton of useful advice if you want people to see and enjoy your blog! Unfortunately last week I didn&#39;t have the time to follow along with the homework so I am here putting out a link post again instead of any substantial content. 😅&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;people-management&#34;&gt;People management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chelsea Troy re-linked to her post railing against &lt;a href=&#34;https://chelseatroy.com/2017/07/21/smart-is-not-a-hiring-criterion/&#34;&gt;&amp;ldquo;smart&amp;rdquo; as a hiring criterion&lt;/a&gt;, and while I—a self-identified &amp;ldquo;fast learner&amp;rdquo;—would like to quibble, she has a good point that innate brilliance does not necessarily correlate to &amp;ldquo;producer of maintainable code&amp;rdquo; or &amp;ldquo;good mentor to other engineers&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apparently half my Twitter feed is talking about feedback because a lot of companies are doing performance review around now, which gave better context for why someone linked to Jo Crossick&#39;s opinion about &lt;a href=&#34;https://www.jocrossick.com/blog/no-feedback.html&#34;&gt;why feedback is bad, actually&lt;/a&gt;. The part I most agree with is that the more senior you get, the less able you are to give casual feedback, because people will take it as fact regardless of how lightly you mean it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: May 19</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-may-19/</link>
       <pubDate>Tue, 19 May 2020 22:02:13 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-may-19/</guid>
       <description>&lt;p&gt;My giant reading list backlog is on the verge of preventing me from opening new links, so here&#39;s an annotated list of things I&#39;ve read since April. This isn&#39;t even all of it.&lt;/p&gt;
&lt;h1 id=&#34;books&#34;&gt;Books&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Finally&lt;/em&gt; finished &lt;em&gt;Designing Data-Intensive Applications&lt;/em&gt;! I really enjoyed this one, it just hit me at a weird time and I was having trouble getting back into the last few chapters. I found the maps to start each chapter extremely charming.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;papers&#34;&gt;Papers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.usenix.org/system/files/nsdi20-paper-brooker.pdf&#34;&gt;Millions of Tiny Databases&lt;/a&gt; by Marc Brooker, Tao Chen, and Fan Ping was a ton of fun, it tied in really well to the Cloud Networking course I&#39;ve been ignoring with all the details about data centre topology. I found the section on formal methods invaluable, as it made TLA+ seem approachable and practical.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;articles&#34;&gt;Articles&lt;/h1&gt;
&lt;h2 id=&#34;accessibility&#34;&gt;Accessibility&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hoping to pick up some accessibility knowledge by osmosis from articles like Sigute&#39;s &lt;a href=&#34;https://medium.com/android-microsoft/accessible-reordering-for-touch-devices-e7f7a7ef404&#34;&gt;Accessible Reordering for Touch Devices&lt;/a&gt;, which isn&#39;t a how to so much as a process retrospective. I like seeing how other people approach problems, and also the links to more instructional content in the article might be useful later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This piece from Safe and Silent validated my intuitive &lt;a href=&#34;https://safeandsilent.wordpress.com/2020/05/01/accessibility-window-dressing/&#34;&gt;skepticism on the usefulness of masks with windows for lipreading&lt;/a&gt;, and I also learned some cool stuff about how people who lipread actually do it. It&#39;s important to have affected populations involved in the design of assistive technologies!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;engineering-management&#34;&gt;Engineering Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Came across Marty Cagan&#39;s &lt;a href=&#34;https://svpg.com/product-vs-feature-teams/&#34;&gt;Product vs Feature teams&lt;/a&gt; piece again, and was halfway through before I remembered I&#39;d already read it. Thinking more lately about team structure and how much leverage I have over it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Intriguing &lt;a href=&#34;https://builtin.com/software-engineering-perspectives/lean-agile-methodology-software-engineering&#34;&gt;interview with Mary Poppendieck&lt;/a&gt;, who thinks the Agile movement she helped found in 2003 is obsolete. Makes a pretty good case for it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fred Hebert&#39;s &lt;a href=&#34;https://ferd.ca/complexity-has-to-live-somewhere.html&#34;&gt;Complexity has to live somewhere&lt;/a&gt; is one of those pieces that is absolutely obvious once you read it, but it seems profound because no one talking to early-career devs ever &lt;em&gt;says&lt;/em&gt; it. You can&#39;t remove complexity from your software unless you&#39;re only solving simple problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cat Swetel&#39;s quick &lt;a href=&#34;https://twitter.com/CatSwetel/status/1256996117415251968&#34;&gt;thread on &amp;ldquo;cost of delay&amp;rdquo;&lt;/a&gt; gave me something to churn on the topic of how to communicate priority for projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Camille Fournier has advice for how &lt;a href=&#34;https://medium.com/@skamille/product-for-internal-platforms-9205c3a08142&#34;&gt;internal platform teams can take lessons from product teams&lt;/a&gt;, which definitely addresses some issues I can relate to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I went down a rabbit hole of reading Rachel Kroll&#39;s blog, but was amused by this post on how &lt;a href=&#34;https://rachelbythebay.com/w/2020/04/30/dev/&#34;&gt;companies should be honest about their dev experience&lt;/a&gt; which felt a bit like a personal attack.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;remote-work&#34;&gt;Remote Work&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Been reading a bunch of articles about why &lt;a href=&#34;https://www.blog.google/inside-google/working-google/science-why-remote-meetings-dont-feel-same/&#34;&gt;remote meetings are weird&lt;/a&gt;, but this one at least offers tips to counteract each of the problems mentioned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Climate&#39;s blog about &lt;a href=&#34;https://codeclimate.com/blog/how-our-vp-of-engineering-used-data-to-support-our-engineering-team-on-a-human-level/&#34;&gt;how they used metrics to identify work-from-home friction that no one complained about&lt;/a&gt; was extremely useful in suggesting avenues for metrics to collect that actually return useful data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;making-a-website&#34;&gt;Making a website&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It&#39;s been a long time since I had to write a resume, but I was still click-baited into reading Sarah Drasner&#39;s &lt;a href=&#34;https://css-tricks.com/advice-for-writing-a-technical-resume/&#34;&gt;advice for writing a technical resume&lt;/a&gt;. I didn&#39;t find anything groundbreaking, but I hope it helps those who are seeking work right now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&#39;ve steadfastly avoided learning much about modern web frameworks, so Tom MacWright&#39;s &lt;a href=&#34;https://macwright.org/2020/05/10/spa-fatigue.html&#34;&gt;criticism of single-page apps&lt;/a&gt; was both rewarding to my curmudgeonly heart and also educational about what developing for the modern web actually looks like these days. I feel slightly less like an out-of-touch grandparent now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monica Lent just started up a new series on &amp;ldquo;blogging for developers&amp;rdquo;, so I was checking out her blog and this post about &lt;a href=&#34;https://monicalent.com/blog/2019/06/03/absolute-truths-unlearned-as-junior-developer/&#34;&gt;absolutist views of junior developers&lt;/a&gt; struck uncomfortably close to home.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-big-companies-do-things&#34;&gt;How big companies do things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apparently back in 2013 Netflix and Etsy had a &amp;ldquo;developer exchange program&amp;rdquo;? Interesting to note this &lt;a href=&#34;http://mhawthorne.net/posts/2013-etsy-netflix-I-push-therefore-I-am/&#34;&gt;time capsule summary&lt;/a&gt; of things one dude learned by contrasting the two companies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linkedin&#39;s &lt;a href=&#34;https://engineering.linkedin.com/blog/2020/continuous-integration&#34;&gt;approach to doing trunk-based development in high-velocity repos&lt;/a&gt; actually seems like kind of a headache, but I like learning what sort of things people automate to solve developer experience issues.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stumbled across Tom Critchlow&#39;s musing on &lt;a href=&#34;https://tomcritchlow.com/2019/02/17/building-digital-garden/&#34;&gt;digital gardens&lt;/a&gt; via Twitter and was reminded of my own itch to have a better way of organizing information outside of my head closer to how it feels inside my head. Still need to come up with a better way to archive links than these posts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I loved Brandon Falk&#39;s rant about the &lt;a href=&#34;https://twitter.com/gamozolabs/status/1259989454527139840?s=20&#34;&gt;lack of accessible tooling for fuzzing&lt;/a&gt; because it&#39;s a handful of people having an epically long but polite discussion about arcane research topics that I barely understand that got incidentally shared into my feed, but by reading it I feel like I understand at least the rough outline of the problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just a couple weeks ago I was looking for a way to &lt;a href=&#34;https://github.com/mingrammer/diagrams/blob/master/README.md&#34;&gt;make diagrams with code&lt;/a&gt; and the other day Pat Kua just shared Mingrammer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I didn&#39;t know InfoQ has &lt;a href=&#34;https://www.infoq.com/articles/architecture-trends-2020/&#34;&gt;a software trends matrix&lt;/a&gt; too, it&#39;s interesting to see a few different opinions on some of the big buzzwords.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gajus Kuizinas makes a coherent &lt;a href=&#34;https://dev.to/gajus/stop-using-package-lock-json-or-yarn-lock-3ddi&#34;&gt;argument against using package-lock.json&lt;/a&gt; in projects that will be dependencies of other projects. I think it might still work within an organization, but I see the issue in open source (especially an ecosystem like Node with ten thousand billion dependencies)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technical-deep-dives&#34;&gt;Technical deep dives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jaana Dogan&#39;s tweets about databases are great but long-form like &lt;a href=&#34;https://medium.com/@rakyll/things-i-wished-more-developers-knew-about-databases-2d0178464f78&#34;&gt;Things I Wished More Developers Knew About Databases&lt;/a&gt; was even more so. It dovetailed very well with the chapters of &lt;em&gt;Designing Data-Intensive Applications&lt;/em&gt; I was reading at the same time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Emily Stark coherently breaks down &lt;a href=&#34;https://twitter.com/estark37/status/1257441534779297804&#34;&gt;the meaning and impact of the DigiCert vulnerability disclosure&lt;/a&gt; in a Twitter thread, which provided a lot of helpful context for me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GeePaw Hill apparently does a lot of refactoring walkthroughs as Twitter threads? This one on &lt;a href=&#34;https://twitter.com/GeePawHill/status/1258005102167838723?s=20&#34;&gt;removing implementation inheritance&lt;/a&gt; caught my eye. I should probably follow this guy, I love refactoring advice.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;oddball-topics&#34;&gt;Oddball topics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vicki Boykis&#39;s &lt;em&gt;Normcore Tech&lt;/em&gt; newsletter is always introducing me to corners of culture I was unaware of, including the &lt;a href=&#34;https://vicki.substack.com/p/your-mattress-as-a-service&#34;&gt;rise of point-of-sale loans&lt;/a&gt;. New VC-backed ways to screw over poor people, I guess.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jen Manion&#39;s &lt;a href=&#34;https://aeon.co/amp/essays/may-we-all-be-so-brave-as-19th-century-female-husbands?&#34;&gt;piece on &amp;ldquo;female husbands&amp;rdquo;&lt;/a&gt; is a fascinating look at a bit of history I wasn&#39;t aware of. I listen to enough &amp;ldquo;strange stories from history&amp;rdquo; podcasts that I&#39;ve certainly heard stories of LGBTQ+ people throughout history, but the term &amp;ldquo;female husband&amp;rdquo; was new to me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This article about &lt;a href=&#34;https://www.quantamagazine.org/graduate-student-solves-decades-old-conway-knot-problem-20200519/&#34;&gt;Lisa Piccirillo&#39;s solution to the Conway Knot&lt;/a&gt; tries heroically to express 4-dimensional knot theory in lay terms—and succeeds pretty well! I feel like I get the gist of how the problem was solved, but I may never be able to properly visualize the knots of a 4D sphere.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: April 21</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-apr-21/</link>
       <pubDate>Tue, 21 Apr 2020 20:11:50 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-apr-21/</guid>
       <description>&lt;p&gt;I got busy and then the world kind of collapsed. For a while I couldn&#39;t care about much outside my immediate field of vision, but now I&#39;ve settled into the new life of working remote and idly stressing about a different set of problems. I still have a job, might as well read more and try to get better at it.&lt;/p&gt;
&lt;h2 id=&#34;completed-books&#34;&gt;Completed Books&lt;/h2&gt;
&lt;p&gt;I have been reading a lot of fiction.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Was lucky enough to get an advance copy of Martha Wells&amp;rsquo; new Murderbot novella &lt;a href=&#34;https://publishing.tor.com/networkeffect-marthawells/9781250229861/&#34;&gt;Network Effect&lt;/a&gt; and it was everything I wanted a new Murderbot book to be.&lt;/li&gt;
&lt;li&gt;Picked Elizabeth Moon&#39;s &lt;a href=&#34;http://www.elizabethmoon.com/books-serrano.html#hero&#34;&gt;Once a Hero&lt;/a&gt; off my bookshelf and read most of it, then went on a bit of a kick and re-read &lt;a href=&#34;http://www.elizabethmoon.com/books-paksworld.html#surrender&#34;&gt;Surrender None&lt;/a&gt; and the end of &lt;a href=&#34;http://www.elizabethmoon.com/books-paksworld.html#liar&#34;&gt;Liar&#39;s Oath&lt;/a&gt; before discovering that there are new books in the world of Paksenarrion. I borrowed the entire &lt;a href=&#34;https://www.goodreads.com/series/49609-paladin-s-legacy&#34;&gt;Paladin&#39;s Legacy series&lt;/a&gt; from the library.
&lt;ul&gt;
&lt;li&gt;Oath of Fealty&lt;/li&gt;
&lt;li&gt;Kings of the North&lt;/li&gt;
&lt;li&gt;Echoes of Betrayal&lt;/li&gt;
&lt;li&gt;Limits of Power&lt;/li&gt;
&lt;li&gt;Crown of Renewal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stumbled across a blog post by Jenny Trout and ended up reading the first two books in her &lt;a href=&#34;http://jennytrout.com/?page_id=10585&#34;&gt;The Boss series&lt;/a&gt; (as Abigail Barnette), sold by the concept of &amp;ldquo;if 50 Shades of Grey was written by someone who knows how kink works&amp;rdquo; and the fact that the first book was free. Not my normal genre but pleasingly well-written, covering a lot of complex topics and modelling of healthy communication. May not read any more though, contemporary romance isn&#39;t my jam.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;current-books&#34;&gt;Current Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Programmed Inequality: How Britain discarded women technologists and lost its edge in computing&lt;/a&gt; (audiobook) by Marie Hicks. I was so excited about this based on the excerpt I read, but the audiobook is a bit of a slog. Not sure if it&#39;s the narration or the pacing of the book itself, but I have trouble paying attention. A shame, because there&#39;s a ton of fascinating historical detail buried in here!&lt;/li&gt;
&lt;li&gt;Picked &lt;a href=&#34;https://dataintensive.net/&#34;&gt;Designing Data-Driven Applications&lt;/a&gt; back up. Still quite enjoyable, though this chapter on consensus feels familiar after all the classes I took last year.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;articles&#34;&gt;Articles&lt;/h2&gt;
&lt;p&gt;Deliberately reading things that are &lt;em&gt;not&lt;/em&gt; about current events, but not entirely avoiding the topic.&lt;/p&gt;
&lt;h3 id=&#34;covid19&#34;&gt;COVID-19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A summary by Tiernan Ray of &lt;a href=&#34;https://www.zdnet.com/google-amp/article/ai-runs-smack-up-against-a-big-data-problem-in-covid-19-diagnosis/&#34;&gt;the problems of using AI for COVID-19 diagnosis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I read a lot of DIY mask tutorials, but Beth Darrah&#39;s &lt;a href=&#34;https://slyfoxfabrics.com/blogs/mash-ups/the-ten-minute-mask-by-beth-darrah&#34;&gt;Ten-Minute Mask&lt;/a&gt; was one of the cleanest. I used my own pattern, but it&#39;s helpful to see how other people are approaching the issue of cloth masks.&lt;/li&gt;
&lt;li&gt;Most important tutorial: &lt;a href=&#34;https://melmagazine.com/en-us/story/how-to-wear-mask-glasses-no-fogging-up&#34;&gt;How to wear a mask without fogging up your glasses&lt;/a&gt; by Magdalene Taylor&lt;/li&gt;
&lt;li&gt;My Twitter timeline has been full of information and ideas on contact-tracing apps to minimize the spread of COVID-19, but I work with tracking software on a regular basis so it was validating to see this ACLU white paper on &lt;a href=&#34;https://www.aclu.org/report/aclu-white-paper-limits-location-tracking-epidemic?redirect=aclu-white-paper-limits-location-tracking-epidemic&#34;&gt;The Limits of Location Tracking in an Epidemic&lt;/a&gt; by Jay Stanley and Jennifer Stisa Granick, which brings up all the caveats I had considered, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;refactoring&#34;&gt;Refactoring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clare Sudbery wrote a helpful practical example of &lt;a href=&#34;https://martinfowler.com/articles/class-too-large.html&#34;&gt;refactoring a too-large class&lt;/a&gt; for martinfowler.com. I enjoy seeing real-life examples of theories I&#39;ve read about.&lt;/li&gt;
&lt;li&gt;The title &lt;a href=&#34;https://github.blog/2020-04-09-from-48k-lines-of-code-to-10-the-story-of-githubs-javascript-sdk/&#34;&gt;From 48K lines of code to 10&lt;/a&gt; is clickbait, since Gregor Martynus just moved all the code from a monolithic library to a bunch of plugins. Still, I found it timely since I have to write an app for the GitHub API and was looking at their SDKs anyway.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;random-technical-posts&#34;&gt;Random technical posts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In my new life working on Developer Experience I have to draw a lot more diagrams than I was accustomed to as a software developer. For that reason I paid attention to &lt;a href=&#34;https://medium.com/@emalone/using-modeling-to-understand-whats-happening-within-a-system-bb5b9f4fc128&#34;&gt;Using Modeling to Understand What&#39;s Happening in a System&lt;/a&gt;, though I can&#39;t think of where I&#39;d use any of these particular diagrams.&lt;/li&gt;
&lt;li&gt;In &lt;a href=&#34;https://www.swyx.io/writing/marketing-yourself/&#34;&gt;How to market yourself without being a celebrity&lt;/a&gt; Shawn Wang argues that it&#39;s important to find a niche and stick to it, which is why I&#39;ll never be famous in tech.&lt;/li&gt;
&lt;li&gt;I enjoyed Dave Nicolette&#39;s clarification of the purpose of &lt;a href=&#34;https://neopragma.com/2020/04/code-katas/&#34;&gt;code katas&lt;/a&gt;. Makes me want to get in the habit of doing them.&lt;/li&gt;
&lt;li&gt;Lydia Hallie made some cool &lt;a href=&#34;https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1&#34;&gt;visualizations of git commands&lt;/a&gt; like merge, rebase, and cherry-pick. The more ways to model a concept I&#39;m learning, the better!&lt;/li&gt;
&lt;li&gt;I like the idea of observability that Honeycomb advocates, but the definition still feels a bit slippery if you&#39;re not using their service. I appreciated Andy Dote&#39;s &lt;a href=&#34;https://andydote.co.uk/2020/03/15/observability-without-honeycomb/&#34;&gt;Observability without Honeycomb&lt;/a&gt;. Turns out yes, we already do something like this, though I have ideas to improve it.&lt;/li&gt;
&lt;li&gt;Stack Overflow&#39;s &lt;a href=&#34;https://stackoverflow.blog/2020/04/09/the-unfriendly-robot-automatically-flagging-unwelcoming-comments/&#34;&gt;Unfriendly Robot: automatically flagging unwelcoming comments&lt;/a&gt; by Jason Punyon and Kevin Montrose is a fun overview of the context and results of implementing an AI comment-flagging system.&lt;/li&gt;
&lt;li&gt;Zara Cooper&#39;s &lt;a href=&#34;https://stackoverflow.blog/2020/04/06/a-practical-guide-to-writing-technical-specs/&#34;&gt;practical guide to writing technical specs&lt;/a&gt; contains far more than I have ever put into a spec and now I want to go back and fix them. Wish I&#39;d found this when I was first made responsible for designing features!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-new-work-reality&#34;&gt;The new work reality&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It&#39;s impossible to not sound like a robot when talking about layoffs, but Nobl&#39;s &lt;a href=&#34;https://academy.nobl.io/how-to-layoff-employees-in-a-humane-way/&#34;&gt;How to Layoff Employees in a Humane Way&lt;/a&gt; at least sounds like an &lt;em&gt;ethical&lt;/em&gt; robot? I am very lucky that this article doesn&#39;t have any meaning for me personally, but I&#39;m thinking a lot about everyone I know who has been on one side or another of pandemic-related downsizing.&lt;/li&gt;
&lt;li&gt;Antonio Bertossi&#39;s &lt;a href=&#34;https://www.kinandcarta.com/en/insights/2020/04/bolster-remote-leadership/&#34;&gt;Six tips to bolster remote leadership and promote trust&lt;/a&gt; have a common thread of &amp;ldquo;be direct, communicate clearly, ditch unnecessary extras&amp;rdquo;. Good points to keep in mind as the weeks of remote work roll on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;papers&#34;&gt;Papers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1805.06358.pdf&#34;&gt;Conflict-free Replicated Datatypes&lt;/a&gt; by Nuno Preguica, Carlos Baquero, and Marc Shapiro was not illuminating. Maybe if I keep looking at &lt;a href=&#34;https://crdt.tech/&#34;&gt;https://crdt.tech/&lt;/a&gt; I will start to intuit how CRDTs actually work, instead of just the idealistic theory.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2004.04145&#34;&gt;Google COVID-19 Community Mobility Reports: Anonymization Process Description&lt;/a&gt; by A. Aktay et al. Only skimmed this, but it was interesting to see a real-world implementation of differential privacy. Useful context for looking at the &lt;a href=&#34;https://www.google.com/covid19/mobility/&#34;&gt;actual mobility reports&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DP-3T/documents/blob/master/DP3T%20White%20Paper.pdf&#34;&gt;Decentralized Privacy-Preserving Proximity Tracing (DP-3T) whitepaper&lt;/a&gt; by Prof. Carmela Troncoso et al was a fascinating look at a lot of threat models I hadn&#39;t heard of. Didn&#39;t get around to reading it before Apple and Google announced their respective contact-tracing frameworks that use a similar Bluetooth beacon approach, but I&#39;m glad I finally dug into it.&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: february 11</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-feb-11/</link>
       <pubDate>Tue, 11 Feb 2020 20:47:47 -0800</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-feb-11/</guid>
       <description>&lt;p&gt;Instead of posting a reading list on Sunday I instead read 5 books, so while I feel like I haven&#39;t gotten much reading done that&#39;s not entirely correct.&lt;/p&gt;
&lt;h2 id=&#34;completed-books&#34;&gt;Completed Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Finished &lt;a href=&#34;https://www.goodreads.com/en/book/show/34762552-algorithms-of-oppression&#34;&gt;Algorithms of Oppression: how search engines reinforce racism&lt;/a&gt; by Safiya Umoja Noble. A little more dry and academic than I was expecting, but I did learn some things about how algorithms intersect poorly with marginalised identities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Re-read Martha Wells &lt;a href=&#34;https://www.marthawells.com/murderbot.htm&#34;&gt;Murderbot Diaries&lt;/a&gt; novellas for at least the second, possibly third time. I deeply enjoy this character and this world, and the novellas are quick so they make good stress reads.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All Systems Red&lt;/li&gt;
&lt;li&gt;Artificial Condition&lt;/li&gt;
&lt;li&gt;Rogue Protocol&lt;/li&gt;
&lt;li&gt;Exit Strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/42036538-gideon-the-ninth&#34;&gt;Gideon the Ninth&lt;/a&gt; by Tamsyn Muir was nothing at all like what I expected, despite being exactly what all my friends described it as. Perhaps not &lt;em&gt;exactly&lt;/em&gt; alike. Billed as &amp;ldquo;lesbian necromancers in space&amp;rdquo;, while they technically &lt;em&gt;do&lt;/em&gt; go to space for half a page, it is primarily a sword-and-sorcery Clue-style mystery&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;articles&#34;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A disheartening but ultimately positively-framed retraction from Dr. Kate Laskowski about &lt;a href=&#34;https://laskowskilab.faculty.ucdavis.edu/2020/01/29/retractions/&#34;&gt;how she discovered that a collaborator faked the data for some of their research papers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vicki Boykis &lt;a href=&#34;https://vicki.substack.com/p/one-very-bad-apple&#34;&gt;tears apart Apple&#39;s ostensible &amp;ldquo;commitment to privacy&amp;rdquo;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Discovered Lara Hogan&#39;s blog via Twitter, and liked this post about &lt;a href=&#34;https://larahogan.me/blog/benefits-offering-challenges/&#34;&gt;how to offer challenges to your teammates&lt;/a&gt; and this one about &lt;a href=&#34;https://larahogan.me/blog/how-to-manage-up/&#34;&gt;how to manage up&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Level Up newsletter linked to this Madeleine Dore article with the promising title of &lt;a href=&#34;https://www.bbc.com/worklife/article/20200130-the-life-hack-to-reduce-admin-and-carve-out-downtime&#34;&gt;How to reduce &amp;lsquo;attention residue&amp;rsquo; in your life&lt;/a&gt;, but it mostly talks up a particular program offered at University of Melbourne, and is low on practical advice for the average person.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tl;dr schedule a chunk of time regularly to knock off half-a-dozen or so small life admin tasks and you&#39;ll feel more in control of your life.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quinn Crossley wrote &lt;a href=&#34;https://medium.com/@quinncrossley/uplifting-diverse-genders-beyond-women-and-non-binary-916c890f2185&#34;&gt;how &amp;ldquo;Women and Non-Binary&amp;rdquo; is not the best way to be inclusive&lt;/a&gt;, including a few clear steps about how to make your communities more welcome to all genders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This &lt;a href=&#34;https://blog.tidelift.com/open-source-licenses-2019-year-in-review&#34;&gt;2019 year in review of open source licenses&lt;/a&gt; by Luis Villa gives some context for the Hippocratic License I stumbled upon recently, as well as many other details about open source licenses that I didn&#39;t know until now!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alex Pareto wrote a quick blog post on &lt;a href=&#34;https://alexpareto.com/scalability/systems/2020/02/03/scaling-100k.html&#34;&gt;how to scale an app from 1 to 100K users&lt;/a&gt;. It summarizes commonly used architecture patterns for each stage of growth, with a few nods to specific technologies and where they fit into the picture.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In this podcast excerpt Kelsey Hightower shares his unpopular opinion that &lt;a href=&#34;https://changelog.com/posts/monoliths-are-the-future&#34;&gt;monoliths are the future&lt;/a&gt;, aka microservices and kubernetes won&#39;t save you from bad architecture decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After listening to &lt;em&gt;Brotopia&lt;/em&gt; I had a tiny bit of context for how startup VC works so Alex Danco&#39;s post about &lt;a href=&#34;https://alexdanco.com/2020/02/07/debt-is-coming/&#34;&gt;how the software startup world needs a financial realignment&lt;/a&gt; wasn&#39;t &lt;em&gt;completely&lt;/em&gt; over my head, but I still glazed over a lot of the specifics about production capital and liquidity preferences. However this line made me crack up: &lt;em&gt;“Don’t take debt” is tech’s “Four legs good, two legs bad.”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Janelle Shane has produced another work of horrifying genius by &lt;a href=&#34;https://aiweirdness.com/post/190721709472/ai-vintage-american-cooking-a-combination-that&#34;&gt;training the GPT-2 neural net on a collection of vintage American recipes involving gelatin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tanya Reilly describes fighting through organizational friction as &lt;a href=&#34;https://noidea.dog/blog/surviving-the-organisational-side-quest&#34;&gt;side quests in a point-and-click adventure game&lt;/a&gt; and is absolutely right. This is the kind of frustrating side quest I&#39;m aiming to reduce in my new role.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I still don&#39;t know what Project Zero is, but this is an incredible deep dive into &lt;a href=&#34;https://googleprojectzero.blogspot.com/2020/02/several-months-in-life-of-part1.html&#34;&gt;how they tracked down an obscure Chrome buffer overflow bug&lt;/a&gt; which I definitely didn&#39;t fully understand but has some interesting insight into debugging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaking of debugging, Chelsea Troy, seemingly partially talked into it by Twitter, posted a &lt;a href=&#34;https://chelseatroy.com/2020/01/27/the-case-of-the-failing-upload-part-1/&#34;&gt;debugging case study in the form of a murder mystery&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An interesting (and sad) conclusion from The Atlantic about &lt;a href=&#34;https://www.theatlantic.com/ideas/archive/2019/11/how-boeing-lost-its-bearings/602188/&#34;&gt;why Boeing lost its focus on engineering and safety&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After reading &lt;em&gt;Systems Performance&lt;/em&gt; I have a much clearer idea what it means that &lt;a href=&#34;https://www.zdnet.com/article/apple-deprecating-macos-kernel-extensions-kexts-is-a-great-win-for-security/&#34;&gt;Apple is deprecating macOS kernel extensions&lt;/a&gt;, and how that is both good for security and bad for certain types of tooling.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;papers&#34;&gt;Papers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cidrdb.org/cidr2019/papers/p119-hellerstein-cidr19.pdf&#34;&gt;Serverless computing: one step forward, two steps back&lt;/a&gt; Hellerstein et al., CIDR’19&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2002.02855.pdf&#34;&gt;Security Certification in Payment Card Industry:Testbeds, Measurements, and Recommendations&lt;/a&gt; Rahaman et al., CCS&#39;19&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading this week: Oct 31</title>
       <link>https://blog.fabrefact.ca/posts/what-i-m-reading-this-week/</link>
       <pubDate>Thu, 31 Oct 2019 20:26:57 -0700</pubDate>
       
       <guid>https://blog.fabrefact.ca/posts/what-i-m-reading-this-week/</guid>
       <description>&lt;p&gt;These days I am reading a lot across many devices and then immediately misplacing the references. Instead, here are some things I found interesting this week.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://segment.com/blog/the-10m-engineering-problem/&#34;&gt;The $10m engineering problem&lt;/a&gt;, blog post about how Segment cut their infrastructure costs by 30%
&lt;ul&gt;
&lt;li&gt;I found this fascinating! Hope to come back to it as I learn more about infrastructure design to see what else I can get out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Deep Work: rules for focused success in a distracted world&lt;/em&gt; by Cal Newport (audiobook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This book mostly made me angry, but buried in the endless tedious anecdotes about white men being successful is at least a blog post&#39;s worth of good advice.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arstechnica.com/gadgets/2019/10/how-a-months-old-amd-microcode-bug-destroyed-my-weekend/&#34;&gt;How a months-old AMD microcode bug destroyed my weekend&lt;/a&gt; Ars Technica article about a bug in certain AMD processors whose onboard random number generator always returns the same value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Doing Good Better: effective altruism and how you can make a difference&lt;/em&gt; by William MacAskill (audiobook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I was on board with this technique until he said one should &lt;em&gt;never&lt;/em&gt; allow personal feelings toward an issue to influence your charitable giving. As I am still interested in effective altruism I will keep listening, but with greater skepticism.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xiang (Jenny) Ren, Kirk Rodrigues, Luyuan Chen, Camilo Vega, Michael Stumm, and Ding Yuan. 2019. &lt;a href=&#34;https://doi.org/10.1145/3341301.3359640&#34;&gt;An analysis of performance evolution of Linux&#39;s core operations&lt;/a&gt;. In Proceedings of the 27th ACM Symposium on Operating Systems Principles (SOSP &amp;lsquo;19). ACM, New York, NY, USA, 554-569.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This one digs pretty deep and I decided to come back to it after I finish the work about CPU architecture I have on hold&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two Twitter-threads-turned-blog-posts on Errata Security: &lt;a href=&#34;https://blog.erratasec.com/2019/08/thread-on-osi-model-is-lie.html&#34;&gt;Thread on the OSI model is a lie&lt;/a&gt; and &lt;a href=&#34;https://blog.erratasec.com/2019/08/thread-on-network-input-parsers.html&#34;&gt;Thread on network input parsers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I never did learn networking properly in school, but I seem to be finding a flurry of sources on protocols and algorithms so maybe it&#39;s time to stop being intimidated by the topic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amy Ousterhout, Adam Belay, and Irene Zhang. 2019. &lt;a href=&#34;https://www.usenix.org/conference/hotcloud19/presentation/ousterhout&#34;&gt;Just in time delivery: leveraging operating systems knowledge for better datacenter congestion control&lt;/a&gt;. In Proceedings of the 11th USENIX Conference on Hot Topics in Cloud Computing (HotCloud&#39;19).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In which the authors propose a Chimera operating system for datacenters, not to be confused with the &lt;a href=&#34;http://www.cs.cmu.edu/~aml/chimera/chimera.html&#34;&gt;Chimera Real Time Operating System&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/presentations/rust-security-guarantees/&#34;&gt;The Most Secure Program Is One That Doesn’t Exist&lt;/a&gt; by Diane Hosfelt (transcript of talk from QCon SF 2018)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Watching talks about Rust is one step closer to learning Rust, right?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
 </channel>
</rss>
