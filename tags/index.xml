
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>Tags on Fabrefact</title>
   <link>https://sfarqu.github.io/fabrefact/tags/</link>
   <description>Recent content in Tags on Fabrefact</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <copyright>&amp;copy; 2019 Sara Farquharson</copyright>
   <lastBuildDate>Tue, 21 Apr 2020 20:11:50 -0700</lastBuildDate>
   
       <atom:link href="https://sfarqu.github.io/fabrefact/tags/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>what i&#39;m reading: April 21</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-apr-21/</link>
       <pubDate>Tue, 21 Apr 2020 20:11:50 -0700</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-apr-21/</guid>
       <description>&lt;p&gt;I got busy and then the world kind of collapsed. For a while I couldn&#39;t care about much outside my immediate field of vision, but now I&#39;ve settled into the new life of working remote and idly stressing about a different set of problems. I still have a job, might as well read more and try to get better at it.&lt;/p&gt;
&lt;h2 id=&#34;completed-books&#34;&gt;Completed Books&lt;/h2&gt;
&lt;p&gt;I have been reading a lot of fiction.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Was lucky enough to get an advance copy of Martha Wells&amp;rsquo; new Murderbot novella &lt;a href=&#34;https://publishing.tor.com/networkeffect-marthawells/9781250229861/&#34;&gt;Network Effect&lt;/a&gt; and it was everything I wanted a new Murderbot book to be.&lt;/li&gt;
&lt;li&gt;Picked Elizabeth Moon&#39;s &lt;a href=&#34;http://www.elizabethmoon.com/books-serrano.html#hero&#34;&gt;Once a Hero&lt;/a&gt; off my bookshelf and read most of it, then went on a bit of a kick and re-read &lt;a href=&#34;http://www.elizabethmoon.com/books-paksworld.html#surrender&#34;&gt;Surrender None&lt;/a&gt; and the end of &lt;a href=&#34;http://www.elizabethmoon.com/books-paksworld.html#liar&#34;&gt;Liar&#39;s Oath&lt;/a&gt; before discovering that there are new books in the world of Paksenarrion. I borrowed the entire &lt;a href=&#34;https://www.goodreads.com/series/49609-paladin-s-legacy&#34;&gt;Paladin&#39;s Legacy series&lt;/a&gt; from the library.
&lt;ul&gt;
&lt;li&gt;Oath of Fealty&lt;/li&gt;
&lt;li&gt;Kings of the North&lt;/li&gt;
&lt;li&gt;Echoes of Betrayal&lt;/li&gt;
&lt;li&gt;Limits of Power&lt;/li&gt;
&lt;li&gt;Crown of Renewal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stumbled across a blog post by Jenny Trout and ended up reading the first two books in her &lt;a href=&#34;http://jennytrout.com/?page_id=10585&#34;&gt;The Boss series&lt;/a&gt; (as Abigail Barnette), sold by the concept of &amp;ldquo;if 50 Shades of Grey was written by someone who knows how kink works&amp;rdquo; and the fact that the first book was free. Not my normal genre but pleasingly well-written, covering a lot of complex topics and modelling of healthy communication. May not read any more though, contemporary romance isn&#39;t my jam.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;current-books&#34;&gt;Current Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Programmed Inequality: How Britain discarded women technologists and lost its edge in computing&lt;/a&gt; (audiobook) by Marie Hicks. I was so excited about this based on the excerpt I read, but the audiobook is a bit of a slog. Not sure if it&#39;s the narration or the pacing of the book itself, but I have trouble paying attention. A shame, because there&#39;s a ton of fascinating historical detail buried in here!&lt;/li&gt;
&lt;li&gt;Picked &lt;a href=&#34;https://dataintensive.net/&#34;&gt;Designing Data-Driven Applications&lt;/a&gt; back up. Still quite enjoyable, though this chapter on consensus feels familiar after all the classes I took last year.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;articles&#34;&gt;Articles&lt;/h2&gt;
&lt;p&gt;Deliberately reading things that are &lt;em&gt;not&lt;/em&gt; about current events, but not entirely avoiding the topic.&lt;/p&gt;
&lt;h3 id=&#34;covid19&#34;&gt;COVID-19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A summary by Tiernan Ray of &lt;a href=&#34;https://www.zdnet.com/google-amp/article/ai-runs-smack-up-against-a-big-data-problem-in-covid-19-diagnosis/&#34;&gt;the problems of using AI for COVID-19 diagnosis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I read a lot of DIY mask tutorials, but Beth Darrah&#39;s &lt;a href=&#34;https://slyfoxfabrics.com/blogs/mash-ups/the-ten-minute-mask-by-beth-darrah&#34;&gt;Ten-Minute Mask&lt;/a&gt; was one of the cleanest. I used my own pattern, but it&#39;s helpful to see how other people are approaching the issue of cloth masks.&lt;/li&gt;
&lt;li&gt;Most important tutorial: &lt;a href=&#34;https://melmagazine.com/en-us/story/how-to-wear-mask-glasses-no-fogging-up&#34;&gt;How to wear a mask without fogging up your glasses&lt;/a&gt; by Magdalene Taylor&lt;/li&gt;
&lt;li&gt;My Twitter timeline has been full of information and ideas on contact-tracing apps to minimize the spread of COVID-19, but I work with tracking software on a regular basis so it was validating to see this ACLU white paper on &lt;a href=&#34;https://www.aclu.org/report/aclu-white-paper-limits-location-tracking-epidemic?redirect=aclu-white-paper-limits-location-tracking-epidemic&#34;&gt;The Limits of Location Tracking in an Epidemic&lt;/a&gt; by Jay Stanley and Jennifer Stisa Granick, which brings up all the caveats I had considered, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;refactoring&#34;&gt;Refactoring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clare Sudbery wrote a helpful practical example of &lt;a href=&#34;https://martinfowler.com/articles/class-too-large.html&#34;&gt;refactoring a too-large class&lt;/a&gt; for martinfowler.com. I enjoy seeing real-life examples of theories I&#39;ve read about.&lt;/li&gt;
&lt;li&gt;The title &lt;a href=&#34;https://github.blog/2020-04-09-from-48k-lines-of-code-to-10-the-story-of-githubs-javascript-sdk/&#34;&gt;From 48K lines of code to 10&lt;/a&gt; is clickbait, since Gregor Martynus just moved all the code from a monolithic library to a bunch of plugins. Still, I found it timely since I have to write an app for the GitHub API and was looking at their SDKs anyway.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;random-technical-posts&#34;&gt;Random technical posts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In my new life working on Developer Experience I have to draw a lot more diagrams than I was accustomed to as a software developer. For that reason I paid attention to &lt;a href=&#34;https://medium.com/@emalone/using-modeling-to-understand-whats-happening-within-a-system-bb5b9f4fc128&#34;&gt;Using Modeling to Understand What&#39;s Happening in a System&lt;/a&gt;, though I can&#39;t think of where I&#39;d use any of these particular diagrams.&lt;/li&gt;
&lt;li&gt;In &lt;a href=&#34;https://www.swyx.io/writing/marketing-yourself/&#34;&gt;How to market yourself without being a celebrity&lt;/a&gt; Shawn Wang argues that it&#39;s important to find a niche and stick to it, which is why I&#39;ll never be famous in tech.&lt;/li&gt;
&lt;li&gt;I enjoyed Dave Nicolette&#39;s clarification of the purpose of &lt;a href=&#34;https://neopragma.com/2020/04/code-katas/&#34;&gt;code katas&lt;/a&gt;. Makes me want to get in the habit of doing them.&lt;/li&gt;
&lt;li&gt;Lydia Hallie made some cool &lt;a href=&#34;https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1&#34;&gt;visualizations of git commands&lt;/a&gt; like merge, rebase, and cherry-pick. The more ways to model a concept I&#39;m learning, the better!&lt;/li&gt;
&lt;li&gt;I like the idea of observability that Honeycomb advocates, but the definition still feels a bit slippery if you&#39;re not using their service. I appreciated Andy Dote&#39;s &lt;a href=&#34;https://andydote.co.uk/2020/03/15/observability-without-honeycomb/&#34;&gt;Observability without Honeycomb&lt;/a&gt;. Turns out yes, we already do something like this, though I have ideas to improve it.&lt;/li&gt;
&lt;li&gt;Stack Overflow&#39;s &lt;a href=&#34;https://stackoverflow.blog/2020/04/09/the-unfriendly-robot-automatically-flagging-unwelcoming-comments/&#34;&gt;Unfriendly Robot: automatically flagging unwelcoming comments&lt;/a&gt; by Jason Punyon and Kevin Montrose is a fun overview of the context and results of implementing an AI comment-flagging system.&lt;/li&gt;
&lt;li&gt;Zara Cooper&#39;s &lt;a href=&#34;https://stackoverflow.blog/2020/04/06/a-practical-guide-to-writing-technical-specs/&#34;&gt;practical guide to writing technical specs&lt;/a&gt; contains far more than I have ever put into a spec and now I want to go back and fix them. Wish I&#39;d found this when I was first made responsible for designing features!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-new-work-reality&#34;&gt;The new work reality&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It&#39;s impossible to not sound like a robot when talking about layoffs, but Nobl&#39;s &lt;a href=&#34;https://academy.nobl.io/how-to-layoff-employees-in-a-humane-way/&#34;&gt;How to Layoff Employees in a Humane Way&lt;/a&gt; at least sounds like an &lt;em&gt;ethical&lt;/em&gt; robot? I am very lucky that this article doesn&#39;t have any meaning for me personally, but I&#39;m thinking a lot about everyone I know who has been on one side or another of pandemic-related downsizing.&lt;/li&gt;
&lt;li&gt;Antonio Bertossi&#39;s &lt;a href=&#34;https://www.kinandcarta.com/en/insights/2020/04/bolster-remote-leadership/&#34;&gt;Six tips to bolster remote leadership and promote trust&lt;/a&gt; have a common thread of &amp;ldquo;be direct, communicate clearly, ditch unnecessary extras&amp;rdquo;. Good points to keep in mind as the weeks of remote work roll on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;papers&#34;&gt;Papers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1805.06358.pdf&#34;&gt;Conflict-free Replicated Datatypes&lt;/a&gt; by Nuno Preguica, Carlos Baquero, and Marc Shapiro was not illuminating. Maybe if I keep looking at &lt;a href=&#34;https://crdt.tech/&#34;&gt;https://crdt.tech/&lt;/a&gt; I will start to intuit how CRDTs actually work, instead of just the idealistic theory.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2004.04145&#34;&gt;Google COVID-19 Community Mobility Reports: Anonymization Process Description&lt;/a&gt; by A. Aktay et al. Only skimmed this, but it was interesting to see a real-world implementation of differential privacy. Useful context for looking at the &lt;a href=&#34;https://www.google.com/covid19/mobility/&#34;&gt;actual mobility reports&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DP-3T/documents/blob/master/DP3T%20White%20Paper.pdf&#34;&gt;Decentralized Privacy-Preserving Proximity Tracing (DP-3T) whitepaper&lt;/a&gt; by Prof. Carmela Troncoso et al was a fascinating look at a lot of threat models I hadn&#39;t heard of. Didn&#39;t get around to reading it before Apple and Google announced their respective contact-tracing frameworks that use a similar Bluetooth beacon approach, but I&#39;m glad I finally dug into it.&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: february 11</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-feb-11/</link>
       <pubDate>Tue, 11 Feb 2020 20:47:47 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-feb-11/</guid>
       <description>&lt;p&gt;Instead of posting a reading list on Sunday I instead read 5 books, so while I feel like I haven&#39;t gotten much reading done that&#39;s not entirely correct.&lt;/p&gt;
&lt;h2 id=&#34;completed-books&#34;&gt;Completed Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Finished &lt;a href=&#34;https://www.goodreads.com/en/book/show/34762552-algorithms-of-oppression&#34;&gt;Algorithms of Oppression: how search engines reinforce racism&lt;/a&gt; by Safiya Umoja Noble. A little more dry and academic than I was expecting, but I did learn some things about how algorithms intersect poorly with marginalised identities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Re-read Martha Wells &lt;a href=&#34;https://www.marthawells.com/murderbot.htm&#34;&gt;Murderbot Diaries&lt;/a&gt; novellas for at least the second, possibly third time. I deeply enjoy this character and this world, and the novellas are quick so they make good stress reads.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All Systems Red&lt;/li&gt;
&lt;li&gt;Artificial Condition&lt;/li&gt;
&lt;li&gt;Rogue Protocol&lt;/li&gt;
&lt;li&gt;Exit Strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/42036538-gideon-the-ninth&#34;&gt;Gideon the Ninth&lt;/a&gt; by Tamsyn Muir was nothing at all like what I expected, despite being exactly what all my friends described it as. Perhaps not &lt;em&gt;exactly&lt;/em&gt; alike. Billed as &amp;ldquo;lesbian necromancers in space&amp;rdquo;, while they technically &lt;em&gt;do&lt;/em&gt; go to space for half a page, it is primarily a sword-and-sorcery Clue-style mystery&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;articles&#34;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A disheartening but ultimately positively-framed retraction from Dr. Kate Laskowski about &lt;a href=&#34;https://laskowskilab.faculty.ucdavis.edu/2020/01/29/retractions/&#34;&gt;how she discovered that a collaborator faked the data for some of their research papers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vicki Boykis &lt;a href=&#34;https://vicki.substack.com/p/one-very-bad-apple&#34;&gt;tears apart Apple&#39;s ostensible &amp;ldquo;commitment to privacy&amp;rdquo;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Discovered Lara Hogan&#39;s blog via Twitter, and liked this post about &lt;a href=&#34;https://larahogan.me/blog/benefits-offering-challenges/&#34;&gt;how to offer challenges to your teammates&lt;/a&gt; and this one about &lt;a href=&#34;https://larahogan.me/blog/how-to-manage-up/&#34;&gt;how to manage up&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Level Up newsletter linked to this Madeleine Dore article with the promising title of &lt;a href=&#34;https://www.bbc.com/worklife/article/20200130-the-life-hack-to-reduce-admin-and-carve-out-downtime&#34;&gt;How to reduce &amp;lsquo;attention residue&amp;rsquo; in your life&lt;/a&gt;, but it mostly talks up a particular program offered at University of Melbourne, and is low on practical advice for the average person.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tl;dr schedule a chunk of time regularly to knock off half-a-dozen or so small life admin tasks and you&#39;ll feel more in control of your life.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quinn Crossley wrote &lt;a href=&#34;https://medium.com/@quinncrossley/uplifting-diverse-genders-beyond-women-and-non-binary-916c890f2185&#34;&gt;how &amp;ldquo;Women and Non-Binary&amp;rdquo; is not the best way to be inclusive&lt;/a&gt;, including a few clear steps about how to make your communities more welcome to all genders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This &lt;a href=&#34;https://blog.tidelift.com/open-source-licenses-2019-year-in-review&#34;&gt;2019 year in review of open source licenses&lt;/a&gt; by Luis Villa gives some context for the Hippocratic License I stumbled upon recently, as well as many other details about open source licenses that I didn&#39;t know until now!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alex Pareto wrote a quick blog post on &lt;a href=&#34;https://alexpareto.com/scalability/systems/2020/02/03/scaling-100k.html&#34;&gt;how to scale an app from 1 to 100K users&lt;/a&gt;. It summarizes commonly used architecture patterns for each stage of growth, with a few nods to specific technologies and where they fit into the picture.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In this podcast excerpt Kelsey Hightower shares his unpopular opinion that &lt;a href=&#34;https://changelog.com/posts/monoliths-are-the-future&#34;&gt;monoliths are the future&lt;/a&gt;, aka microservices and kubernetes won&#39;t save you from bad architecture decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After listening to &lt;em&gt;Brotopia&lt;/em&gt; I had a tiny bit of context for how startup VC works so Alex Danco&#39;s post about &lt;a href=&#34;https://alexdanco.com/2020/02/07/debt-is-coming/&#34;&gt;how the software startup world needs a financial realignment&lt;/a&gt; wasn&#39;t &lt;em&gt;completely&lt;/em&gt; over my head, but I still glazed over a lot of the specifics about production capital and liquidity preferences. However this line made me crack up: &lt;em&gt;“Don’t take debt” is tech’s “Four legs good, two legs bad.”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Janelle Shane has produced another work of horrifying genius by &lt;a href=&#34;https://aiweirdness.com/post/190721709472/ai-vintage-american-cooking-a-combination-that&#34;&gt;training the GPT-2 neural net on a collection of vintage American recipes involving gelatin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tanya Reilly describes fighting through organizational friction as &lt;a href=&#34;https://noidea.dog/blog/surviving-the-organisational-side-quest&#34;&gt;side quests in a point-and-click adventure game&lt;/a&gt; and is absolutely right. This is the kind of frustrating side quest I&#39;m aiming to reduce in my new role.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I still don&#39;t know what Project Zero is, but this is an incredible deep dive into &lt;a href=&#34;https://googleprojectzero.blogspot.com/2020/02/several-months-in-life-of-part1.html&#34;&gt;how they tracked down an obscure Chrome buffer overflow bug&lt;/a&gt; which I definitely didn&#39;t fully understand but has some interesting insight into debugging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaking of debugging, Chelsea Troy, seemingly partially talked into it by Twitter, posted a &lt;a href=&#34;https://chelseatroy.com/2020/01/27/the-case-of-the-failing-upload-part-1/&#34;&gt;debugging case study in the form of a murder mystery&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An interesting (and sad) conclusion from The Atlantic about &lt;a href=&#34;https://www.theatlantic.com/ideas/archive/2019/11/how-boeing-lost-its-bearings/602188/&#34;&gt;why Boeing lost its focus on engineering and safety&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After reading &lt;em&gt;Systems Performance&lt;/em&gt; I have a much clearer idea what it means that &lt;a href=&#34;https://www.zdnet.com/article/apple-deprecating-macos-kernel-extensions-kexts-is-a-great-win-for-security/&#34;&gt;Apple is deprecating macOS kernel extensions&lt;/a&gt;, and how that is both good for security and bad for certain types of tooling.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;papers&#34;&gt;Papers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cidrdb.org/cidr2019/papers/p119-hellerstein-cidr19.pdf&#34;&gt;Serverless computing: one step forward, two steps back&lt;/a&gt; Hellerstein et al., CIDR’19&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2002.02855.pdf&#34;&gt;Security Certification in Payment Card Industry:Testbeds, Measurements, and Recommendations&lt;/a&gt; Rahaman et al., CCS&#39;19&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: February 2</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-feb-2/</link>
       <pubDate>Sun, 02 Feb 2020 12:38:20 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-feb-2/</guid>
       <description>&lt;p&gt;Hit the point where I need to start adding metadata to individual links, because I&#39;ve posted enough reading lists that I can&#39;t reliably remember where to find a particular article I want to go back to! Started looking at &lt;a href=&#34;https://gohugo.io/templates/data-templates/&#34;&gt;Hugo data templates&lt;/a&gt; but won&#39;t have time to play with it for a while. In the meantime, more unordered lists:&lt;/p&gt;
&lt;h2 id=&#34;current-books&#34;&gt;Current Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Started on Safiya Umoja Noble&#39;s &lt;a href=&#34;https://www.goodreads.com/en/book/show/34762552-algorithms-of-oppression&#34;&gt;Algorithms of Oppression: how search engines reinforce racism&lt;/a&gt; with some trepidation, but so far it is neither overwhelmingly depressing nor devoid of new information about algorithmic failures. Still a little depressing tho.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally pulled Martin Kleppmann&#39;s &lt;a href=&#34;https://dataintensive.net/&#34;&gt;Designing Data-Driven Applications&lt;/a&gt; off the to-be-read pile and already enjoying the tone! I think this&#39;ll be a faster read that &lt;em&gt;Systems Performance&lt;/em&gt; because I&#39;ve studied a bit of distributed systems design already, and Kleppmann promises to stay pretty high-level.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;articles&#34;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This older article from Christopher Allen about &lt;a href=&#34;http://www.lifewithalacrity.com/2008/09/group-threshold.html&#34;&gt;natural thresholds to community sizes&lt;/a&gt; goes much deeper than the casual references to Dunbar Number I&#39;ve seen before, and provides an interesting way to think about communities!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Still haven&#39;t gotten around to writing any tech talks, but Nina Zakharenko&#39;s &lt;a href=&#34;https://medium.com/@nnja/the-ultimate-guide-to-memorable-tech-talks-e7c350778d4b&#34;&gt;Ultimate Guide to Memorable Tech Talks&lt;/a&gt; has some very useful pointers for the whole process, including my sticking point: choosing a topic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also looked at Phil Nash&#39;s summary of &lt;a href=&#34;https://philna.sh/blog/2020/01/29/how-to-find-cfps-for-developer-conferences/&#34;&gt;how to find CFP&#39;s for developer conferences&lt;/a&gt; but it still sounds exhausting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I feel like Marc Brooker was on to something with this twitter thread &lt;a href=&#34;https://twitter.com/MarcJBrooker/status/1222217458028707841?s=20&#34;&gt;attempting to define the different things people mean when they talk about &amp;ldquo;containers&amp;rdquo;&lt;/a&gt; but to an outsider like me it was still a little opaque. Still thinking about it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clint Gibler (whose summary of AppSec Cali 2019 delighted me a few weeks ago) posted the slides from his talk at AppSec Cali 2020 talk &lt;a href=&#34;https://docs.google.com/presentation/d/1zbj9XBiv6r6zla0KHNfs63Ux45QZAfRut2zlK7o-dRw/mobilepresent#slide=id.g6555b225cd_0_1069&#34;&gt;An Opinionated Guide to Scaling Your Company&#39;s Security&lt;/a&gt;. There is &lt;em&gt;so much content&lt;/em&gt; here I feel like the talk must be two hours long, but I still want to watch it now. And also read all of the embedded links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&#39;ve heard about &lt;a href=&#34;https://netflixtechblog.com/introducing-aardvark-and-repokid-53b081bf3a7e?gi=7b630f80c460&#34;&gt;Repokid&lt;/a&gt; before but now it reminded me of a coworker&#39;s question at lunch the other day so I read the Netflix tech blog post about it&lt;/li&gt;
&lt;li&gt;Gibler also mentions &lt;a href=&#34;https://engineering.salesforce.com/salesforce-cloud-security-automating-least-privilege-in-aws-iam-with-policy-sentry-b04fe457b8dc&#34;&gt;Salesforce&#39;s Policy Sentry&lt;/a&gt; in the same &amp;ldquo;automated IAM permissions&amp;rdquo; space, so read that too&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/TomNomNom/status/1221839790225743872?s=20&#34;&gt;Learned something weird about bash&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;James Ma talks about the Lean concept of &lt;a href=&#34;https://www.jama.work/blog/negative-feedback-loops&#34;&gt;build-measure-learn and how it can lead to negative feedback loops&lt;/a&gt; but in my opinion doesn&#39;t really stick the landing of&amp;hellip;what to do about it? I think my takeaway is that any process introduced to improve a team can backfire and you have to think critically about what impact it&#39;s actually having.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&#39;ve been intrigued by Coraline Ehmke&#39;s Ethical Open Source Movement, but am not precisely versed in the minutiae of open source licenses. I found it interesting to read Christie Koehler&#39;s &lt;a href=&#34;https://subfictional.com/open-source-licenses-and-the-ethical-use-of-software/&#34;&gt;critique of the approach&lt;/a&gt; for context on why Ehmke&#39;s work is apparently controversial. I still fall on the side of not wanting software I write to be used for things I consider evil, so I will keep watching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Breanne Boland wrote about &lt;a href=&#34;https://breanneboland.com/blog/2020/01/27/how-an-sre-became-an-application-security-engineer-and-you-can-too/&#34;&gt;how she moved from an SRE to an Application Security Engineer role&lt;/a&gt;. I found the most interesting part to be her detailed description of how she prepared for the interview. I hadn&#39;t seen anyone talk about that kind of systematic approach before.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paul Ionescu&#39;s &lt;a href=&#34;https://medium.com/@paul_io/security-code-review-101-a3c593dc6854&#34;&gt;Secure Code Review 101 series&lt;/a&gt; has a lot of good info, but I was hoping for a genuine 101-level guide that I could use as teaching materials for someone unfamiliar with secure coding and this isn&#39;t quite it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This &lt;a href=&#34;https://medium.com/@Mo_Mack/editorial-guidelines-for-developers-and-data-scientists-e6ca5d6afa6a&#34;&gt;editorial guidelines for writing a compelling technical blog post&lt;/a&gt; piece by Maureen McElaney is more of a random grab-bag of tips than I expected when I clicked on it, and some of those tips are very specific to the editorial preferences of a single publication. Regardless I saw some good advice in there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I haven&#39;t used a feed reader in many years, but Jason McIntosh&#39;s &lt;a href=&#34;https://fogknife.com/2020-01-31-fraidycat-a-most-interesting-newsreader.html&#34;&gt;review of Fraidycat&lt;/a&gt; intrigues me as a way to both consolidate my reading sources and not get sucked into the endless vortex of More Content.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bonnie Eisenman does a good job &lt;a href=&#34;https://blog.bonnieeisenman.com/blog/senior-work/&#34;&gt;defining different types of work developers do including &amp;ldquo;exploratory work&amp;rdquo;&lt;/a&gt;, in a way that both makes me feel validated for not having checked in any code in ages, and also that I am doing exploratory work wrong and need to improve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This &lt;a href=&#34;https://firstround.com/review/the-engineers-guide-to-career-growth-advice-from-my-time-at-stripe-and-facebook/&#34;&gt;Engineer&#39;s Guide to Career Growth&lt;/a&gt; interview with Raylene Yung has some insightful advice both for growing as an engineer and on becoming an engineering manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tanya Janca provides advice for &lt;a href=&#34;https://medium.com/microsoftazure/when-is-a-vulnerability-not-a-vulnerability-41ff9c880adf&#34;&gt;when a vulnerability isn&#39;t a vulnerability&lt;/a&gt;, which is a good thing to keep in mind when making or receiving vulnerability reports.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: Jan 26</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-jan-26/</link>
       <pubDate>Sun, 26 Jan 2020 20:59:35 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-jan-26/</guid>
       <description>&lt;p&gt;This felt like a slow reading week since I got sick and spent a lot of time not wanting to do anything more strenuous than play phone games, and didn&#39;t finish either book that I&#39;m working through. Sunday morning make-coffee-and-read-articles is becoming a relaxing ritual though.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Been slogging through Don Norman&#39;s &lt;a href=&#34;https://mitpress.mit.edu/books/design-everyday-things-revised-and-expanded-edition&#34;&gt;The Design of Everyday Things&lt;/a&gt; (audiobook), since I&#39;ve encountered most of these concepts before—in works that were probably inspired by the first edition of this book, to be fair. Later in the book there&#39;s some good content about resilience engineering that kept my attention a little better. Lesson learned: always skip the preface in audiobooks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I didn&#39;t feel like I had the time to attend the local Global Diversity CFP event but I&#39;m glad Wen Cai &lt;a href=&#34;https://www.linkedin.com/pulse/how-become-tech-conference-speaker-key-takeaways-from-wen-cai&#34;&gt;wrote a post summarizing the key lessons&lt;/a&gt; of the experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Re-read Suz Hinton&#39;s &lt;a href=&#34;https://increment.com/development/a-guide-to-coding-accessible-developer-tools/&#34;&gt;guide to coding accessible developer tools&lt;/a&gt;, which has a lot of good things to keep in mind for any project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jon Cutler&#39;s &lt;a href=&#34;https://blog.prototypr.io/the-messy-shift-to-starting-together-61088323b896&#34;&gt;post on &amp;ldquo;starting together&amp;rdquo;&lt;/a&gt; was less focused than I&#39;d hoped from the tweet that led me to it, but has valuable takeaways about how to shift a team from a top-down to an autonomous mindset. The most important point being that this is hard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Looking for good guidelines on documentation led me to Gene Hughson&#39;s &lt;a href=&#34;https://genehughson.wordpress.com/2014/01/13/your-code-is-not-enough/&#34;&gt;Your Code is not Enough&lt;/a&gt;, which mostly sells the &amp;ldquo;why&amp;rdquo; of documentation but at the end gets a little into &amp;ldquo;how&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More practical advice can be found in Stephanie Blotner&#39;s &lt;a href=&#34;https://increment.com/documentation/primer-on-documentation-content-strategy/&#34;&gt;primer on documentation content strategy&lt;/a&gt; on Increment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I don&#39;t have kids of my own but I still &lt;a href=&#34;https://twitter.com/iproposethis/status/1161130456286289920?s=20&#34;&gt;worry about how to keep teens from being groomed by white supremacists on social media&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Even though I don&#39;t love watching talks, I might have to go through Cindy Sridharan&#39;s &lt;a href=&#34;https://medium.com/@copyconstruct/best-of-2019-in-tech-talks-bac697c3ee13&#34;&gt;Best of 2019 in Tech Talks&lt;/a&gt; because they all sound amazing. (I saw one of these live!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always looking for beginner-friendly security content, and while Troy Hunters &lt;a href=&#34;https://www.troyhunt.com/locking-down-your-website-scripts-with-csp-hashes-nonces-and-report-uri/&#34;&gt;overview of using content security policies&lt;/a&gt; isn&#39;t quite as accessible as I&#39;d like, it&#39;s not bad&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Had Gregor Hohpe&#39;s treatise on &lt;a href=&#34;https://martinfowler.com/articles/oss-lockin.html&#34;&gt;the perils of trying to avoid lock-in&lt;/a&gt; open in my browser for a while. Glad I finally got around to reading it because it&#39;s both insightful and funny.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also funny was Jan Schaumann&#39;s tweet thread about &lt;a href=&#34;https://www.netmeister.org/blog/ops-lessons.html&#34;&gt;Ops lessons we all learn the hard way&lt;/a&gt;, collected here into a blog post. I&#39;ve never even been Ops but I can still relate to some of these.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I was hoping for more out of Farnam Street&#39;s &lt;a href=&#34;https://fs.blog/smart-decisions/&#34;&gt;framework for making smarter decisions&lt;/a&gt;, which makes a case for people being bad at decisions but, despite the title, does not actually explain how to do better. It does however have a lot of links at the end which may be more promising.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teri Radichel has an interesting two-part post about &lt;a href=&#34;https://www.darkreading.com/vulnerabilities-and-threats/why-patching-software-is-hard-technical-challenges-/a/d-id/1330181&#34;&gt;why patching software in a large organization is hard&lt;/a&gt; with the first part addressing the technical challenges and &lt;a href=&#34;https://www.darkreading.com/vulnerabilities---threats/why-patching-software-is-hard-organizational-challenges/a/d-id/1330182&#34;&gt;the second looking at organizational issues&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elizabeth Ayer advocates for &lt;a href=&#34;https://medium.com/@ElizAyer/dont-ask-forgiveness-radiate-intent-d36fd22393a3&#34;&gt;&amp;ldquo;radiating intent&amp;rdquo; instead of &amp;ldquo;begging forgiveness&amp;rdquo;&lt;/a&gt; as a healthier attitude toward taking action without waiting for permission. I like that she at least nods to how this strategy might not work for everyone though.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jon Moore elaborates on Coda Hale&#39;s piece I linked last week with &lt;a href=&#34;https://blog.jonm.dev/posts/universal-scalability-for-orgs/&#34;&gt;some more math about organizational scalability&lt;/a&gt; which points to contention for shared resources and coherence/communication overheads as limiting factors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keavy McMinn has a great post about &lt;a href=&#34;https://keavy.com/work/technical-preparation/&#34;&gt;how she approaches technical research when solving engineering problems&lt;/a&gt;. Her advocacy of &amp;ldquo;spikes&amp;rdquo; makes me think of the second divergence phase of the &lt;a href=&#34;https://www.thoughtworks.com/insights/blog/double-diamond&#34;&gt;double diamond design model&lt;/a&gt;, which apparently makes at least one thing I&#39;ll take away from The Design of Everyday Things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://goslings.tech&#34;&gt;Christian Carter&lt;/a&gt; generously shared some of the resources he&#39;s using to learn to write a Go web app, and I started with Jon Calhoun&#39;s &lt;a href=&#34;https://www.calhoun.io/using-the-service-object-pattern-in-go/&#34;&gt;Using the Service Object Pattern in Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jessica Kerr talks about &lt;a href=&#34;https://blog.jessitron.com/2020/01/24/capturing-the-world-in-software/&#34;&gt;why to use event sourcing architectures&lt;/a&gt; even though they are not more scalable, faster, or simpler than the alternatives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I enjoyed Radhika Morabia&#39;s &lt;a href=&#34;https://radhika.dev/anti-workaholics-guide/&#34;&gt;Anti-Workaholic&#39;s Guide to Getting Ahead&lt;/a&gt;, which is a very pragmatic (if cynical) approach to how to build skills without burning yourself out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Last year I read &lt;a href=&#34;https://dl.acm.org/doi/10.1145/3355369.3355604&#34;&gt;an intriguing paper&lt;/a&gt; on how Google&#39;s new congestion control algorithm for QUIC was unfair to TCP traffic, but lead author Ranysha Ware just published &lt;a href=&#34;https://blog.apnic.net/2020/01/24/modelling-bbrs-interactions-with-loss-based-congestion-control/&#34;&gt;a new article about the research&lt;/a&gt; that is much more comprehensible to a layperson!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mattias Verraes posits a &lt;a href=&#34;http://verraes.net/2020/01/wall-of-technical-debt/&#34;&gt;strategy for making tech debt visible&lt;/a&gt; that unfortunately I don&#39;t think will fly in my office.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Liz Fong-Jones&amp;rsquo; Honeycomb blog post about &lt;a href=&#34;https://www.honeycomb.io/blog/treading-in-haunted-graveyards/&#34;&gt;automating infrastructure-as-code deploys&lt;/a&gt; was a little over my head because I don&#39;t know the first thing about Terraform, but I was sucked in by the reference to haunted graveyards in the title and learned a bit about optimizing cloud hosting bills.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: Jan 19</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-jan-19/</link>
       <pubDate>Sun, 19 Jan 2020 17:42:02 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-jan-19/</guid>
       <description>&lt;p&gt;Last week I got access back to my company&#39;s O&#39;Reilly books subscription after a licensing hiccup, so I finally got back to Brendan Gregg&#39;s &lt;em&gt;Systems Performance&lt;/em&gt;! Still managed to find time for some other reading though.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.goodreads.com/en/book/show/41104130-ten-drugs&#34;&gt;Ten Drugs: How Plants, Powders, and Pills Have Shaped the History of Medicine&lt;/a&gt;&lt;/em&gt; (audiobook) was a rollicking romp through the history of drug companies, accidental discoveries, and unintended side-effects. The author states at the beginning that this is more of a pop book than a science book, but I still learned a lot, and forgave a little pointless meandering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tried for-real pair programming for the first time recently and found it quite valuable, so &lt;a href=&#34;https://martinfowler.com/articles/on-pair-programming.html&#34;&gt;On Pair Programming&lt;/a&gt; by Birgitta Böckeler and Nina Siessegger came about at a good time, even if it seems to assume an organisation where pairing is the norm.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rina Artstain has thoughts about how to apply &lt;a href=&#34;https://medium.com/@rinaarts/radical-candor-software-edition-d4b5ad401be3&#34;&gt;Radical Candor to software development&lt;/a&gt;. Lots here that I should work on, since my natural tendency is to avoid confrontation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&#39;m not exactly the sort of person who follows RFC drafts, so this &lt;a href=&#34;https://twitter.com/jasnell/status/1217620376747827200?s=20&#34;&gt;Twitter rant by James Snell&lt;/a&gt; is the first time it clicked that HTTP/3 will use the QUIC protocol, which I read a paper about not long ago. I still don&#39;t know about QPACK and stateful header compression, which according to this are overly-complicated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I said last week that I love when conference talks are turned into blog posts; this week I found Clint Gibler summarized &lt;a href=&#34;https://tldrsec.com/blog/appsec-cali-2019/&#34;&gt;every talk from AppSec Cali 2019&lt;/a&gt; into a giant blog post, and it is &lt;em&gt;great&lt;/em&gt;!  AppSec California sounds like a great conference, and a lot of the summarised talks are directly relevant to a project I&#39;m helping out with.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lynn Cyrin had some quick thoughts on &lt;a href=&#34;https://twitter.com/lynncyrin/status/1217726716828737536?s=20&#34;&gt;how the infrastructure engineer role is changing&lt;/a&gt;. I hope they write that blog post and go more into depth on this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I normally am not super interested in &amp;ldquo;how I work&amp;rdquo;-type posts, but this &lt;a href=&#34;http://phdtalk.blogspot.com/2020/01/i-am-felienne-hermans-and-this-is-how-i.html?m=1&#34;&gt;interview with Felianne Hermans&lt;/a&gt; introduced me to the Goodnotes app, which I immediately downloaded because taking handwritten notes and annotating PDFs are the main uses I have found for my iPad, and an app that renders my handwriting searchable is golden.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Christian Posta breaks down &lt;a href=&#34;https://blog.christianposta.com/microservices/istio-as-an-example-of-when-not-to-do-microservices/&#34;&gt;why it made sense for Istio to ditch the complexity of a microservice architecture&lt;/a&gt; as an example of how to pick the best architecture for your product.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kristian Köhntopp turned a long tweet thread into a post about &lt;a href=&#34;http://blog.koehntopp.info/2020/01/17/rolling-back-a-rollout.html&#34;&gt;how to achieve reliable rollbacks&lt;/a&gt;, which mostly comes down to separating deploy from activation, appropriate feature flagging, and good observability (using Charity Majors&amp;rsquo; definition of &amp;ldquo;observability&amp;rdquo;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Liz Rice &lt;a href=&#34;https://medium.com/@lizrice/go-slices-maps-pitfalls-and-generics-f7ced963ced&#34;&gt;gets into the weeds about array slices in Go&lt;/a&gt;, which is pretty technical but I hope will somehow help me absorb enough Go by osmosis that when I finally come up with a project to build in Go I will have less trouble with it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stumbled across this older John Allspaw piece about &lt;a href=&#34;https://www.oreilly.com/radar/the-infinite-hows/&#34;&gt;why &amp;ldquo;how&amp;rdquo; is a better question than &amp;ldquo;why&amp;rdquo; in incident review&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Through the Level Up newsletter I keep finding articles a little above my weight class, but I still found Will Larson&#39;s article about &lt;a href=&#34;https://lethain.com/first-ninety-days-cto-vpe/&#34;&gt;what to do in your first 90 days as CTO&lt;/a&gt; interesting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mekka Okereke has a great Twitter thread for managers about how to make your team more inclusive by &lt;a href=&#34;https://twitter.com/mekkaokereke/status/1218940982122577921?s=20&#34;&gt;ensuring stretch opportunities are evenly distributed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alexis King goes way into depth about &lt;a href=&#34;https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/&#34;&gt;dynamic type systems are not inherently better at modelling real-world data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quincy Larson&#39;s story about how &lt;a href=&#34;https://www.freecodecamp.org/news/stopping-credit-card-fraud-and-saving-our-nonprofit/&#34;&gt;fraudulent donations came close to bankrupting his nonprofit&lt;/a&gt; is a nailbiter with a happy ending.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: Jan 12</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-jan-12/</link>
       <pubDate>Sun, 12 Jan 2020 23:05:22 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-jan-12/</guid>
       <description>&lt;p&gt;Instead of writing up my recent reading I spent most of today reading &lt;em&gt;more&lt;/em&gt; things, which is not exactly how I intended this to work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Molly Struve shares a specific story about migrating from Memcached to Redis, along with some &lt;a href=&#34;https://dev.to/molly_struve/switching-from-memcache-to-redis-and-some-tips-on-caching-4g1l&#34;&gt;cacheing best practices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Starting on my reading list of dystopian tech books with Emily Chang&#39;s &lt;a href=&#34;http://www.brotopiabook.com/&#34;&gt;Brotopia&lt;/a&gt; (audiobook). I expected this to retread a lot of ground I already knew, so was pleasantly surprised to instead learn a lot of details about Silicon Valley and how VC firms work that was new to me. Still lots of downer content and descriptions of assault and harassment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simon Wardley&#39;s tweet thread &lt;a href=&#34;https://twitter.com/swardley/status/1213868373051875328&#34;&gt;starts off in open source and ends up in dystopian techno-futurism&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Segun Ola makes a good point about &lt;a href=&#34;https://twitter.com/segunolalive/status/1213953805454381061?s=20&#34;&gt;where DIV tags still have value in semantic HTML&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chelsea Troy has been posting a lot and I have been reading all of it, but I especially liked this &lt;a href=&#34;https://chelseatroy.com/2020/01/06/posd-2-debugging-tactics/&#34;&gt;post on debugging tactics&lt;/a&gt; with a rant in the middle about how the software industry as a whole doesn&#39;t actually teach debugging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dan Lorenc posts eloquently about a topic I am currently invested in: &lt;a href=&#34;https://medium.com/better-programming/getting-serious-about-open-source-security-1d15609478fa&#34;&gt;how to apply security to open source dependencies&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuing with dependencies, Pablo Díaz writes about a concept for &lt;a href=&#34;https://medium.com/blogyuxiglobal/tracking-project-and-library-dependencies-with-graph-oriented-dbs-e55027d33adf&#34;&gt;using a graph-oriented database to model software dependencies and identify issues&lt;/a&gt;. This article was mostly a narrative about a problem the author solved and did not easily lend itself to steps to apply, but I think there&#39;s useful ideas here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I love when people turn talks into blog posts! I am way more likely to read an article than watch a video, and Galo Navarro&#39;s talk on &lt;a href=&#34;https://srvaroa.github.io/paas/infrastructure/platform/kubernetes/cloud/2020/01/02/talk-how-to-build-a-paas-for-1500-engineers.html&#34;&gt;how to build a successful platform team in a large org&lt;/a&gt; was worth looking at.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Twitter engineering blog has a great post by Bryce Anderson and Ruben Oanta about &lt;a href=&#34;https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/daperture-load-balancer.html&#34;&gt;Twitter&#39;s new load balancing algorithm for their custom RPC system&lt;/a&gt; complete with a lot of very helpful diagrams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://fionavoss.blog&#34;&gt;Fiona Voss&lt;/a&gt; asked for feedback on an interview question she had about scaling Twitter, which led me down a rabbit hole of wondering how &lt;em&gt;Twitter&lt;/em&gt; scaled Twitter. I found this article about their architecture in 2013 in &lt;a href=&#34;http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html&#34;&gt;High Scalability&lt;/a&gt;, and a Twitter engineering blog post from 2017 about their &lt;a href=&#34;https://blog.twitter.com/engineering/en_us/topics/infrastructure/2017/the-infrastructure-behind-twitter-scale.html&#34;&gt;infrastructure and ops&lt;/a&gt; by Mazdak Hashemi, which is still a bit over my head.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dan Abramov has an evocative point about how &lt;a href=&#34;https://overreacted.io/goodbye-clean-code/&#34;&gt;clean code is not a goal in itself&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I greatly enjoyed Cindy Sridharan&#39;s &lt;a href=&#34;https://medium.com/@copyconstruct/a-decade-in-review-in-tech-1cde76c9b43c&#34;&gt;review of tech trends of the 2010s&lt;/a&gt; and predictions of the future&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coda Hale blogged persuasively about &lt;a href=&#34;https://codahale.com/work-is-work/&#34;&gt;organizational performance as parallel systems&lt;/a&gt; and what that means for growth. I liked the principles at the end of this one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To be contrary, I then read Sonja Blignaut&#39;s metaphor of &lt;a href=&#34;https://medium.com/@sonjablignaut/reconceptualising-organisations-from-complicated-machines-to-flowing-streams-c03e9e917f35&#34;&gt;organizations as flow systems&lt;/a&gt;, though I don&#39;t think the two articles express contradictory ideas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Esther Derby talks about &lt;a href=&#34;https://www.estherderby.com/the-risks-of-anonymous-feedback/&#34;&gt;the risks of anonymous feedback&lt;/a&gt; among colleagues&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edmund Lewry writes about how they &lt;a href=&#34;https://clearblueskybox.wordpress.com/2020/01/05/becoming-a-technical-leader/&#34;&gt;define a Tech Lead, while moving into that role&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This &lt;a href=&#34;https://medium.com/@djpardis/management-and-coaching-best-practices-as-a-list-of-n-things-7a6d9c7f0fa5&#34;&gt;list of coaching best practices&lt;/a&gt; by Pardis Noorzad is clearly aimed at managers, but I think some of the advice is applicable to everyone who is trying to interact effectively with colleagues. (I take a little issue with the smile comment, but she&#39;s not wrong.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Denise Yu made and shared &lt;a href=&#34;https://twitter.com/deniseyu21/status/1215695277237178369?s=20&#34;&gt;a worksheet for writing a conference talk proposal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I found &lt;a href=&#34;https://www.annashipman.co.uk/jfdi.html&#34;&gt;Anna Shipman&#39;s blog&lt;/a&gt; through one of her recent book reviews, but ended up reading a large section of her archives. I thought this post on &lt;a href=&#34;https://www.annashipman.co.uk/jfdi/good-pull-requests.html&#34;&gt;best practices for making a pull request&lt;/a&gt; will be useful for me to reference as we migrate our codebase from Perforce to Github&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I recently had to go through the Byzantine password process at my work, so reading Emily Cain&#39;s article for Increment about how &lt;a href=&#34;https://increment.com/security/password-security-best-practices/&#34;&gt;password policies are terrible for security&lt;/a&gt; was mostly cathartic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A long explanation of &lt;a href=&#34;https://ourworldindata.org/plastic-pollution&#34;&gt;the global problem plastic pollution&lt;/a&gt; by Hannah Ritchie and Max Roser is a little depressing but also provides data-based suggestions about what policies could make the biggest difference. (Banning straws does not even come close to making the list.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;https://psyarxiv.com/vqyw6/&#34;&gt;recent replication of Mueller and Oppenheimer&#39;s study&lt;/a&gt; (about how taking notes longhand is better for your memory than typing on a computer) failed to replicate the same results. Another whole generation of pop-psychology books about the benefits of unplugging may turn out to be factually incorrect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Checked out Fancy Fairy&#39;s tutorial for &lt;a href=&#34;https://www.fancyfairy.com/fairywingtutorial&#34;&gt;making fairy wings&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what i&#39;m reading: Jan 3</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-january-3/</link>
       <pubDate>Fri, 03 Jan 2020 22:12:16 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-january-3/</guid>
       <description>&lt;p&gt;Finally got my CI pipeline working with Hugo! Next step is to start writing something other than link posts, but in the meantime: here&#39;s another link post.&lt;/p&gt;
&lt;p&gt;Even if no one else ever reads these posts this habit has proven invaluable to &lt;em&gt;me&lt;/em&gt;, because it&#39;s easier for me to share that interesting article I was reading the other day now that I have a list of them online.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A few chapters into &lt;a href=&#34;https://daretolead.brenebrown.com/&#34;&gt;Dare to Lead&lt;/a&gt; by Brené Brown (audiobook). Still searching for a business book that does not set my teeth on edge with business jargon. This is not that book.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Charity Majors offers advice on &lt;a href=&#34;https://charity.wtf/2019/12/17/questionable-advice-how-do-i-get-my-team-into-observability/&#34;&gt;how to get your developers on board with observability&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There&#39;s a lot to unpack in this article about &lt;a href=&#34;https://www.technologyreview.com/s/613305/this-chip-was-demoed-at-jeff-bezoss-secretive-tech-conference-it-could-be-key-to-the-future/&#34;&gt;the new AI-optimized chip Vivienne Sze demoed at &amp;ldquo;an elite, invite only conference&amp;rdquo;&lt;/a&gt;. There&#39;s currently a race to design more efficient chip architectures for specific algorithms—interesting. Given the many Twitter threads I&#39;ve seen about the lack of ethics in AI, also a candidate for Dystopian Hellscape Weekly, along with: Amazon has a secret tech conference full of technology co-funded by DARPA.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am utterly captivated by the idea of &lt;a href=&#34;http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions&#34;&gt;architecture decision records&lt;/a&gt; as envisioned by Michael Nygard (this &lt;a href=&#34;https://www.agilealliance.org/resources/experience-reports/distribute-design-authority-with-architecture-decision-records/&#34;&gt;longer interview&lt;/a&gt; explores how they worked in practice.) I want to retroactively add ADRs to every project I&#39;ve ever had to do forensic psychology on to piece together architecture decisions out of terse changelist messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nora Jones suggested this &lt;a href=&#34;https://bmcanesthesiol.biomedcentral.com/articles/10.1186/s12871-019-0913-5&#34;&gt;study comparing structured briefings to checklists in medical emergencies&lt;/a&gt; could apply to software incident response. The study showed that briefings and checklists were about equally effective in getting to a correct solution within a limited time, but that briefings might allow people to feel more in control of what to do next if the first thing doesn&#39;t work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rereading Esther Derby&#39;s piece on &lt;a href=&#34;https://www.estherderby.com/control-and-creativity/&#34;&gt;control vs creativity&lt;/a&gt; a few times and thinking about how to internalize this and relax my own tendency to want to control instead of delegate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chris McDermott wrote about &lt;a href=&#34;https://medium.com/@chrisvmcd/mapping-maturity-create-context-specific-maturity-models-with-wardley-maps-informed-by-cynefin-37ffcd1d315&#34;&gt;creating maturity models using Wardley Maps and the Cynefin framework&lt;/a&gt; which was intriguing enough that I finally watched &lt;a href=&#34;https://vimeo.com/189984496&#34;&gt;a video from Simom Wardley&lt;/a&gt; to figure out WTF a Wardley Map is, because I keep seeing the design/architecture/leadership parts of my Twitter feed talking about them. Video was entertaining but I still don&#39;t know how to &lt;em&gt;make&lt;/em&gt; such a map. Also haven&#39;t looked up Cynefin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chelsea Troy wrote about &lt;a href=&#34;https://chelseatroy.com/2020/01/01/boundaries-2-assisted-processing/&#34;&gt;setting boundaries for professional venting&lt;/a&gt; and I immediately shared it with a bunch of friends.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&#39;m starting to think a lot about what I want my career to look like down the road, so Anna Shipman&#39;s post on &lt;a href=&#34;https://www.annashipman.co.uk/jfdi/finding-next-level-job.html&#34;&gt;finding a higher-level tech job&lt;/a&gt; was interesting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On a similar note someone linked to &lt;a href=&#34;https://keavy.com/work/thriving-on-the-technical-leadership-path/&#34;&gt;Keavy McMinn&#39;s post about what technical leadership roles can look like&lt;/a&gt; and I immediately remembered reading it before, but I still read it again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I made it through Sanjay Sha&#39;s &lt;a href=&#34;https://queue.acm.org/detail.cfm?id=3374665&#34;&gt;The Reliability of Enterprise Applications&lt;/a&gt; but it was a bit of a slog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I might have accidentally made some new goals under the pressure of this time of year, and I&#39;m reflecting on &lt;a href=&#34;https://medium.com/@cwodtke/personal-okrs-three-years-later-7616e60574a4&#34;&gt;Christina Wodtke&#39;s personal OKR process&lt;/a&gt; to see if it might suit me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;While compiling this list I ended up reading more of Chelsea Troy&#39;s blog, and this post from her Listening series about &lt;a href=&#34;https://chelseatroy.com/2019/11/25/listening-6-deliberate-inquisition/&#34;&gt;deliberate inquisition&lt;/a&gt; seems like something I specifically need to practice.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading: holiday special</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-december/</link>
       <pubDate>Wed, 25 Dec 2019 23:25:13 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-december/</guid>
       <description>&lt;p&gt;What better time than holidays with the family to hide in your room writing blog posts? I got my work-provided login to O&#39;Reilly&#39;s online learning portal to work on my iPad without SSO, so now I have a lot more technical books available to me when I travel!&lt;/p&gt;
&lt;h3 id=&#34;books&#34;&gt;Books&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://beleaderly.com/woman-of-influence/&#34;&gt;&lt;em&gt;Woman of Influence: 9 Steps to Build Your Brand, Establish Your Legacy, and Thrive&lt;/em&gt;&lt;/a&gt; by Jo Miller - This was neither as cloying as I feared nor as practical as I&#39;d hoped, but I still may recommend it to our new women&#39;s resource group. I liked how Miller is pragmatic about what is (and is not) within your control your career, however I found the exercises in each chapter a little vague.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Moonwalking With Einstein&lt;/em&gt; by Joshua Foer (audiobook) - a biographical yarn about a pack of assholes (otherwise known as 25-year-old white men) that incidentally tells you how to memorize the order of a deck of playing cards. CW casual use of transphobic slurs. Do not recommend.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://annleckie.com/novel/the-raven-tower/&#34;&gt;&lt;em&gt;The Raven Tower&lt;/em&gt;&lt;/a&gt; by Ann Leckie - Read this earlier this year and adored it, so picked up a copy for myself as part of my Christmas shopping. Realised that I do not actually care at all about Mawat&#39;s story, so I mostly skipped that and instead read the bits where the Strength and Patience of the Hill describes its own experiences. I read those parts twice.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/agile-application-security/9781491938836/&#34;&gt;&lt;em&gt;Agile Application Security: Enabling Security in a Continuous Delivery Pipeline&lt;/em&gt;&lt;/a&gt; by Laura Bell, Jim Bird, Rich Smith, and Michael Brunton-Spall - Turns out I read this back in July? But logging into O&#39;Reilly again I&#39;m skimming everything on my lists and clearly I had forgotten huge chunks of this. I think I understand both CI/CD and security better than I did the first time I went through it. Look forward to bringing some of this into my work in the new year&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.brendangregg.com/sysperfbook.html&#34;&gt;&lt;em&gt;Systems Performance: Enterprise and the Cloud&lt;/em&gt;&lt;/a&gt; by Brendan Gregg - Only a few chapters in but this is already very helpful to me! I wish I&#39;d known about this book a year or two ago when I wanted to performance test something but didn&#39;t know where to start. I&#39;m planning to read Gregg&#39;s &lt;a href=&#34;http://www.brendangregg.com/bpf-performance-tools-book.html&#34;&gt;new BPF book&lt;/a&gt; but wanted to read this one for background first.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;articles&#34;&gt;Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A piece from Catalyst about &lt;a href=&#34;https://www.catalyst.org/research/actions-men-can-take-to-create-an-inclusive-workplace/&#34;&gt;actions men can take to create an inclusive workplace&lt;/a&gt; is getting added to the resource list for one of my current projects.&lt;/li&gt;
&lt;li&gt;I liked this post from Emily Nakashima about &lt;a href=&#34;https://honkathon.com/2014-07-25-sunset-testing-for-short-lived-code/&#34;&gt;&amp;ldquo;sunset testing&amp;rdquo;&lt;/a&gt;, aka how to remind yourself to remove that gross temporary hack from your code.&lt;/li&gt;
&lt;li&gt;Victoria Tran of Kitfox Games wrote a great &lt;a href=&#34;https://medium.com/kitfox-games/an-introverts-guide-to-networking-971676958352&#34;&gt;introvert&#39;s guide to networking&lt;/a&gt; from the perspective of going to tech/gaming events for professional purposes.&lt;/li&gt;
&lt;li&gt;Nicky Wrightson has a fascinating post about &lt;a href=&#34;https://medium.com/@SkyscannerEng/finding-the-steps-on-the-individual-contributor-ladder-8ec60e11fb46&#34;&gt;what a principal engineer is and how to find such roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stephanie Morillo has some good advice on &lt;a href=&#34;https://www.stephaniemorillo.co/post/2019/02/17/7-common-content-marketing-mistakes-developers-make-and-how-to-avoid-them&#34;&gt;content marketing for developers&lt;/a&gt;, if what you&#39;re trying to do is build a brand as a developer advocate. I&#39;m still not certain that&#39;s where I&#39;m trying to go, but I do prefer to communicate effectively.&lt;/li&gt;
&lt;li&gt;Vallery Lancey briefly outlines an interesting scenario which can cause &lt;a href=&#34;https://timewitch.net/post/2019-12-17-autoscaling-cascade/&#34;&gt;autoscaling groups to cascade out of control&lt;/a&gt; and a couple high-level concepts for how to prevent this. I might want to diagram this to understand it better?&lt;/li&gt;
&lt;li&gt;Still looking for an opportunity to use Laura Klein&#39;s &lt;a href=&#34;https://www.usersknow.com/blog/2019/10/2/make-better-product-decisions&#34;&gt;framework for making better product decisions&lt;/a&gt; It seems deceptively simple, but I&#39;m going to have to read this a few more times to see how to fit it into our slightly-different-than-described product cycle.&lt;/li&gt;
&lt;li&gt;Julia Evans &lt;a href=&#34;https://jvns.ca/blog/how-tracking-pixels-work/&#34;&gt;explains how tracking pixels work&lt;/a&gt; with her characteristic clarity and enthusiasm!&lt;/li&gt;
&lt;li&gt;Chelsea Troy has some interesting opinions about &lt;a href=&#34;https://chelseatroy.com/2019/12/18/reviewing-pull-requests/&#34;&gt;how to review pull requests&lt;/a&gt; which indicate a vastly different code review dynamic than I have ever experienced, but one that intrigued me. After reading the linked post about &lt;a href=&#34;https://chelseatroy.com/2019/12/13/async-collaboration-1-submitting-pull-requests/&#34;&gt;how to include context in pull requests&lt;/a&gt; I am frankly dying to try to incorporate this type of collaboration in my workplace.&lt;/li&gt;
&lt;li&gt;A Slack group I&#39;m in shared Anisha Sekar&#39;s &lt;a href=&#34;https://humaninterest.com/blog/startup-equity-basics-ask-stock-accept/&#34;&gt;Startup Equity Basics&lt;/a&gt; as a list of things to ask about stock options before accepting an offer—absolutely none of which I knew when I accepted an offer at a startup, so I lucked out by getting any benefit at all.&lt;/li&gt;
&lt;li&gt;Chelsea Troy (again) has a &lt;a href=&#34;https://chelseatroy.com/2018/05/24/why-your-efforts-to-make-your-company-inclusive-arent-working/&#34;&gt;rubric for evaluating team members on contributing to an inclusive culture&lt;/a&gt;, with some invaluable ideas on how to be more scientific about &amp;ldquo;is this human decent to work with&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;This Signal blog post on &lt;a href=&#34;https://signal.org/blog/secure-value-recovery/&#34;&gt;secure value recovery&lt;/a&gt; takes a walk through cloud storage, techniques to prevent brute-forcing of cryptographic keys, and secure enclaves, before circling around to one of my favourite topics: distributed consensus. Joshua Lund then describes how they implemented the Raft protocol in Rust. Honestly I only understood about half of this but I look forward to coming back to it in a few months.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;and-a-few-more-things-since-i-started-this-post-last-night&#34;&gt;And a few more things since I started this post last night&lt;/h3&gt;
&lt;p&gt;Trying to dig through all the unread links in my reading list during any holiday downtime:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I can&#39;t remember where I saw the recommendation that all developers should read Richard I. Cook&#39;s short paper &lt;a href=&#34;http://web.mit.edu/2.75/resources/random/How%20Complex%20Systems%20Fail.pdf&#34;&gt;How Complex Systems Fail&lt;/a&gt; but I concur.&lt;/li&gt;
&lt;li&gt;Thinking about the meaning of &amp;ldquo;beautiful code&amp;rdquo; after reading this small qualitative study about &lt;a href=&#34;https://lectoraatchangemanagement.files.wordpress.com/2019/12/acm_conference_proceedings__master__template.pdf&#34;&gt;the role of aesthetics in code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The latest issue of ACM Queue has a piece by Pat Helland on &lt;a href=&#34;https://queue.acm.org/detail.cfm?id=3364509&#34;&gt;the tradeoffs between read and write speeds in database architectures&lt;/a&gt; which sounded interesting, but no matter how many times I read the section on log-structured merge trees I still don&#39;t grok how LSM merges work. Hoping the Database Internals book I have on my reading list will help me out.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://labs.thisdot.co/blog/the-benefits-of-mentorship-for-developers&#34;&gt;The Benefits of Mentorshop for Developers&lt;/a&gt; by Jay Phelps has some interesting tips on mentorship from a different perspective than the general, non-tech-focused mentorship advice I&#39;ve seen elsewhere.&lt;/li&gt;
&lt;li&gt;Darius Kazemi, continuing to make me feel like a slacker who will never accomplish anything, spent 2019 &lt;a href=&#34;https://write.as/365-rfcs/365-ietf-rfcs-a-50th-anniversary-dive&#34;&gt;reading and blogging about the first 365 RFCs ever written by ARPANET engineers&lt;/a&gt;, a project I just heard about today, when he completed it.&lt;/li&gt;
&lt;li&gt;Cindy Sridharan posted &lt;a href=&#34;https://twitter.com/copyconstruct/status/1210024957117263873&#34;&gt;a cool framework for diagramming hyped tech trends&lt;/a&gt; that I now want to borrow for everything.&lt;/li&gt;
&lt;li&gt;I still haven&#39;t learned enough about GraphQL to work with it, but this article on &lt;a href=&#34;https://lab.wallarm.com/graphql-batching-attack/&#34;&gt;GraphQL batching attacks&lt;/a&gt; makes me want to read the whole series on security concerns for this API architecture.&lt;/li&gt;
&lt;li&gt;Ian Wilkes wrote a piece for the Honeycomb.io blog about &lt;a href=&#34;https://www.honeycomb.io/blog/secondary-storage-to-just-storage/&#34;&gt;how they sped up large queries without breaking the bank&lt;/a&gt; through a combination of AWS Lambda, efficient compression algorithms, and better garbage collection.&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading: catch-up edition</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-catch-up/</link>
       <pubDate>Sat, 14 Dec 2019 17:20:09 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-catch-up/</guid>
       <description>&lt;p&gt;Due to my site generator woes, I went a few weeks without sharing what I&#39;ve been reading. I have still been making a list though, and it&#39;s enormous! This post took twice as long to compile because I had to revisit all these links to remember why I liked them, and also group into topics to hopefully make it more readable&lt;/p&gt;
&lt;h3 id=&#34;nontech-reading&#34;&gt;Non-tech reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Finished up the audiobook for &lt;em&gt;Other Minds: The octopus, the sea, and the deep origins of consciousness&lt;/em&gt; by Peter Godfrey-Smith. The author is a philosopher, so this was a bit more abstract than I expected when I bought it, but it still had a lot of interesting science.&lt;/li&gt;
&lt;li&gt;A article by Sarah Milstein on &lt;a href=&#34;https://medium.com/better-humans/how-to-stay-friends-when-you-dont-have-kids-and-your-besties-do-7e5e3870eadf&#34;&gt;how to maintain a friendship once your friends start having kids&lt;/a&gt; was hilarious but also good advice&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;software-design-and-process&#34;&gt;Software design and process&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Very inspired to touch legacy projects after reading Carla Geisser&#39;s post on &lt;a href=&#34;https://softwareexorcist.com/writing/haunted-graveyards&#34;&gt;getting rid of &amp;ldquo;haunted graveyards&amp;rdquo;&lt;/a&gt;, a great name for a phenomenon I usually call &amp;ldquo;here be dragons code&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Haven&#39;t gotten around to researching Domain Driven Design, but Kevin Mas Ruiz&#39;s post on &lt;a href=&#34;https://dev.to/kmruiz/to-domain-driven-design-6ao&#34;&gt;how to start thinking in DDD terms when designing microservices&lt;/a&gt; was informative and easy to follow&lt;/li&gt;
&lt;li&gt;Allen Holub&#39;s post on &lt;a href=&#34;https://holub.com/technical-debt/&#34;&gt;technical debt&lt;/a&gt; was recommended by my new manager, and I agree with the framing that tech debt is a normal part of writing the best code you can with incomplete knowledge of the future.&lt;/li&gt;
&lt;li&gt;I was investigating how to design feature flags so they don&#39;t proliferate indefinitely in the codebase, and came across Pete Hodgson&#39;s &lt;a href=&#34;https://martinfowler.com/articles/feature-toggles.html&#34;&gt;deep dive on &amp;ldquo;Feature Toggles&amp;rdquo;&lt;/a&gt;, which is apparently another common term for the same idea. The article provides a bunch of different ways to think about or categorize flags, and I learned a lot, but I&#39;m having trouble recalling details. May still look for more on this topic.&lt;/li&gt;
&lt;li&gt;I ran into someone reading Will Larson&#39;s book &lt;em&gt;An Elegant Puzzle&lt;/em&gt; and as a result dug through a bunch of Will&#39;s blog. This article on &lt;a href=&#34;https://lethain.com/how-to-invest-technical-infrastructure/&#34;&gt;How to invest in technical infrastructure&lt;/a&gt; stood out.&lt;/li&gt;
&lt;li&gt;Mads Hartmann&#39;s &lt;a href=&#34;https://mads-hartmann.com/sre/2019/08/04/journey-into-observability-reading-material.html&#34;&gt;reading list for learning about observability&lt;/a&gt; is a lot more focused than my random time-based lists!&lt;/li&gt;
&lt;li&gt;Uggghhh I want to highlight just about every paragraph of this Increment article by Liz Fong-Jones: &lt;a href=&#34;https://increment.com/teams/code-less-engineer-more/&#34;&gt;Code less, engineer more&lt;/a&gt;. I need to have that title tattooed on the inside of my eyelids to counteract my impulse to want to build every single thing from scratch.&lt;/li&gt;
&lt;li&gt;Nora Jones &lt;a href=&#34;https://www.learningfromincidents.io/blog/learning-from-incidents-in-software&#34;&gt;announced a new community around learning from incidents in software&lt;/a&gt; and I&#39;m excited to have this new resource for learning about resilience engineering.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zapier.com/engineering/great-documentation-examples/&#34;&gt;8 Great Examples of Developer Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jennifer Riggins has written a number of articles on &lt;a href=&#34;https://thenewstack.io/continuous-documentation-in-a-ci-cd-world/&#34;&gt;how to integrate documentation into your Agile process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tanya Reilly&#39;s great post about &lt;a href=&#34;https://noidea.dog/blog/can-somebody-take-notes&#34;&gt;why taking notes at meetings is important and why it should be done by senior people in the room&lt;/a&gt; makes me want to implement this in every meeting I have from now on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;security&#34;&gt;Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A bunch of application security posts from hella-secure.com have crossed my radar recently. Ray&#39;s &lt;a href=&#34;https://hella-secure.com/secure-sdlc/&#34;&gt;Secure SDLC&lt;/a&gt; article is a refreshingly practical approach to adding security to an existing development lifecycle and Aaron&#39;s related &lt;a href=&#34;https://hella-secure.com/who-is-threat-modeling/&#34;&gt;intro to threat modelling&lt;/a&gt; is a lot more approachable than a lot of the other threat modelling content I&#39;ve come across.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This post by Cindy Sridharan on &lt;a href=&#34;https://medium.com/@copyconstruct/testing-microservices-the-sane-way-9bb31d158c16&#34;&gt;testing microservices&lt;/a&gt; was, uh, &lt;em&gt;very relatable&lt;/em&gt;&amp;hellip;Specifically when she talked about the folly of good-faith efforts to make the entire architecture testable in a single VM. The article then goes into serious detail about different types of testing and how to define tests, making some recommendations contrary to the normal testing rubric that I&#39;ll be thinking about for a while.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;career&#34;&gt;Career&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvns.ca/blog/brag-documents/&#34;&gt;Julia Evans article on &amp;ldquo;brag documents&amp;rdquo;&lt;/a&gt; has come up a few times recently, which reminds me that I should start doing this.&lt;/li&gt;
&lt;li&gt;Cate Huston wrote an interesting overview on &lt;a href=&#34;https://cate.blog/2019/12/04/mastering-new-leadership-styles/&#34;&gt;mastering new leadership styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Code Without Rules&lt;/em&gt; by Itamar Turner-Trauring is a treasure-trove of a blog full of practical advice on how to be a better programmer while still having a life outside of work. I entered via a recent &lt;a href=&#34;&#34;&gt;post on job negotiation&lt;/a&gt; but quickly ended up reading things like &lt;a href=&#34;https://codewithoutrules.com/2017/10/23/obsolete-skills/&#34;&gt;what to do when your technical skills are obsolete&lt;/a&gt;. Will likely be coming back to this for more.&lt;/li&gt;
&lt;li&gt;Kim Maida&#39;s &lt;a href=&#34;https://dev.to/kimmaida/7-tips-for-career-advancement-and-personal-fulfillment-5e02&#34;&gt;7 tips for career advancement&lt;/a&gt; covers a broad range of advice in a not-very-long article and definitely gave me some ideas for what to focus on next.&lt;/li&gt;
&lt;li&gt;I&#39;m about to start up a mentoring program at my work, so stumbling across &lt;a href=&#34;https://www.bc.edu/content/dam/files/centers/cwf/individuals/pdf/MentorGuide.pdf&#34;&gt;NCWIT&#39;s introduction to mentoring for mentors&lt;/a&gt; introduced me to &lt;a href=&#34;https://www.ncwit.org/resources/mentoring-box-technical-women-work&#34;&gt;NCWIT&#39;s Mentoring-in-a-Box toolkit&lt;/a&gt; at the right time.&lt;/li&gt;
&lt;li&gt;Bridget Kromhout gives &lt;a href=&#34;https://bridgetkromhout.com/blog/give-actionable-takeaways/&#34;&gt;in-depth instructions on how to get your talk selected by a conference&lt;/a&gt;, a lot of which comes down to &amp;ldquo;know your audience&amp;rdquo; and write your abstract with that audience in mind.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;technical-deep-dives&#34;&gt;Technical deep dives&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/a-journey-with-go/go-work-stealing-in-go-scheduler-d439231be64d&#34;&gt;Work-Stealing in Go Scheduler&lt;/a&gt; by Vincent Blanchon is way above my understanding of Go, but it was still interesting and has explanatory diagrams&lt;/li&gt;
&lt;li&gt;This &lt;a href=&#34;https://twitter.com/pati_gallardo/status/1203458003929833473&#34;&gt;Twitter discussion about the non-intuitive nature of queuing theory math&lt;/a&gt; kicked off by Patricia Aas led me to John D. Cook&#39;s &lt;a href=&#34;https://www.johndcook.com/blog/2008/10/21/what-happens-when-you-add-a-new-teller/&#34;&gt;post on queueing theory&lt;/a&gt; and from there to this &lt;a href=&#34;https://www.johndcook.com/blog/2019/11/25/stochastic-rounding-and-privacy/&#34;&gt;post about stochastic rounding as a better way to anonymize data&lt;/a&gt;. I feel like I now know just enough about both of these mathy topics that I need to learn more!&lt;/li&gt;
&lt;li&gt;Jonathan Mueller wrote an &lt;a href=&#34;https://foonathan.net/2019/11/implementer-vs-user-names/&#34;&gt;incisive post on naming functions&lt;/a&gt;, inspired by a &lt;a href=&#34;https://www.youtube.com/watch?v=MBRoCdtZOYg&#34;&gt;talk by Kate Gregory&lt;/a&gt;. I liked this because I am &lt;em&gt;terrible&lt;/em&gt; at naming things, and every little bit of advice is appreciated.&lt;/li&gt;
&lt;li&gt;I loved Lynn Fisher&#39;s &lt;a href=&#34;https://lynnandtonic.com/thoughts/entries/case-study-2019-refresh/&#34;&gt;case study of how she redesigned her website&lt;/a&gt; because I know just enough CSS to be very impressed when people do clever things I could never have imagined with it.&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>(framework) mistakes were made</title>
       <link>https://sfarqu.github.io/fabrefact/posts/framework-mistakes-were-made/</link>
       <pubDate>Sat, 07 Dec 2019 23:13:25 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/framework-mistakes-were-made/</guid>
       <description>&lt;p&gt;It took a long time for me to go from &amp;ldquo;I want to write blog posts&amp;rdquo; to actually, y&#39;know, writing anything. Not due to any sort of writer&#39;s block, but because the idea of designing a new website was &lt;em&gt;so exhausting&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Even once I decided to use a static site generator, I had to choose &lt;em&gt;which&lt;/em&gt; generator, and then a template&amp;hellip; Ugh! After four months or so I finally picked Hexo and tweaked a template to my liking.&lt;/p&gt;
&lt;p&gt;That turned out to be a mistake. How could I have done better?&lt;/p&gt;
&lt;h2 id=&#34;the-perils-of-picking-tools&#34;&gt;The perils of picking tools&lt;/h2&gt;
&lt;p&gt;Once, back in the before times, when we wanted to create a webpage we would write plain HTML in a text editor (uphill both ways in the snow) but that hasn&#39;t been the in thing for decades now. The last time I had a go at creating a new website (circa 2010) it still seemed like content management systems were the way to go. Spend days or weeks choosing a platform that had all the features you need but wasn&#39;t too complicated, or write your own from scratch and be responsible for all the database management, user authentication, and API design.&lt;/p&gt;
&lt;p&gt;I&#39;ve always fallen in the &amp;ldquo;roll your own&amp;rdquo; camp, which is why I have not had a functioning website in a decade.&lt;/p&gt;
&lt;p&gt;When this new blogging impulse hit, I, older and wiser, determined to use a tool to abstract away all the blog boilerplate and website design. I wanted to simply publish posts without having to babysit my own Linux server. Conveniently, while I was ignoring the world of web, the tide had shifted away from databases and admin consoles to static HTML sites on free hosting.&lt;/p&gt;
&lt;p&gt;Turns out I still don&#39;t like outsourcing most of my application to other programmers, but it&#39;s either that or go back to never finishing my own framework so what choice did I have?&lt;/p&gt;
&lt;h2 id=&#34;decisions-decisions&#34;&gt;Decisions, decisions&lt;/h2&gt;
&lt;p&gt;A lot of choice! There are approximately eleventy-billion static site generators out there, so how to pick one, if you only barely understand what a static site generator is? I settled on a few heuristics to get the fastest start on a new site:&lt;/p&gt;
&lt;h3 id=&#34;1-how-good-is-the-documentation&#34;&gt;1. How good is the documentation?&lt;/h3&gt;
&lt;p&gt;If you want to get started as fast as possible, be on the lookout for step-by-step instructions for getting up and running with all the features you&#39;re looking for.&lt;/p&gt;
&lt;h3 id=&#34;2-is-the-generator-written-in-a-programming-language-you-know-or-want-to-learn&#34;&gt;2. Is the generator written in a programming language you know (or want to learn?)&lt;/h3&gt;
&lt;p&gt;Eventually you may want to understand what is happening inside the generator, or edit some of the templates. Even if you are not interested in tinkering, the tooling around installing, updating, and running the generator will be tied to the language it&#39;s written in. Some familiarity with that programming language will make the whole process easier.&lt;/p&gt;
&lt;h3 id=&#34;3-are-there-prebuilt-themes-you-like-the-look-of&#34;&gt;3. Are there pre-built themes you like the look of?&lt;/h3&gt;
&lt;p&gt;Even if you intend to make a custom theme, starting with one that is most of what you want will give you a vast head start.&lt;/p&gt;
&lt;h3 id=&#34;4-how-popular-is-it&#34;&gt;4. How popular is it?&lt;/h3&gt;
&lt;p&gt;The larger the user community, the more likely you are to find tutorials, Stack Overflow answers, and lots of themes or other sites for reference.&lt;/p&gt;
&lt;h3 id=&#34;5-is-it-actively-maintained&#34;&gt;5. Is it actively maintained?&lt;/h3&gt;
&lt;p&gt;How often is it updated? Are there any problems regularly reported by users that aren&#39;t getting fixed?&lt;/p&gt;
&lt;h2 id=&#34;mistakes-were-made&#34;&gt;Mistakes were made&lt;/h2&gt;
&lt;p&gt;Where I went wrong was in prioritizing a pre-made theme I liked over community, language, and support. Hexo is a fairly popular static site generator written in node.js, but it turned out to have some fatal flaws for my needs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Turns out I don&#39;t like Node&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I didn&#39;t have strong feelings about language choice when I started, and I thought learning Node a little better might be useful. Instead I just felt annoyed whenever I had to debug anything, because I don&#39;t care enough about getting familiar with the framework, and it has a few quirks that frustrated me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Node doesn&#39;t have a standard templating language&lt;/strong&gt;.
Almost every theme I looked at used a different templating style, which made it difficult to generalize about how templates worked and how to customize them. On top of that, the templating framework used by the theme I chose turned out to be obsolete.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;There are too many dependencies&lt;/strong&gt;.
The quick-start instructions for setting up my Hexo site didn&#39;t include checking in a dependency lockfile. As a result, some transitive dependency updated and for unknown reasons broke Hexo&#39;s ability to generate my site. This crystallized my frustration with the overall Node dependency ecosystem.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The support community is not accessible to me&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hexo has a reasonable number of users, but many of them are Chinese-speaking. Many times when trying to debug an error or find a tutorial, I had trouble finding any results in my native language. I didn&#39;t think this would be an issue when I chose it, but I ended up having to debug a lot more than I predicted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Some of the defaults result in undesireable behaviour&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The final nail in the coffin of my Hexo experiment was realizing that by default permalinks include date information, but default date-time stamps in posts don&#39;t include time zone. This meant that URIs for all my posts sometimes changed depending on which timezone I was in when I generated the static files. This broke any links to my site and was overall much less permanent than &amp;ldquo;permalink&amp;rdquo; implies.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I probably could have worked all of these problems out, but the entire reason for using a static site generator is to not have to do all this code tweaking and maintenance!&lt;/p&gt;
&lt;h2 id=&#34;enter-hugo&#34;&gt;Enter Hugo&lt;/h2&gt;
&lt;p&gt;After a week or two of sulking, I picked Hugo as a replacement generator. I don&#39;t love any of the themes, but found one I can tolerate until I find time to make something custom. Hugo has the following selling points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The community and support seem vibrant. I haven&#39;t had any trouble so far finding documentation or tutorials for any issues I&#39;ve run in to.&lt;/li&gt;
&lt;li&gt;I am actively interested in learning more Go and find it straightforward to read both code and templates.&lt;/li&gt;
&lt;li&gt;The specific date issues I had with Hexo don&#39;t exist in Hugo.&lt;/li&gt;
&lt;li&gt;The post and front matter formats are identical, so I was able to simply copy-paste my previous source files into the new generator.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fingers crossed this will be the last major shakeup for a while, but at the very least I am moving on to new and different problems.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading this week: Nov 23</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week-3/</link>
       <pubDate>Sat, 23 Nov 2019 22:21:53 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week-3/</guid>
       <description>&lt;p&gt;Continuing on my haphazard self-education tour around distributed systems topics and other random corners of the internet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I feel like I learned so much from reading the transcript of this QCon panel moderated by Cindy Sridharan: &lt;a href=&#34;https://www.infoq.com/presentations/panel-perils-distributed-coordination/&#34;&gt;The Promises and Perils of Eschewing Distributed Coordination&lt;/a&gt;. I had to look up what a control plane is, and took notes on interesting ways distributed systems have failed.
&lt;ul&gt;
&lt;li&gt;new things to look into: Anna key-value store, Jepsen test framework, Google F1 paper&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Andi McClure wrote a cool Twitter thread about Sun Microsystems doomed &lt;a href=&#34;https://mobile.twitter.com/mcclure111/status/1196557401710837762&#34;&gt;predicted future of the internet&lt;/a&gt; with a little coda about how it compares to Google Stadia, which I still have not bothered to look up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This week&#39;s &lt;a href=&#34;https://vicki.substack.com&#34;&gt;Normcore Tech&lt;/a&gt; public post by Vicki Boykis was a fascinating dive into the Russian internet and how it is vastly different than we who grew up with the promise of a free and global internet might expect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can&#39;t remember how I stumbled across Martin Kleppmann&#39;s older post about &lt;a href=&#34;https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html&#34;&gt;how to do distributed locking&lt;/a&gt;, but it is a deliciously crunchy and opinionated accusal that Redis&#39;s algorithm for distributed locking fails to guarantee safety—ie that it is possible for two processes to get conflicting locks on the same resource. Had to lean on cloud computing concepts I learned recently, so this felt like a useful refresher! I did not read &lt;a href=&#34;http://antirez.com/news/101&#34;&gt;the rebuttal by the author of the algorithm&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Further in Kleppmann&#39;s blog archive I found more interesting mistakes in &lt;a href=&#34;https://martin.kleppmann.com/2014/03/26/six-things-about-scaling.html&#34;&gt;Six things I wish we had known about scaling&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Embedded Artistry blog recommends studying classic programs to improve your knowledge, and lists &lt;a href=&#34;https://embeddedartistry.com/blog/2019/05/06/programmers-lets-study-source-code-classics/&#34;&gt;freely available source code to classic programs&lt;/a&gt; to study&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I only recently learned who Barbara Liskov is, but thanks to this &lt;a href=&#34;https://www.quantamagazine.org/barbara-liskov-is-the-architect-of-modern-algorithms-20191120/&#34;&gt;Quanta Magazine interview&lt;/a&gt; I desperately wish I could hang out with her.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There&#39;s always at least one thing I love in every issue of Increment; for this month&#39;s &amp;ldquo;Teams&amp;rdquo; issue it&#39;s Kevin Stewart&#39;s article on &lt;a href=&#34;https://increment.com/teams/how-to-build-a-startup-engineering-team/&#34;&gt;how to build a startup engineering team&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you didn&#39;t know why the sale of the .org domain registry to a private company is so upsetting, well, &lt;a href=&#34;https://www.theregister.co.uk/AMP/2019/11/20/org_registry_sale_shambles/&#34;&gt;here&#39;s an article in the Register&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Saw a tweet about Paypal&#39;s new open source &lt;a href=&#34;https://github.com/paypal/scorebot&#34;&gt;Secure Code Review bot&lt;/a&gt; and decided to read the source code to figure out how it works. I am getting better at reading source code! Still a little vague on how to add new rules to compare against, the documentation is not terribly user friendly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading this week: Nov 16</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week-2/</link>
       <pubDate>Sat, 16 Nov 2019 10:45:00 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week-2/</guid>
       <description>&lt;ul&gt;
&lt;li&gt;I wanted to quickly check my intuition that Rust doesn&#39;t have garbage collection and instead found this &lt;a href=&#34;https://words.steveklabnik.com/borrow-checking-escape-analysis-amd-the-generational-hypothesis&#34;&gt;Steve Klabnik essay&lt;/a&gt; about that and a lot more. The takeaway I think is that Rust&#39;s static memory management makes GC redundant?&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;There was a lot of hoopla about the implicit algorithmic bias in the new Apple Card, but I found &lt;a href=&#34;https://dhh.dk/2019/about-the-apple-card.html&#34;&gt;Jamie Heinemeier Hansson&#39;s post&lt;/a&gt; particularly incisive. Especially the widely-quoted &amp;ldquo;justice for another rich white woman is not justice at all.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cockroachlabs.com/blog/parallel-commits&#34;&gt;Parallel Commits: An Atomic Commit Protocol For Globally Distributed Transactions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Cockroach Labs has this amazing blog full of crunchy technical details of design decisions they&#39;ve made when building CockroachDB, their distributed database product. I loved this deep dive into the complex intersection of atomic transactions and distributed consensus, with a brief sidebar into using TLA+ for formal verification.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3359656&#34;&gt;File Systems Unfit as Distributed Storage Backends: Lessons from 10 Years of Ceph Evolution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Having just learned about Ceph in a cloud computing course and read Alex Petrov&#39;s talk transcript about storage systems last week, I was in a much better position to understand this paper! I also leaned on the &lt;a href=&#34;https://blog.acolyer.org/2019/11/06/ceph-evolution/&#34;&gt;summary from The Morning Paper&lt;/a&gt; for some of the highlights.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Also helpful for getting a handle on file systems was this &lt;a href=&#34;https://mobile.twitter.com/Foone/status/1194762568948056064?s=20&#34;&gt;cool tweet thread about formatting floppy disks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I keep meaning to dig more into &lt;a href=&#34;https://mobile.twitter.com/vaidehijoshi&#34;&gt;Vaidehi Joshi&lt;/a&gt;&amp;lsquo;s BaseCS series, so today I randomly started with her &lt;a href=&#34;https://medium.com/basecs/leveling-up-ones-parsing-game-with-asts-d7a6fc2400ff&#34;&gt;intro to abstract syntax trees&lt;/a&gt;. It probably would have been better to start with the preceeding articles about parsers, but I&#39;ve had to interact with ASTs and parsers enough at work to have a basic foundation.&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading this week: Nov 9</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week-1/</link>
       <pubDate>Sat, 09 Nov 2019 21:47:59 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week-1/</guid>
       <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chelseatroy.com/category/leveling-up/&#34;&gt;Chelsea Troy&#39;s whole Leveling Up series&lt;/a&gt; is exactly the sort of thing I dreamed of writing when I thought about starting a blog.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Getting back to &lt;a href=&#34;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&#34;&gt;What Every Programmer Should Know About Memory&lt;/a&gt;, Ulrich Drepper&#39;s enormous paper about the foundational workings of computers. I keep putting it down and haring off on tangents about how much has changed since 2007, but I&#39;ve promised my paper reading group that I will get through all 50-odd pages and summarize it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chelsea Troy&#39;s three-part &lt;a href=&#34;https://chelseatroy.com/2018/08/01/api-design-part-1-before-there-was-rest/&#34;&gt;history of web API design&lt;/a&gt; is the first thing that ever made GraphQL click for me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not to diminish this &lt;a href=&#34;https://twitter.com/hexrcs/status/1190332090149150720&#34;&gt;10-tweet crash course in GraphQL&lt;/a&gt; by Xiaoru Li, which packs a lot of information into few words, but still uses a bit too much jargon to be a good introduction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dazeddigital.com/science-tech/article/45942/1/your-period-tracker-app-might-be-sharing-your-data-to-facebook&#34;&gt;Your period tracker might be sharing your sensitive data with Facebook&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This seems obvious in retrospect, and with Google buying Fitbit, I&#39;ve been thinking a lot about how I don&#39;t really &lt;em&gt;need&lt;/em&gt; to track my health data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.leanessays.com/2019/04/what-if-your-team-wrote-code-for-737.html&#34;&gt;What If Your Team Wrote the Code for the 737 MCAS System?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I don&#39;t write code for airplane controls, but the lessons of the 737 MAX and the Uber pedestrian death should be a reminder to all software developers that you are never &lt;em&gt;just&lt;/em&gt; an engineer. Software has consequences, and we should be thinking about the effects of what we build.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.brainpickings.org/2015/08/10/leisure-the-basis-of-culture-josef-pieper/&#34;&gt;Leisure, the Basis of Culture: An Obscure German Philosopher’s Timely 1948 Manifesto for Reclaiming Our Human Dignity in a Culture of Workaholism&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To be honest I don&#39;t think I could read this Josef Pieper book without considering it &lt;em&gt;work&lt;/em&gt;, but the reviewer clearly enjoyed it, and I find it useful to occasionally reflect on how much I am conceding to the Cult of Productivity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://timewitch.net/post/2019-11-03-when-cache-is-a-db/&#34;&gt;When a Cache is a Database&lt;/a&gt;, Vallery Lancey&#39;s neat post about the importance of making correct assumptions about the availability of services in production.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/presentations/storage-algorithms/&#34;&gt;Algorithms behind Modern Storage Systems&lt;/a&gt;, transcript of a talk by Alex Petrov&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Coincidentally, yesterday my coworker recommended Petrov&#39;s new book Database Internals, which is the same book mentioned in this 2018 talk! I was very tired when I skimmed this talk transcript, so I look forward to reading the book and understanding a bit better.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/17255186-the-phoenix-project&#34;&gt;The Phoenix Project&lt;/a&gt; by Gene Kim, Kevin Behr, George Spafford&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This book was recommended to me, and I kept seeing people talking up the sequel, &lt;em&gt;The Unicorn Project&lt;/em&gt;. I&#39;m not sure I got a lot out of it, since I am already aware of concepts like DevOps and the novel is a little formulaic—but at the same time I did read the whole book in one sitting, so I can see how it could be a more engaging introduction to the topic than a dry textbook.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fastcompany.com/90422553/the-first-map-of-americas-food-supply-chain-is-mind-boggling&#34;&gt;The first map of America’s food supply chain is mind-boggling&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This reads to me as &amp;ldquo;how to disrupt America&#39;s food supply chain&amp;rdquo; but maybe I&#39;m just pessimistic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/6570502-switch&#34;&gt;Switch: how to change things when change is hard&lt;/a&gt; by Chip Heath &amp;amp; Dan Heath (audiobook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The problem with reading one self-help book that debunks the theory of willpower exhaustion (Indistractable) is that every other self-help book published in the last 20 years uses willpower exhaustion as a foundation of their thesis, and &lt;em&gt;Switch&lt;/em&gt; is no exception. This is probably my own fault for enjoying pop-science books in the first place. However, once I decided to let slide the dubious science and tortuous elephant-and-rider metaphor, there is some reasonable advice for how to implement change in an organization. Still have a few hours left in this one.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://architecht.io/what-happened-to-hadoop-211aa52a297&#34;&gt;What happened to Hadoop&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When I saw Urs Hölzle&#39;s tweet saying &lt;a href=&#34;https://twitter.com/uhoelzle/status/1177360023976067077&#34;&gt;RIP MapReduce&lt;/a&gt; I was a little disoriented, having just finished a Coursera course on Cloud Computing that taught MapReduce as an important topic in Big Data. In an effort to find my footing again I searched for a summary of the current state of data processing. This article about the decline of Hadoop is the closest to what I was looking for. I guess this tech still exists, but is used in managed services instead of directly? My main takeaway is that by the time a specialization becomes popular on Coursera, much of what it says is probably outdated.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
     <item>
       <title>Review: Doing Good Better</title>
       <link>https://sfarqu.github.io/fabrefact/posts/review-doing-good-better/</link>
       <pubDate>Thu, 07 Nov 2019 21:54:20 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/review-doing-good-better/</guid>
       <description>&lt;p&gt;One of my lifelong values has always been &lt;em&gt;making a positive impact on the world&lt;/em&gt;. For a long time I lived paycheque-to-paycheque, but I still tried to put aside a percentage of my income for charitable giving. When I got a full-time software job, my income tripled overnight—which meant so did my donation budget.&lt;/p&gt;
&lt;p&gt;This left me with an unexpected problem: now that I have more money to give, who should I give it to? Should I increase my monthly donation to the existing charities I support, or branch out to new ones? How can I do the &lt;em&gt;most&lt;/em&gt; good with the resources I have?&lt;/p&gt;
&lt;p&gt;That latter question is the one posed by William MacAskill&#39;s book &lt;a href=&#34;https://www.effectivealtruism.org/doing-good-better/&#34;&gt;&lt;em&gt;Doing Good Better: How Effective Altruism Can Help You Make A Difference&lt;/em&gt;&lt;/a&gt;. I was excited to listen to this audiobook and finally have direction for my haphazard altruism.&lt;/p&gt;
&lt;h1 id=&#34;a-ruthless-efficiency&#34;&gt;A ruthless efficiency&lt;/h1&gt;
&lt;p&gt;This book applies economics and scientific reasoning to altruism, resulting in a rational and often mind-bendingly ruthless approach to doing good.&lt;/p&gt;
&lt;p&gt;As alluded to in &lt;a href=&#34;https://sfarqu.github.io/fabrefact/fabrefact/2019/11/01/what-I-m-reading-this-week/&#34;&gt;last week&#39;s reading list&lt;/a&gt;, the book got off on a bit of a wrong foot with me with an early assertion that addressing global poverty is where you get the most effect for your dollar, so you should never donate to other causes that you are personally attached to. By this logic I should immediately cease donating to my local food bank, because the people in my community are not poor enough by global standards.&lt;/p&gt;
&lt;p&gt;I do not disagree that my dollar can buy more food in sub-Saharan Africa, nor that the total amount of suffering in poor countries is greater than in Canada. At the same time it feels cold to only help faceless people in distant places and never my neighbours. The &amp;ldquo;effectiveness&amp;rdquo; argument presupposes that it is both possible and desirable for humans to be 100% logical, points I happen to think are more nuanced.&lt;/p&gt;
&lt;p&gt;That said, I completely agree that personal attachment should not be the &lt;em&gt;only&lt;/em&gt; consideration when choosing a cause to support. That&#39;s why I have been struggling to decide where to spend my charitable dollars, and why I am swayed by the idea of picking a solution based on effectiveness.&lt;/p&gt;
&lt;p&gt;Later chapters of Doing Good Better walk the initial assertion back a bit, both by introducing other topics that the Effective Altruism community considers worth supporting, and by including &amp;ldquo;personal fit&amp;rdquo; in the list of criteria you should consider when choosing a cause to donate, work, or volunteer for. Overall I found the book interesting, and it did provide some useful frameworks for evaluating different altruistic options.&lt;/p&gt;
&lt;h1 id=&#34;a-good-career-choice&#34;&gt;A good career choice&lt;/h1&gt;
&lt;p&gt;Memorable conclusions from this book include: being a software engineer who donates might be better for the world than working for a non-profit, buying Fair Trade does not help workers in poor countries, and sweatshops are good, actually,&lt;/p&gt;
&lt;p&gt;There is a whole section on career choices, which crunches the numbers and declares that unless you are a particularly good fit for a specific role, you will probably do more good in the world by making a buttload of money and donating a percentage of your income to an effective charitable organization. Since I happen to like being a software developer, this is a comfortable conclusion!&lt;/p&gt;
&lt;p&gt;Another section addresses ethical consumption, and makes some counter-intuitive judgements which amount to: ethical consumption doesn&#39;t help very much, maybe you should buy the cheaper bananas and donate the difference.&lt;/p&gt;
&lt;h1 id=&#34;a-framework-for-everything&#34;&gt;A framework for everything&lt;/h1&gt;
&lt;p&gt;A quirk of powering through an audiobook in a short period of time is that repeated words stand out quite strongly, and MacAskill sure loves to introduce a framework! That said, this was the most useful part of the book for me—tools to help select a cause or charity to support are exactly what I was looking for. I&#39;ve summarized a couple of the frameworks below. If you&#39;re interested in more detail, I suggest looking on the &lt;a href=&#34;https://www.effectivealtruism.org/&#34;&gt;Effective Altruism site&lt;/a&gt; or reading the book.&lt;/p&gt;
&lt;h2 id=&#34;how-to-evaluate-an-intervention&#34;&gt;How to evaluate an intervention&lt;/h2&gt;
&lt;h4 id=&#34;1-how-many-people-benefit-and-by-how-much&#34;&gt;1. How many people benefit, and by how much?&lt;/h4&gt;
&lt;p&gt;To have the greatest impact on the world, you should aim to help a large number of people, and improve their lives by a large amount.&lt;/p&gt;
&lt;h4 id=&#34;2-is-this-the-best-thing-you-can-do&#34;&gt;2. Is this the &lt;em&gt;best&lt;/em&gt; thing you can do?&lt;/h4&gt;
&lt;p&gt;The best programs are orders of magnitude more effective than merely &lt;em&gt;good&lt;/em&gt; programs. Therefore, if you care about this cause, you should aid the very best solutions.&lt;/p&gt;
&lt;h4 id=&#34;3-is-this-area-neglected&#34;&gt;3. Is this area neglected?&lt;/h4&gt;
&lt;p&gt;You will have more of an impact by donating to causes that are not already widely supported&lt;/p&gt;
&lt;h4 id=&#34;4-what-would-happen-otherwise&#34;&gt;4. What would happen otherwise?&lt;/h4&gt;
&lt;p&gt;If this action was never taken, what would the likely outcome be? If the answer is that it wouldn&#39;t be that bad, or might be even better than the expected outcome of this action, it might be better not to do it.&lt;/p&gt;
&lt;h4 id=&#34;5-what-are-the-chances-of-success-and-how-good-would-success-be&#34;&gt;5. What are the chances of success, and how good would success be?&lt;/h4&gt;
&lt;p&gt;By this metric, a program that is very likely to succeed and have a small impact and a relatively unlikely result that would be a massive improvement are both worthy investments.&lt;/p&gt;
&lt;h2 id=&#34;how-to-evaluate-a-charity&#34;&gt;How to evaluate a charity&lt;/h2&gt;
&lt;h4 id=&#34;1-what-does-this-charity-do&#34;&gt;1. What does this charity &lt;em&gt;do&lt;/em&gt;?&lt;/h4&gt;
&lt;p&gt;Beyond their advertising slogan, what &lt;em&gt;specific&lt;/em&gt; actions or interventions does the charity take?&lt;/p&gt;
&lt;h4 id=&#34;2-how-costeffective-is-each-program-area&#34;&gt;2. How cost-effective is each program area?&lt;/h4&gt;
&lt;p&gt;How much benefit is your dollar going to create?&lt;/p&gt;
&lt;h4 id=&#34;3-how-robust-is-the-evidence-behind-each-program&#34;&gt;3. How robust is the evidence behind each program?&lt;/h4&gt;
&lt;p&gt;Is there any proof that this intervention works?&lt;/p&gt;
&lt;h4 id=&#34;4-how-well-is-each-program-implemented&#34;&gt;4. How well is each program implemented?&lt;/h4&gt;
&lt;p&gt;Even if the idea is sound, does this specific charity do a good job of implementing it?&lt;/p&gt;
&lt;h4 id=&#34;5-does-the-charity-need-additional-funds&#34;&gt;5. Does the charity need additional funds?&lt;/h4&gt;
&lt;p&gt;Does your donation make any perceptible difference to this charity&#39;s ability to succeed?&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>Women Unite Over CTF - Solving Challenges</title>
       <link>https://sfarqu.github.io/fabrefact/posts/women-unite-over-ctf-solving-challenges/</link>
       <pubDate>Mon, 04 Nov 2019 16:04:02 -0800</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/women-unite-over-ctf-solving-challenges/</guid>
       <description>&lt;p&gt;The winner of the Women Unite Over CTF, Jaime Lightfoot, quickly posted writeups about how she solved the challenges. These posts (&lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-networking-challenges/&#34;&gt;networking challenges&lt;/a&gt;, &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-reverse-engineering-challenges/&#34;&gt;reverse engineering&lt;/a&gt;, and &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-linux-exploitation/&#34;&gt;Linux exploitation&lt;/a&gt;) are excellent for the same reasons I enjoyed the event in general: my main barrier to entry is not knowing what tools to use or what to look for.&lt;/p&gt;
&lt;p&gt;I thought of including details of my own problem-solving approach in my &lt;a href=&#34;https://sfarqu.github.io/fabrefact/fabrefact/posts/wtf-is-a-ctf/&#34;&gt;last post&lt;/a&gt;, but I didn&#39;t have the forethought to take any screenshots. Since I was working in a provided VM, I don&#39;t even have any of the challenge files or tools on my own computer. However, I ended up solving exactly the same problems as two of Jaime&#39;s posts, so here I will simply talk about how my solutions differed from hers.&lt;/p&gt;
&lt;h1 id=&#34;networking-challenges&#34;&gt;Networking challenges&lt;/h1&gt;
&lt;p&gt;(See &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-networking-challenges/&#34;&gt;Women Unite Over CTF - Networking Challenges&lt;/a&gt; for Jaime&#39;s solutions, with screenshots.)&lt;/p&gt;
&lt;p&gt;I opened up the networking challenges because technical difficulties delayed the start of the reverse engineering walkthroughs. I hovered over random icons in the Kali Linux VM, hoping that one of them was a tool for looking at network information. Luckily Wireshark was prominently placed!&lt;/p&gt;
&lt;p&gt;I have literally never used Wireshark before, but it&#39;s the tool everyone talks about so it seemed an obvious choice. I solved these pretty slowly, but now that I know a little bit about Wireshark I expect to be faster next time.&lt;/p&gt;
&lt;h3 id=&#34;level-1-helpfulwine&#34;&gt;level 1: helpfulwine&lt;/h3&gt;
&lt;p&gt;As soon as I opened the file and selected a packet at random, the flag showed up in the bottom pane. My first flag! It took a bit of trial and error to figure out how to copy it—I eventually had to paste whatever I copied into a text editor in order to strip out all the extraneous content before pasting the flag into the form.&lt;/p&gt;
&lt;h3 id=&#34;level-2-rhetoricalairplane&#34;&gt;level 2: rhetoricalairplane&lt;/h3&gt;
&lt;p&gt;Jaime used &lt;code&gt;frame contains &amp;quot;flag&amp;quot;&lt;/code&gt; in all of these to narrow down which packet contained the flag text, but I just clicked around randomly until I found it.&lt;/p&gt;
&lt;h3 id=&#34;level-3-numberlesslove&#34;&gt;level 3: numberlesslove&lt;/h3&gt;
&lt;p&gt;Again I just clicked around randomly looking for something called &amp;ldquo;flag&amp;rdquo;. Used the exact same strategy as Jaime here, which is heartening!&lt;/p&gt;
&lt;h3 id=&#34;level-4-warmsong&#34;&gt;level 4: warmsong&lt;/h3&gt;
&lt;p&gt;This is where I slowed down a lot, because I didn&#39;t know about the Export Objects function. I could see from the headers that it was a .docx so I assumed I had to extract the doc and open it&amp;hellip;but I didn&#39;t know how. I tried looking at a bunch of different packets, right clicking on things, copying and pasting the bytes into a file&amp;hellip;eventually I realized this must be a common problem and started looking for an export function.&lt;/p&gt;
&lt;p&gt;Once I successfully save the .doc, my next challenge was how to open a Word document in an unfamiliar OS. I searched for something like &amp;ldquo;how to open word doc linux command line&amp;rdquo; and learned &lt;code&gt;lowriter flag.doc&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;level-5-savoryhill&#34;&gt;level 5: savoryhill&lt;/h3&gt;
&lt;p&gt;Now that I knew about Export Objects function this went quickly. Export object as PNG, do a quick search to figure out what kind of program on Linux can open PNGs. The first search result suggested that &lt;code&gt;xdg-open&lt;/code&gt; is a good way to open a file in its default program.&lt;/p&gt;
&lt;h1 id=&#34;reverse-engineering-challenges&#34;&gt;Reverse engineering challenges&lt;/h1&gt;
&lt;p&gt;(See &lt;a href=&#34;https://jaimelightfoot.com/blog/women-unite-over-ctf-reverse-engineering-challenges/&#34;&gt;Women Unite Over CTF – Reverse Engineering Challenges&lt;/a&gt; for Jaime&#39;s solutions, with screenshots.)&lt;/p&gt;
&lt;p&gt;The reverse engineering challenges had walkthroughs on the live stream, which is good because I definitely wouldn&#39;t have gotten anywhere without them!&lt;/p&gt;
&lt;h3 id=&#34;level-1-calculateerratic&#34;&gt;level 1: calculateerratic&lt;/h3&gt;
&lt;p&gt;I followed Nada&#39;s walkthrough and used Binary Ninja, using the &lt;code&gt;View &amp;gt; Strings&lt;/code&gt; option Jaime mentions in the next problem. Nada talked about the &lt;code&gt;strings&lt;/code&gt; command but I never tried it.&lt;/p&gt;
&lt;h3 id=&#34;level-2-dustyabandon&#34;&gt;level 2: dustyabandon&lt;/h3&gt;
&lt;p&gt;The walkthroughs were also available as PDFs shared in the event Slack, so I started working a little ahead of the livestream. I spent a bunch of time in Binary Ninja, clicking on different views and trying to remember everything I ever knew about assembly.&lt;/p&gt;
&lt;p&gt;I found the password-constructing subfunction (&lt;code&gt;sub_40100&lt;/code&gt; highlighted in Jaime&#39;s writeup), and the PDF said something about using &lt;code&gt;R&lt;/code&gt; in Binary Ninja to switch to character representations, but I wasn&#39;t able to make heads nor tails of this code and didn&#39;t know what I was supposed to be switching. I waited for Nada&#39;s livestream to catch up. It seemed obvious as soon as Nada pointed out the hex codes!&lt;/p&gt;
&lt;p&gt;Definitely don&#39;t recognize hex values in the ASCII range off the top of my head, but maybe that&#39;s a skill to acquire?&lt;/p&gt;
&lt;h3 id=&#34;level-3-etherealshop&#34;&gt;level 3: etherealshop&lt;/h3&gt;
&lt;p&gt;By now I expected a program with a similar design to the first two and opened it up in Binary Ninja to verify the same pattern of password comparison. I kind of went down a rabbit hole trying to understand what assembly was doing and tuned into the livestream to get back on track.&lt;/p&gt;
&lt;p&gt;This is where my solution differed from Jaime&#39;s by a lot—the documentation suggested switching to dynamic analysis so I opened up the program in Ollydbg. (Sorry no screenshots for this part.) I used an address I had found in Binary Ninja to get to the right section of code, but mostly poked around trying to understand the interface until Nada started talking about setting a breakpoint.&lt;/p&gt;
&lt;p&gt;Breakpoints I understand! The step-in/step-over commands are similar to every IDE debugger I&#39;ve used, so it didn&#39;t take long to step through until the flag showed up in a register.&lt;/p&gt;
&lt;h3 id=&#34;level-4-expertquestion&#34;&gt;level 4: expertquestion&lt;/h3&gt;
&lt;p&gt;By now the contest was well over, and the Escalate platform was actually quite responsive, so I decided to tackle one more difficult problem. This one didn&#39;t have a walkthrough!&lt;/p&gt;
&lt;p&gt;I started the same process I&#39;d gone through with all the other RE problems. Like Jaime, I found that the password encryption now had three functions doing mysterious things to the encrypted password that looked very hairy to decipher in static analysis. Unlike Jaime, I did not have any insights over hard-coded bytes and encryption methods. Instead I opened up Ollydbg for some dynamic analysis.&lt;/p&gt;
&lt;p&gt;This part was a bit of a slog. Unlike level 3, the password didn&#39;t show up conveniently in the little window that seemed to hold the current instruction. When I stepped through the comparison of the user-entered text to the password, it instead went straight to the &amp;ldquo;You are not leet enough&amp;rdquo; message. I went back further and started stepping through the entire decryption function.&lt;/p&gt;
&lt;p&gt;Throughout this I was trying to piece together more about how Ollydbg works. There&#39;s a large pane in the top left that contains your program, and one on the top right that shows the contents of all the registers (as well as some other stuff that I never understood.) In the bottom right shows the stack—you can scroll down through it to see all the pointers in the call stack from other functions.&lt;/p&gt;
&lt;p&gt;That left the pane in the lower left as being I assume the heap? While stepping through the decryption process I eventually saw stuff starting to change here. At first it appeared to be random gibberish, but it still looked like a clue.&lt;/p&gt;
&lt;p&gt;The decryption has a bunch of loops, and I learned how to recognize what a loop looks like in assembly and skip to the next instruction if nothing relevant seems to happen inside. This was not the most efficient method, but I was worried if I skipped too far ahead I would miss the flag again!&lt;/p&gt;
&lt;p&gt;After far too long of this, the flag unscrambled itself in the pane I decided was the heap. Victory!&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Jaime&#39;s walkthroughs were a great refresher and a beginner-friendly introduction to some new techniques. I look forward to reading more from her, and maybe—just maybe—I&#39;ll remember to take some screenshots of my own next time.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>WTF is a CTF? A beginner&#39;s adventure</title>
       <link>https://sfarqu.github.io/fabrefact/posts/wtf-is-a-ctf/</link>
       <pubDate>Sat, 02 Nov 2019 18:24:49 -0700</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/wtf-is-a-ctf/</guid>
       <description>&lt;p&gt;Today I reverse-engineered binaries and pored over packet captures to find hidden information under a deadline, thereby checking another box in my quest to be the coolest person my 14-year-old self could imagine. This was all part of &lt;a href=&#34;https://ittakesahuman.com/lp/WomenUniteOverCTF.html&#34;&gt;Women Unite Over CTF&lt;/a&gt;, an online competition hosted by a number of cybersecurity communities.&lt;/p&gt;
&lt;h2 id=&#34;so-what-is-a-ctf&#34;&gt;So what &lt;em&gt;is&lt;/em&gt; a CTF?&lt;/h2&gt;
&lt;p&gt;A few weeks ago I had this exact question, after seeing the Women Unite event promoted by several people I follow on Twitter. A &lt;a href=&#34;https://ctftime.org/ctf-wtf/&#34;&gt;quick search&lt;/a&gt; told me CTF stands for &amp;ldquo;Capture the Flag&amp;rdquo;, and means a type of information security competition where players or teams compete to collect &amp;ldquo;flags&amp;rdquo; for points. This sounds, to be honest, &lt;em&gt;deeply intimidating&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I may be a professional software developer, but I have never been a hacker. I don&#39;t decompile software or use cheat codes in games, and I only switched my IDE to dark mode due to peer pressure from my coworkers. I hate the way the hacker stereotype involves taking joy from making other people feel stupid. I particularly hate feeling stupid.&lt;/p&gt;
&lt;p&gt;But I &lt;em&gt;love&lt;/em&gt; puzzle games.&lt;/p&gt;
&lt;p&gt;Removed from the competitive aspect, a Capture the Flag event is solving a series of puzzles using techniques like forensics and cryptography. This sounds fun to me! But the problem remains: how do you learn those techniques if you&#39;re just a regular person who has never considered exploiting a web server?&lt;/p&gt;
&lt;p&gt;It turns out CTFs are &lt;em&gt;not&lt;/em&gt; exclusively high-pressure clashes between technowizards who are out to crush your self esteem. Some events are explicitly aimed at beginners, and can serve as educational opportunities to get familiar with the tools and techniques.&lt;/p&gt;
&lt;h2 id=&#34;women-unite-over-ctf&#34;&gt;Women Unite Over CTF&lt;/h2&gt;
&lt;p&gt;I clicked on the Women Unite event with the thought of sending it to my coworker, who is actively studying security. However, my attention was caught by wording like &amp;ldquo;laidback&amp;rdquo; and &amp;ldquo;we&#39;ll give you a tutorial&amp;rdquo;. Could this be a friendly way to get started? I signed up on a whim.&lt;/p&gt;
&lt;h3 id=&#34;the-event&#34;&gt;The event&lt;/h3&gt;
&lt;p&gt;I was not precisely thrilled at getting up before 9am on a Saturday, but I was excited to learn new things! I still wasn&#39;t convinced I would solve a single puzzle.&lt;/p&gt;
&lt;h4 id=&#34;the-bad&#34;&gt;The bad&lt;/h4&gt;
&lt;p&gt;The online event had a bit of a rough start. The competition was hosted on Point3 Security&#39;s ESCALATE platform, which is supposed to provide a sandboxed environment full of well-designed challenges in various categories. Unfortunately, under the hammering of hundreds of attendees trying to log in, the system mostly provided 504 Gateway Timeouts.&lt;/p&gt;
&lt;p&gt;Look, I get it. I work in the tech industry, and sometimes despite your best efforts your system falls over and users are angry. &lt;em&gt;However&lt;/em&gt;, if you have a scheduled event coming up with a thousand people registered, please for the love of little fishes test what 1000 concurrent connections will do to your web app!&lt;/p&gt;
&lt;p&gt;I didn&#39;t care about prizes so wasn&#39;t too bummed about the late start, but it was still frustrating. It took well over an hour before I could even log in, and even then clicking any link could take up to five minutes or time out entirely. Since completing each challenge took at least five clicks, this was a huge tax on participation.&lt;/p&gt;
&lt;h4 id=&#34;the-good&#34;&gt;The good&lt;/h4&gt;
&lt;p&gt;Even so, the ESCALATE platform was pretty cool. The provided Linux VM was stocked with every conceivable application used for decompiling or inspecting files, and the problems themselves escalated in difficulty in a way that I was able to take what I&#39;d learned from one challenge and apply it to the next. After the competition was over and (I assume) most people had logged off, all the fancier features were able to load and I found the tool quite pleasant.&lt;/p&gt;
&lt;p&gt;The best part, however, were the tutorials. On the livestream the presenter Nada gave walkthroughs for three of the reverse-engineering challenges, including demonstrating which tools to use and some of the features of those tools. This was, to my mind, the most critical part.&lt;/p&gt;
&lt;p&gt;The tutorials themselves had some pretty advanced concepts compressed into a very short lesson, so I don&#39;t know how they would feel for complete beginners. Since I already know how to code and even have a vague understanding of assembly language I got the most value out of the sections that explained the thought process of which tools to choose for which parts of the process. (Although the assembly reference was also essential—I didn&#39;t have &lt;em&gt;that&lt;/em&gt; strong an understanding going in!)&lt;/p&gt;
&lt;p&gt;Due to the technical difficulties they extended the time of the contest and let everyone continue using the ESCALATE trial until the end of the day. This allowed me to keep plugging along at challenges on a system that was not currently being accidentally DDOSed. It was a rewarding and fun afternoon.&lt;/p&gt;
&lt;h3 id=&#34;the-results&#34;&gt;The results&lt;/h3&gt;
&lt;p&gt;I ended up solving 9 out of 28 challenges! I got all five in Network Foundations Level 1 and the easiest four Reverse Engineering problems. Three of those reverse engineering challenges had walkthroughs, but the last (and most complex!) I was able to extrapolate based on what I had learned in the previous lessons. The networking challenges I figured out for myself, starting from the knowledge of &amp;ldquo;Wireshark is a tool for looking at network stuff&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I came out with a basic knowledge of how to use Wireshark, BinaryNinja, and Ollydbg. More generally I learned about static and dynamic analysis of binaries, and a little bit about when and why to use them.&lt;/p&gt;
&lt;p&gt;After the event was over I was hype for more learning and signed up for a resource &lt;a href=&#34;https://dev.to/atan/what-is-ctf-and-how-to-get-started-3f04&#34;&gt;recommended for newcomers&lt;/a&gt;. Instead it has opaque problems with zero guidance labelled &amp;ldquo;very easy&amp;rdquo; and I hate it. Let&#39;s just say there&#39;s still room for improvement in this space.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://www.ittakesahuman.com/&#34;&gt;Point3 Security&lt;/a&gt;, &lt;a href=&#34;https://gatebreachers.org/&#34;&gt;Gatebreachers&lt;/a&gt;, &lt;a href=&#34;https://womenscyberjutsu.org/&#34;&gt;Women&#39;s Society of Cyberjutsu&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/WoSECtweets&#34;&gt;WoSEC&lt;/a&gt;, and &lt;a href=&#34;https://www.womenhackerz.com/&#34;&gt;WomenHackerz&lt;/a&gt; for putting on an event that, technical difficulties aside, succeeded in making security feel accessible.&lt;/p&gt;</description>
     </item>
   
     <item>
       <title>what I&#39;m reading this week: Oct 31</title>
       <link>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week/</link>
       <pubDate>Thu, 31 Oct 2019 20:26:57 -0700</pubDate>
       
       <guid>https://sfarqu.github.io/fabrefact/posts/what-i-m-reading-this-week/</guid>
       <description>&lt;p&gt;These days I am reading a lot across many devices and then immediately misplacing the references. Instead, here are some things I found interesting this week.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://segment.com/blog/the-10m-engineering-problem/&#34;&gt;The $10m engineering problem&lt;/a&gt;, blog post about how Segment cut their infrastructure costs by 30%
&lt;ul&gt;
&lt;li&gt;I found this fascinating! Hope to come back to it as I learn more about infrastructure design to see what else I can get out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Deep Work: rules for focused success in a distracted world&lt;/em&gt; by Cal Newport (audiobook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This book mostly made me angry, but buried in the endless tedious anecdotes about white men being successful is at least a blog post&#39;s worth of good advice.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arstechnica.com/gadgets/2019/10/how-a-months-old-amd-microcode-bug-destroyed-my-weekend/&#34;&gt;How a months-old AMD microcode bug destroyed my weekend&lt;/a&gt; Ars Technica article about a bug in certain AMD processors whose onboard random number generator always returns the same value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Doing Good Better: effective altruism and how you can make a difference&lt;/em&gt; by William MacAskill (audiobook)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I was on board with this technique until he said one should &lt;em&gt;never&lt;/em&gt; allow personal feelings toward an issue to influence your charitable giving. As I am still interested in effective altruism I will keep listening, but with greater skepticism.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xiang (Jenny) Ren, Kirk Rodrigues, Luyuan Chen, Camilo Vega, Michael Stumm, and Ding Yuan. 2019. &lt;a href=&#34;https://doi.org/10.1145/3341301.3359640&#34;&gt;An analysis of performance evolution of Linux&#39;s core operations&lt;/a&gt;. In Proceedings of the 27th ACM Symposium on Operating Systems Principles (SOSP &amp;lsquo;19). ACM, New York, NY, USA, 554-569.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This one digs pretty deep and I decided to come back to it after I finish the work about CPU architecture I have on hold&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two Twitter-threads-turned-blog-posts on Errata Security: &lt;a href=&#34;https://blog.erratasec.com/2019/08/thread-on-osi-model-is-lie.html&#34;&gt;Thread on the OSI model is a lie&lt;/a&gt; and &lt;a href=&#34;https://blog.erratasec.com/2019/08/thread-on-network-input-parsers.html&#34;&gt;Thread on network input parsers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I never did learn networking properly in school, but I seem to be finding a flurry of sources on protocols and algorithms so maybe it&#39;s time to stop being intimidated by the topic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amy Ousterhout, Adam Belay, and Irene Zhang. 2019. &lt;a href=&#34;https://www.usenix.org/conference/hotcloud19/presentation/ousterhout&#34;&gt;Just in time delivery: leveraging operating systems knowledge for better datacenter congestion control&lt;/a&gt;. In Proceedings of the 11th USENIX Conference on Hot Topics in Cloud Computing (HotCloud&#39;19).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In which the authors propose a Chimera operating system for datacenters, not to be confused with the &lt;a href=&#34;http://www.cs.cmu.edu/~aml/chimera/chimera.html&#34;&gt;Chimera Real Time Operating System&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/presentations/rust-security-guarantees/&#34;&gt;The Most Secure Program Is One That Doesn’t Exist&lt;/a&gt; by Diane Hosfelt (transcript of talk from QCon SF 2018)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Watching talks about Rust is one step closer to learning Rust, right?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
     </item>
   
 </channel>
</rss>
